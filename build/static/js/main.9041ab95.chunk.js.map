{"version":3,"sources":["images/login.jpg","page/Home/store/reducer.js","utils/axios.config.js","page/Home/store/actionCreators.js","page/Home/store/constants.js","page/BasicInformation/store/reducer.js","page/BasicInformation/store/actionCreators.js","page/BasicInformation/store/constants.js","page/ProjectInformation/store/reducer.js","page/ProjectInformation/store/actionCreators.js","page/ProjectInformation/store/constants.js","page/EducationInfo/store/reducer.js","page/EducationInfo/store/actionCreators.js","page/EducationInfo/store/constants.js","store/reduce.js","store/index.js","page/Home/components/Reminder.jsx","page/Home/components/BirthdayReminder.jsx","page/Home/components/FieldNumber.jsx","page/Home/components/Rejular.jsx","page/Home/index.jsx","components/Menu/index.jsx","components/Header/index.jsx","page/Login/index.jsx","components/Error/index.js","utils/optionEnum.js","page/BasicInformation/components/BasicModal.jsx","page/BasicInformation/basicColumns/index.jsx","page/BasicInformation/index.jsx","utils/tableTitle.config.js","page/EducationInfo/components/EducationModal.jsx","page/EducationInfo/index.jsx","page/ProjectInformation/components/ProjectModal.jsx","page/ProjectInformation/projectColumns/index.jsx","page/ProjectInformation/components/searchForm.jsx","page/ProjectInformation/index.jsx","page/Department/index.jsx","page/Leave/components/searchForm.jsx","page/Leave/index.jsx","page/Analysis/index.jsx","components/FrontendAuth/index.js","page/Layout/index.jsx","App.js","index.js"],"names":["module","exports","defaultState","rejularList","birthdayList","fieldList","reminderList","myTodoList","myTodoeducationData","regularTotal","fetch","axios","create","baseURL","process","BASE_URL","timeout","interceptors","request","use","config","token","localStorage","getItem","method","data","params","headers","error","Promise","reject","response","code","status","setItem","message","changeBirthdayList","payload","type","changeRejularList","changeFieldList","changeReminderList","changeMyToDoProjectList","changeMyToDoEducationList","getBirthdayList","dispatch","get","pageSize","currentPage","then","res","success","catch","err","getRejularList","arg0","total","getFieldList","getReminderList","queryMyToDoProject","queryMyToDoEducation","basicVisible","currentPageData","keyword","ipsaBuDeptId","ipsaDeptId","gender","joiningDay","empProperty","joiningDayStartTime","joiningDayEndTime","deliveryManagerId","basicRecord","basicList","rsData","dmData","buList","depList","dicList","dicModalList","manageList","gradeList","changeBasicVisible","changeBasicList","changeRsRoleData","changeDmRoleData","changeBuList","changeDepList","changeDepModalList","changeDicList","changemanageRoleData","changeGradeData","changeCurrentPageData","queryEmployeeBaseInfoList","post","basiclist","forEach","item","birthday","moment","format","correctionTime","saveEmployeeBaseInfo","getState","basic","record","updateEmployeeBaseInfo","deptInfoBu","queryUserListInfoByRolePermission","permission","roleData","searchEmployeeBaseInfoList","deptInfo","pid","id","dictInfo","dictName","projectVisible","projectRecord","projectDataList","firstCategoryidList","secondCategoryidList","thirdCategoryidList","aliGradeCodeList","workCityList","newProjectList","iframeList","careerGroupList","groupdeptList","careerdepList","deptIdList","saveSearchData","aliNo","projectId","joiningProjTimeFormat","firstCategoryId","secondCategoryId","thirdJobId","aliGradeCode","techDirection","aliFrameId","careerGroupId","groupDeptId","careerDeptId","deptId","projetDurationType","projetType","iduFlag","tlFlag","workCity","workAddress","resourceStatus","backboneFlag","chargeFlag","changeProjectVisible","changeProjectDataList","changeFocusFirstCategoryId","changeFocusSecondCategoryId","changeFocusThirdCategoryId","changeFocusAliGradeCategoryId","changeFocusWorkCity","changeFocusProjectList","changeFocusIframe","changeCareerGroupId","changeGroupDeptId","changeCareerDeptId","changeDeptId","changeSaveSearchSubmit","value","flag","queryProjectRecordInfoList","deptInfoIframe","console","log","updateProjectRecordInfoById","educVisible","educList","majorList","educRecord","imageUrl","fileId","uniformFlag","educationCode","changeEducationVisible","changeEducList","changeDircInfoList","queryEducationRecordInfoList","updateEducationRecordInfoById","reducer","combineReducers","home","state","action","project","educ","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reduce","month","Reminder","connect","actionCreators","handlGoToBasic","props","history","push","handlGoToEduc","this","className","style","minWidth","span","onClick","color","entryEmpTotal","leaveEmpTotal","Component","withRouter","columns","title","dataIndex","width","key","BirthdayReminder","padding","rowKey","index","dataSource","pagination","FieldNumber","Rejular","map","empName","regularTime","current","homeList","Home","height","Menus","selectRouterAactive","pathname","location","activeKey","substr","theme","backgroundColor","selectedKeys","mode","Item","to","Header","handleCancleLogin","display","justifyContent","bind","Login","handleSubmit","e","preventDefault","form","validateFields","values","username","password","getFieldDecorator","src","require","fontSize","labelCol","xs","sm","wrapperCol","onSubmit","rules","required","prefix","placeholder","valuePropName","initialValue","htmlType","Error","httAddress","genderEunm","label","uniformFlagEnum","educationCodeEnum","empPropertyEumn","name","onJobEnum","reminderColumnsForm","fixed","Option","inputList","dateList","managedisabled","BasicModal","handleCancel","resetFields","basicFormRules","validator","validFunction","rule","callback","field","Object","keys","length","baseFormInput","disabled","indexOf","onChange","handleChangeDate","handleGetOption","labelInValue","allowClear","newBasicRecord","JSON","parse","stringify","tab","date","dateString","handleProjectSubmit","event","empNo","birthdayFormat","joiningDayFormat","correctionTimeFormat","ipsaPostNo","ipsaGradeCode","directSuperiorId","directSuperiorName","deliveryManagerName","onJob","recruitmentUserId","recruitmentUserName","nextProps","visible","onOk","onCancel","okText","cancelText","includes","basicColumnsFunction","that","render","text","onjobKey","onJobLabel","ipsaBuDeptName","ipsaDeptName","ipsaPostName","ipsaGradeName","Search","RangePicker","BasicInformation","handleShowModel","handleChangeFile","file","fileList","handleBeforeUpload","handleSearchInput","employeeStatus","handleChangeSearchInput","target","handleChangeBuDeptId","newCurrentPageData","handleSearchList","dateStart","dateEnd","handleTableChange","page","entmonth","handleDownload","url","Authorization","responseType","blob","Blob","URL","createObjectURL","aLink","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","handleGetColumns","marginLeft","onSearch","enterButton","textAlign","marginRight","accept","showUploadList","beforeUpload","marginTop","hasFeedback","ranges","当天","本月","startOf","endOf","ref","el","tableHeight","educationList","leaveFormList","EducationModal","handleEducationSubmit","newfiledID","i","len","substring","majorCode","graduatedUniversities","avatarIdPath","newImageUrl","uid","handlePreview","previewVisible","previewImage","uploadButton","listType","onPreview","EducationInfo","handleShowModal","imgUrl","avatar","educStatusFlag","statusFlag","ProjectModal","handleFocusFirstCategoryId","handleFocusSecondCategoryId","handleFocusThirdCategoryId","handleFocusaliGradeCode","handleFocusWorkCity","handleFocusProjectList","handleFocusIframe","handleChangeIftame","handleOk","projectStartTimeFormat","shortTime","projectEndTimeFormat","level","match","join","projectName","managerId","managerName","businessLine","leaveProjReasonId","leaveProjType","handleChangeprojetType","setState","handleAfterClose","afterClose","joiningProjTime","showToday","onFocus","Array","isArray","projectColumnsFunction","newRecord","firstCategoryName","secondCategoryName","thirdJobName","aliGradeCodeName","aliFrameName","careerGroupName","groupDeptName","careerDeptName","deptName","SearchForm","handleSearchSubmit","ipsaBaliFrameIduDeptId","ProjectInformation","thats","handleSonSearch","scroll","x","Department","searchListNo","Analysis","FrontendAuth","routerList","Layout","exact","path","component","Leave","App","locale","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9041ab95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.8f9a2c7f.jpg\";","import * as constants from './constants';\n\nconst defaultState = {\n  rejularList: [],\n  birthdayList: [],\n  fieldList: [],\n  reminderList: {},\n  myTodoList: [],\n  myTodoeducationData: '',\n  regularTotal: 1\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.REGULAR_DETAIL:\n      return {\n        ...state,\n        rejularList: payload.data,\n        regularTotal: payload.regularTotal\n      };\n    case constants.BIRTHDAY_DETAIL:\n      return { ...state, birthdayList: payload };\n    case constants.FIELD_DETAIL:\n      return { ...state, fieldList: payload };\n    case constants.REMINDER_DETAIL:\n      return { ...state, reminderList: payload };\n    case constants.MYTOPROJECT_DETAIL:\n      return { ...state, myTodoList: payload };\n    case constants.MYTOEDUCATION_DETAIL:\n      return { ...state, myTodoeducationData: payload };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n/****** 创建axios实例 ******/\nconst fetch = axios.create({\n  baseURL: process.env.BASE_URL, // api的base_url\n  timeout: 6000 // 请求超时时间\n});\n\n/****** request拦截器==>对请求参数做处理 ******/\nfetch.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    // const data = JSON.parse(JSON.stringify(config.data));\n    config.method === 'post'\n      ? (config.data = { ...config.data })\n      : (config.params = { ...config.params });\n    config.headers['Authorization'] = 'Bearer ' + token;\n\n    return config;\n  },\n  error => {\n    //请求错误处理\n    Promise.reject(error);\n  }\n);\n\n/****** respone拦截器==>对响应做处理 ******/\nfetch.interceptors.response.use(\n  response => {\n    //成功请求到数据\n    if (response.data.code === '200') {\n      return response.data;\n    } else {\n      return response.data;\n    }\n  },\n  error => {\n    //响应错误处理\n    if (error && error.response && error.response.status === 401) {\n      const data = {\n        data: {\n          message: '请重新登录'\n        }\n      };\n      localStorage.setItem('token', null);\n      localStorage.setItem('flag', false);\n      return Promise.reject(data);\n    }\n    return Promise.reject(error.response);\n  }\n);\nexport default fetch;\n","import * as constants from './constants';\nimport fetch from '../../../utils/axios.config';\n// import axios from 'axios';\nimport { message } from 'antd';\n\nexport const changeBirthdayList = payload => ({\n  type: constants.BIRTHDAY_DETAIL,\n  payload\n});\n\nexport const changeRejularList = payload => ({\n  type: constants.REGULAR_DETAIL,\n  payload\n});\n\nexport const changeFieldList = payload => ({\n  type: constants.FIELD_DETAIL,\n  payload\n});\n\nexport const changeReminderList = payload => ({\n  type: constants.REMINDER_DETAIL,\n  payload\n});\n\nexport const changeMyToDoProjectList = payload => ({\n  type: constants.MYTOPROJECT_DETAIL,\n  payload\n});\n\nexport const changeMyToDoEducationList = payload => ({\n  type: constants.MYTOEDUCATION_DETAIL,\n  payload\n});\n\n//获取生日列表\nexport const getBirthdayList = () => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryEmployeeBirthdayCountByMonth.json', {\n        params: {\n          pageSize: 3,\n          currentPage: 1\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          dispatch(changeBirthdayList(data));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获转正列表\nexport const getRejularList = () => {\n  return dispatch => {\n    fetch\n      .get('api/home/queryWillRegularEmployee.json', {\n        params: {\n          pageSize: 6,\n          currentPage: 1\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          const arg0 = {\n            data: data.data,\n            regularTotal: data.total\n          };\n          dispatch(changeRejularList(arg0));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取场地人数列表\nexport const getFieldList = () => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryAreaEmployeeCount.json', {\n        params: {\n          pageSize: 3,\n          currentPage: 1\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          dispatch(changeFieldList(data.data));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取入职离职列表\nexport const getReminderList = () => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryEmployeeCountByMonthAndStatus.json')\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          dispatch(changeReminderList(data));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//查询项目待办事项\nexport const queryMyToDoProject = () => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryMyToDoProject.json')\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          dispatch(changeMyToDoProjectList(data));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//查询项目待办事项\nexport const queryMyToDoEducation = () => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryMyToDoEducation.json')\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          dispatch(changeMyToDoEducationList(data));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n","export const REGULAR_DETAIL = 'home/REGULAR_DETAIL';\nexport const BIRTHDAY_DETAIL = 'home/BIRTHDAY_DETAIL';\nexport const FIELD_DETAIL = 'home/FIELD_DETAIL';\nexport const REMINDER_DETAIL = 'home/REMINDER_DETAIL';\nexport const MYTOPROJECT_DETAIL = 'home/MYTOPROJECT_DETAIL';\nexport const MYTOEDUCATION_DETAIL = 'home/MYTOEDUCATION_DETAIL';\n","import * as constants from './constants';\n\nconst defaultState = {\n  basicVisible: false,\n  currentPageData: {\n    currentPage: 1,\n    pageSize: 10,\n    keyword: '',\n    ipsaBuDeptId: '',\n    ipsaDeptId: '',\n    gender: '',\n    joiningDay: '',\n    empProperty: '',\n    joiningDayStartTime: '',\n    joiningDayEndTime: '',\n    deliveryManagerId: ''\n  },\n  basicRecord: {},\n  basicList: [],\n  rsData: [],\n  dmData: [],\n  buList: [],\n  depList: [],\n  dicList: [],\n  dicModalList: [],\n  manageList: [],\n  gradeList: [],\n  total: 1\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.CHANGE_BASICVISIBLE:\n      return {\n        ...state,\n        basicVisible: payload.basicVisible,\n        basicRecord: payload.record\n      };\n    case constants.CHANGE_BASICLIST:\n      return { ...state, basicList: payload.basiclist, total: payload.total };\n    case constants.RS_ROLE:\n      return { ...state, rsData: payload };\n    case constants.DM_ROLE:\n      return { ...state, dmData: payload };\n    case constants.CHANGE_BULIST:\n      return { ...state, buList: payload };\n    case constants.CHANGE_DEPLIST:\n      return { ...state, depList: payload };\n    case constants.CHANGE_DICLIST:\n      return { ...state, dicList: payload };\n    case constants.CHANGE_DEPMODALLIST:\n      return { ...state, dicModalList: payload };\n    case constants.CHANGE_MANAGELIST:\n      return { ...state, manageList: payload };\n    case constants.CHANGE_GRADELIST:\n      return { ...state, gradeList: payload };\n    case constants.CURRENTPAGEDATA:\n      return { ...state, currentPageData: payload };\n    default:\n      return state;\n  }\n};\n","import * as constants from './constants';\nimport { message } from 'antd';\nimport fetch from '../../../utils/axios.config';\nimport moment from 'moment';\n\nexport const changeBasicVisible = payload => ({\n  type: constants.CHANGE_BASICVISIBLE,\n  payload\n});\n\nexport const changeBasicList = payload => ({\n  type: constants.CHANGE_BASICLIST,\n  payload\n});\n\nexport const changeRsRoleData = payload => ({\n  type: constants.RS_ROLE,\n  payload\n});\n\nexport const changeDmRoleData = payload => ({\n  type: constants.DM_ROLE,\n  payload\n});\n\nexport const changeBuList = payload => ({\n  type: constants.CHANGE_BULIST,\n  payload\n});\n\nexport const changeDepList = payload => ({\n  type: constants.CHANGE_DEPLIST,\n  payload\n});\n\nexport const changeDepModalList = payload => ({\n  type: constants.CHANGE_DEPMODALLIST,\n  payload\n});\n\nexport const changeDicList = payload => ({\n  type: constants.CHANGE_DICLIST,\n  payload\n});\n\nexport const changemanageRoleData = payload => ({\n  type: constants.CHANGE_MANAGELIST,\n  payload\n});\n\nexport const changeGradeData = payload => ({\n  type: constants.CHANGE_GRADELIST,\n  payload\n});\n\nexport const changeCurrentPageData = payload => ({\n  type: constants.CURRENTPAGEDATA,\n  payload\n});\n\n//获取基础信息列表\nexport const queryEmployeeBaseInfoList = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/base/queryEmployeeBaseInfoList.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          const basiclist = res.data.data;\n          const total = res.data.total;\n          basiclist.forEach(item => {\n            item.birthday = moment(item.birthday).format('YYYY-MM-DD');\n            item.joiningDay = moment(item.joiningDay).format('YYYY-MM-DD');\n            item.correctionTime = item.correctionTime\n              ? moment(item.correctionTime).format('YYYY-MM-DD')\n              : '';\n          });\n          dispatch(\n            changeBasicList({\n              basiclist,\n              total\n            })\n          );\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//新增基础信息\nexport const saveEmployeeBaseInfo = payload => {\n  return (dispatch, getState) => {\n    const { currentPageData } = getState().basic;\n    const arg0 = {\n      currentPage: currentPageData.currentPage,\n      pageSize: 10\n    };\n    fetch\n      .post('/api/base/saveEmployeeBaseInfo.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          dispatch(\n            changeBasicVisible({\n              basicVisible: false,\n              record: {}\n            })\n          );\n          message.success('新员工新增成功');\n          dispatch(queryEmployeeBaseInfoList(arg0));\n        } else {\n          message.error('新员工新增失败' + res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error('新员工新增失败：' + err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//编辑基础信息\nexport const updateEmployeeBaseInfo = payload => {\n  return (dispatch, getState) => {\n    const { currentPageData } = getState().basic;\n    const arg0 = {\n      currentPage: currentPageData.currentPage,\n      pageSize: 10\n    };\n    fetch\n      .post('/api/base/updateEmployeeBaseInfo.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          dispatch(\n            changeBasicVisible({\n              basicVisible: false,\n              record: {}\n            })\n          );\n          message.success('修改成功');\n          dispatch(queryEmployeeBaseInfoList(arg0));\n        } else {\n          message.error('修改失败：' + res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//查询BU列表\nexport const deptInfoBu = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/bu')\n      .then(res => {\n        if (res && res.success) {\n          const buList = res.data;\n          dispatch(changeBuList(buList));\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//查询招聘顾问，交付经理和项目经理\nexport const queryUserListInfoByRolePermission = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/user/queryUserListInfoByRolePermission.json', {\n        params: {\n          permission: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const roleData = res.data;\n          switch (payload) {\n            case 'recruitmentConsultant':\n              dispatch(changeRsRoleData(roleData));\n              break;\n            case 'deliveryManager':\n              dispatch(changeDmRoleData(roleData));\n              break;\n            case 'projectManage':\n              dispatch(changemanageRoleData(roleData));\n              break;\n            default:\n              break;\n          }\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//搜索栏输入查询\nexport const searchEmployeeBaseInfoList = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/base/searchEmployeeBaseInfoList.json', {\n        params: {\n          currentPage: 1,\n          pageSize: 10,\n          keyword: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const basiclist = res.data.data;\n          dispatch(changeBasicList(basiclist));\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取部门\nexport const deptInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/pid', {\n        params: {\n          pid: payload.id ? payload.id : payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const depList = res.data;\n          if (payload.id) {\n            dispatch(changeDepModalList(depList));\n          } else {\n            dispatch(changeDepList(depList));\n          }\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//通用职位及id字典查询\nexport const dictInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/dictInfo/name', {\n        params: {\n          dictName: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const dicList = res.data;\n          switch (payload) {\n            case 'general_position':\n              dispatch(changeDicList(dicList));\n              break;\n            case 'position_grade_code':\n              dispatch(changeGradeData(dicList));\n              break;\n            default:\n              break;\n          }\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n","export const CHANGE_BASICVISIBLE = 'basic/CHANGE_BASICVISIBLE';\nexport const CHANGE_BASICLIST = 'basic/CHANGE_BASICLIST';\nexport const RS_ROLE = 'basic/RS_ROLE';\nexport const DM_ROLE = 'basic/DM_ROLE';\nexport const CHANGE_BULIST = 'basic/CHANGE_BULIST';\nexport const CHANGE_DEPLIST = 'basic/CHANGE_DEPLIST';\nexport const CHANGE_DICLIST = 'basic/CHANGE_DICLIST';\nexport const CHANGE_DEPMODALLIST = 'basic/CHANGE_DEPMODALLIST';\nexport const CHANGE_MANAGELIST = 'basic/CHANGE_MANAGELIST';\nexport const CHANGE_GRADELIST = 'basic/CHANGE_GRADELIST';\nexport const CURRENTPAGEDATA = 'basic/CURRENTPAGEDATA';\n","import * as constants from './constants';\n\nconst defaultState = {\n  projectVisible: false,\n  projectRecord: {},\n  buList: [],\n  depList: [],\n  projectDataList: [],\n  total: 1,\n  firstCategoryidList: [],\n  secondCategoryidList: [],\n  thirdCategoryidList: [],\n  aliGradeCodeList: [],\n  workCityList: [],\n  newProjectList: [],\n  iframeList: [],\n  careerGroupList: [],\n  groupdeptList: [],\n  careerdepList: [],\n  deptIdList: [],\n  saveSearchData: {},\n  currentPageData: {\n    currentPage: 1,\n    pageSize: 10,\n    aliNo: '',\n    ipsaBuDeptId: '',\n    ipsaDeptId: '',\n    projectId: '',\n    joiningProjTimeFormat: '',\n    firstCategoryId: '',\n    secondCategoryId: '',\n    thirdJobId: '',\n    aliGradeCode: '',\n    techDirection: '',\n    aliFrameId: '',\n    careerGroupId: '',\n    groupDeptId: '',\n    careerDeptId: '',\n    deptId: '',\n    projetDurationType: '',\n    projetType: '',\n    iduFlag: '',\n    tlFlag: '',\n    workCity: '',\n    workAddress: '',\n    resourceStatus: '',\n    backboneFlag: '',\n    chargeFlag: '',\n    keyword: ''\n  }\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.CHANGE_PROJECTVISIBLE:\n      return {\n        ...state,\n        projectVisible: payload.projectVisible,\n        projectRecord: payload.record\n      };\n    case constants.CHANGE_BULIST:\n      return {\n        ...state,\n        buList: payload\n      };\n    case constants.CHANGE_DEPLIST:\n      return {\n        ...state,\n        depList: payload\n      };\n    case constants.CHANGE_PROJECTDATALIST:\n      return {\n        ...state,\n        projectDataList: payload.data,\n        total: payload.total\n      };\n    case constants.CHANGE_FIRSTCATEGORYID:\n      return {\n        ...state,\n        firstCategoryidList: payload\n      };\n    case constants.CHANGE_SECONDCATEGORYID:\n      return {\n        ...state,\n        secondCategoryidList: payload\n      };\n    case constants.CHANGE_THIRDCATEGORYID:\n      return {\n        ...state,\n        thirdCategoryidList: payload\n      };\n    case constants.CHANGE_ALIGRADECODE:\n      return {\n        ...state,\n        aliGradeCodeList: payload\n      };\n    case constants.CHANGE_WORKCITY:\n      return {\n        ...state,\n        workCityList: payload\n      };\n    case constants.CHANGE_PROJECTPAGE:\n      return {\n        ...state,\n        currentPageData: payload\n      };\n    case constants.CHANGE_NEWPROJECTDATALIST:\n      return {\n        ...state,\n        newProjectList: payload\n      };\n    case constants.CHANGE_IFRAME:\n      return {\n        ...state,\n        iframeList: payload\n      };\n    case constants.CHANGE_CAREERGROUP:\n      return {\n        ...state,\n        careerGroupList: payload\n      };\n    case constants.CHANGE_GROUPDEPT:\n      return {\n        ...state,\n        groupdeptList: payload\n      };\n    case constants.CHANGE_CAREERDEPT:\n      return {\n        ...state,\n        careerdepList: payload\n      };\n    case constants.CHANGE_DEPTID:\n      return {\n        ...state,\n        deptIdList: payload\n      };\n    case constants.CHANGE_SAVESEARCHSUBMIT:\n      return {\n        ...state,\n        saveSearchData: payload\n      };\n    default:\n      return state;\n  }\n};\n","import * as constants from './constants';\nimport { message } from 'antd';\nimport fetch from '../../../utils/axios.config';\n\nexport const changeProjectVisible = payload => ({\n  type: constants.CHANGE_PROJECTVISIBLE,\n  payload\n});\n\nexport const changeBuList = payload => ({\n  type: constants.CHANGE_BULIST,\n  payload\n});\n\nexport const changeDepList = payload => ({\n  type: constants.CHANGE_DEPLIST,\n  payload\n});\n\nexport const changeProjectDataList = payload => ({\n  type: constants.CHANGE_PROJECTDATALIST,\n  payload\n});\n\nexport const changeFocusFirstCategoryId = payload => ({\n  type: constants.CHANGE_FIRSTCATEGORYID,\n  payload\n});\n\nexport const changeFocusSecondCategoryId = payload => ({\n  type: constants.CHANGE_SECONDCATEGORYID,\n  payload\n});\n\nexport const changeFocusThirdCategoryId = payload => ({\n  type: constants.CHANGE_THIRDCATEGORYID,\n  payload\n});\n\nexport const changeFocusAliGradeCategoryId = payload => ({\n  type: constants.CHANGE_ALIGRADECODE,\n  payload\n});\n\nexport const changeFocusWorkCity = payload => ({\n  type: constants.CHANGE_WORKCITY,\n  payload\n});\n\nexport const changeCurrentPageData = payload => ({\n  type: constants.CHANGE_PROJECTPAGE,\n  payload\n});\n\nexport const changeFocusProjectList = payload => ({\n  type: constants.CHANGE_NEWPROJECTDATALIST,\n  payload\n});\n\nexport const changeFocusIframe = payload => ({\n  type: constants.CHANGE_IFRAME,\n  payload\n});\n\nexport const changeCareerGroupId = payload => ({\n  type: constants.CHANGE_CAREERGROUP,\n  payload\n});\n\nexport const changeGroupDeptId = payload => ({\n  type: constants.CHANGE_GROUPDEPT,\n  payload\n});\n\nexport const changeCareerDeptId = payload => ({\n  type: constants.CHANGE_CAREERDEPT,\n  payload\n});\n\nexport const changeDeptId = payload => ({\n  type: constants.CHANGE_DEPTID,\n  payload\n});\n\nexport const changeSaveSearchSubmit = payload => ({\n  type: constants.CHANGE_SAVESEARCHSUBMIT,\n  payload\n});\n\n//查询BU列表\nexport const deptInfoBu = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/bu')\n      .then(res => {\n        if (res && res.success) {\n          const buList = res.data;\n          dispatch(changeBuList(buList));\n        } else {\n          message.error('出错了');\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//获取部门\nexport const deptInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/pid', {\n        params: {\n          pid: payload.value ? payload.value : ''\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const depList = res.data;\n          switch (payload.flag) {\n            case 'aliFrameId':\n              dispatch(changeCareerGroupId(depList));\n              break;\n            case 'zero':\n              dispatch(changeFocusIframe(depList));\n              break;\n            case 'careerGroupId':\n              dispatch(changeGroupDeptId(depList));\n              break;\n            case 'groupDeptId':\n              dispatch(changeCareerDeptId(depList));\n              break;\n            case 'careerDeptId':\n              dispatch(changeDeptId(depList));\n              break;\n            case 'bu':\n              dispatch(changeDepList(depList));\n              break;\n            default:\n              break;\n          }\n        }\n      })\n      .catch(err => {\n        if (err && err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//查询项目列表接口\nexport const queryProjectRecordInfoList = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/project/queryProjectRecordInfoList.json', payload)\n      .then(res => {\n        if (res && res.success && res.data) {\n          const { data, total } = res.data;\n          dispatch(\n            changeProjectDataList({\n              data,\n              total\n            })\n          );\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//获取框架\nexport const deptInfoIframe = payload => {\n  console.log('payload', payload);\n\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/frame', {\n        params: {\n          pid: payload.value\n        }\n      })\n      .then(res => {\n        if (res && res.success && res.data) {\n          console.log('res', res);\n          const { data } = res;\n          switch (payload.flag) {\n            case 'aliFrameId':\n              dispatch(changeCareerGroupId(data));\n              break;\n            case 'zero':\n              dispatch(changeFocusIframe(data));\n              break;\n            case 'careerGroupId':\n              dispatch(changeGroupDeptId(data));\n              break;\n            case 'groupDeptId':\n              dispatch(changeCareerDeptId(data));\n              break;\n            case 'careerDeptId':\n              dispatch(changeDeptId(data));\n              break;\n            default:\n              break;\n          }\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//字典查询\nexport const dictInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/dictInfo/name', {\n        params: {\n          dictName: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const dicList = res.data;\n          switch (payload) {\n            case 'job_class_1':\n              dispatch(changeFocusFirstCategoryId(dicList));\n              break;\n            case 'job_class_2':\n              dispatch(changeFocusSecondCategoryId(dicList));\n              break;\n            case 'job_class_3':\n              dispatch(changeFocusThirdCategoryId(dicList));\n              break;\n            case 'job_class_level':\n              dispatch(changeFocusAliGradeCategoryId(dicList));\n              break;\n            case 'work_city':\n              dispatch(changeFocusWorkCity(dicList));\n              break;\n            case 'project_list':\n              dispatch(changeFocusProjectList(dicList));\n              break;\n            default:\n              break;\n          }\n        } else {\n          message.error('获取一类岗位失败');\n        }\n      })\n      .catch(err => {\n        if (err && err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//修改项目信息接口\nexport const updateProjectRecordInfoById = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/project/updateProjectRecordInfoById.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          message.success('编辑成功');\n          dispatch(\n            changeProjectVisible({\n              projectVisible: false,\n              record: {}\n            })\n          );\n          dispatch(\n            queryProjectRecordInfoList({\n              currentPage: 1,\n              pageSize: 10\n            })\n          );\n        } else {\n          message.error('提交失败：' + res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n","export const CHANGE_PROJECTVISIBLE = 'project/CHANGE_PROJECTVISIBLE';\nexport const CHANGE_BULIST = 'project/CHANGE_BULIST';\nexport const CHANGE_DEPLIST = 'project/CHANGE_DEPLIST';\nexport const CHANGE_PROJECTDATALIST = 'project/CHANGE_PROJECTDATALIST';\nexport const CHANGE_FIRSTCATEGORYID = 'project/CHANGE_FIRSTCATEGORYID';\nexport const CHANGE_SECONDCATEGORYID = 'project/CHANGE_SECONDCATEGORYID';\nexport const CHANGE_THIRDCATEGORYID = 'project/CHANGE_THIRDCATEGORYID';\nexport const CHANGE_ALIGRADECODE = 'project/CHANGE_ALIGRADECODE';\nexport const CHANGE_WORKCITY = 'project/CHANGE_WORKCITY';\nexport const CHANGE_PROJECTPAGE = 'project/CHANGE_PROJECTPAGE';\nexport const CHANGE_NEWPROJECTDATALIST = 'project/CHANGE_NEWPROJECTDATALIST';\nexport const CHANGE_IFRAME = 'project/CHANGE_IFRAME';\nexport const CHANGE_CAREERGROUP = 'project/CHANGE_CAREERGROUP';\nexport const CHANGE_GROUPDEPT = 'project/CHANGE_GROUPDEPT';\nexport const CHANGE_CAREERDEPT = 'project/CHANGE_CAREERDEPT';\nexport const CHANGE_DEPTID = 'project/CHANGE_DEPTID';\nexport const CHANGE_SAVESEARCHSUBMIT = 'project/CHANGE_SAVESEARCHSUBMIT';\n","import * as constants from './constants';\n\nconst defaultState = {\n  educVisible: false,\n  buList: [],\n  depList: [],\n  educList: [],\n  total: 1,\n  majorList: [],\n  educRecord: {},\n  imageUrl: [],\n  fileId: '',\n  currentPageData: {\n    currentPage: 1,\n    pageSize: 10,\n    keyword: '',\n    ipsaDeptId: '',\n    ipsaBuDeptId: '',\n    uniformFlag: '',\n    educationCode: ''\n  }\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.CHANGE_EDUCATIONVISIBLE:\n      return {\n        ...state,\n        educVisible: payload.educVisible,\n        educRecord: payload.record,\n        imageUrl: payload.imageUrl,\n        fileId: payload.fileId\n      };\n    case constants.CHANGE_BULIST:\n      return {\n        ...state,\n        buList: payload\n      };\n    case constants.CHANGE_DEPLIST:\n      return {\n        ...state,\n        depList: payload\n      };\n    case constants.CHANGE_EDUCLIST:\n      return {\n        ...state,\n        educList: payload.educList,\n        total: payload.total\n      };\n    case constants.CHANGE_MAGORLIST:\n      return {\n        ...state,\n        majorList: payload\n      };\n    case constants.CHANGE_CURRENTPAGE:\n      return {\n        ...state,\n        currentPageData: payload\n      };\n    default:\n      return state;\n  }\n};\n","import * as constants from './constants';\nimport { message } from 'antd';\nimport fetch from '../../../utils/axios.config';\n\nexport const changeEducationVisible = payload => ({\n  type: constants.CHANGE_EDUCATIONVISIBLE,\n  payload\n});\n\nexport const changeBuList = payload => ({\n  type: constants.CHANGE_BULIST,\n  payload\n});\n\nexport const changeDepList = payload => ({\n  type: constants.CHANGE_DEPLIST,\n  payload\n});\n\nexport const changeEducList = payload => ({\n  type: constants.CHANGE_EDUCLIST,\n  payload\n});\n\nexport const changeDircInfoList = payload => ({\n  type: constants.CHANGE_MAGORLIST,\n  payload\n});\n\nexport const changeCurrentPageData = payload => ({\n  type: constants.CHANGE_CURRENTPAGE,\n  payload\n});\n//查询BU列表\nexport const deptInfoBu = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/bu')\n      .then(res => {\n        if (res && res.success) {\n          const buList = res.data;\n          dispatch(changeBuList(buList));\n        } else {\n          message.error('出错了');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取部门\nexport const deptInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/pid', {\n        params: {\n          pid: payload.id ? payload.id : payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const depList = res.data;\n          dispatch(changeDepList(depList));\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取学历信息列表\nexport const queryEducationRecordInfoList = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/education/queryEducationRecordInfoList.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          const educList = res.data.data;\n          const total = res.data.total;\n          dispatch(\n            changeEducList({\n              educList,\n              total\n            })\n          );\n        } else {\n          message.error('出错了');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\nexport const dictInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/dictInfo/name', {\n        params: {\n          dictName: 'major_code'\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const data = res.data;\n          dispatch(changeDircInfoList(data));\n        } else {\n          message.error(res.message && res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\nexport const updateEducationRecordInfoById = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/education/updateEducationRecordInfoById.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          message.success('学历编辑成功');\n          dispatch(\n            changeEducationVisible({\n              educVisible: false,\n              record: {},\n              imageUrl: []\n            })\n          );\n          dispatch(\n            queryEducationRecordInfoList({\n              currentPage: 1,\n              pageSize: 10\n            })\n          );\n        } else {\n          message.error('学历编辑失败：' + res.message && res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n","export const CHANGE_EDUCATIONVISIBLE = 'educ/CHANGE_EDUCATIONVISIBLE';\nexport const CHANGE_BULIST = 'educ/CHANGE_BULIST';\nexport const CHANGE_DEPLIST = 'educ/CHANGE_DEPLIST';\nexport const CHANGE_EDUCLIST = 'educ/CHANGE_EDUCLIST';\nexport const CHANGE_MAGORLIST = 'educ/CHANGE_MAGORLIST';\nexport const CHANGE_CURRENTPAGE = 'educ/CHANGE_CURRENTPAGE';\n","import { combineReducers } from 'redux';\nimport { reducer as homeReducer } from '../page/Home/store/index';\nimport { reducer as basicRudecer } from '../page/BasicInformation/store/';\nimport { reducer as projectRudecer } from '../page/ProjectInformation/store/';\nimport { reducer as educationRudecer } from '../page/EducationInfo/store/';\nconst reducer = combineReducers({\n  home: homeReducer,\n  basic: basicRudecer,\n  project: projectRudecer,\n  educ: educationRudecer\n});\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport reduce from './reduce.js';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(reduce, enhancer);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport moment from 'moment';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actionCreators } from '../store';\nimport './reminder.less';\nconst month = moment().month() + 1;\n\n@connect(state => state.home, actionCreators)\nclass Reminder extends Component {\n  componentDidMount() {\n    const {\n      getReminderList,\n      queryMyToDoProject,\n      queryMyToDoEducation\n    } = this.props;\n    getReminderList();\n    queryMyToDoProject();\n    queryMyToDoEducation();\n  }\n\n  handlGoToBasic = () => {\n    localStorage.setItem('entmonth', '1');\n    this.props.history.push('/basic');\n  };\n\n  handlGoToEduc = () => {\n    localStorage.setItem('educStatusFlag', '2');\n    this.props.history.push('/education');\n  };\n  render() {\n    const { reminderList, myTodoList, myTodoeducationData } = this.props;\n    return (\n      <Row className=\"layout-home-reminder\" style={{ minWidth: '290px' }}>\n        <Col\n          span={12}\n          onClick={() => this.handlGoToBasic()}\n          className=\"reminder-content reminder-content-link\"\n        >\n          {month}月入职人数\n          <span style={{ color: '#658ef7' }}>\n            {reminderList && reminderList.entryEmpTotal}\n          </span>\n          人\n        </Col>\n        <Col span={12} className=\"reminder-content reminder-content-link\">\n          {month}月离职人数\n          <span style={{ color: '#658ef7' }}>\n            {reminderList && reminderList.leaveEmpTotal}\n          </span>\n          人\n        </Col>\n\n        <Col span={12} className=\"reminder-content\">\n          待完善项目\n          <span style={{ color: '#658ef7' }}>{myTodoList}</span>人\n        </Col>\n        <Col span={12} className=\"reminder-content\">\n          信息安全提醒\n          <span style={{ color: '#658ef7' }}></span>\n        </Col>\n        <Col\n          onClick={() => this.handlGoToEduc()}\n          span={12}\n          className=\"reminder-content reminder-content-link\"\n        >\n          待完善学历\n          <span style={{ color: '#658ef7' }}> {myTodoeducationData} </span>人\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default withRouter(Reminder);\n","import React, { Component } from 'react';\nimport { Table } from 'antd';\nimport { connect } from 'react-redux';\n// import fetch from '../../../utils/axios.config';\nimport './birthdayReminder.less';\nimport { actionCreators } from '../store';\n\nconst columns = [\n  {\n    title: '月份',\n    dataIndex: 'birthdayMonthCode',\n    width: '50%',\n    key: 1\n  },\n  {\n    title: '人数',\n    dataIndex: 'birthdayMonthTotal',\n    width: '50%',\n    key: 2\n  }\n];\n\n@connect(state => state.home, actionCreators)\nclass BirthdayReminder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // const token = localStorage.getItem(\"token\");\n    const { getBirthdayList } = this.props;\n    getBirthdayList();\n  }\n  render() {\n    const paginationObj = {\n      pageSize: 3\n    };\n    const { birthdayList } = this.props;\n    return (\n      <div className=\"birthdat\" style={{ padding: '10px' }}>\n        <Table\n          rowKey={(record, index) => index}\n          columns={columns}\n          dataSource={birthdayList}\n          pagination={paginationObj}\n        />\n      </div>\n    );\n  }\n}\nexport default BirthdayReminder;\n","import React, { Component } from 'react';\nimport { Table } from 'antd';\nimport { connect } from 'react-redux';\nimport './fieldNumber.less';\nimport { actionCreators } from '../store';\n\nconst columns = [\n  {\n    title: '地址',\n    dataIndex: 'areaName',\n    width: '50%',\n    key: 1\n  },\n  {\n    title: '人数',\n    dataIndex: 'areaEmployeeTotal',\n    width: '50%',\n    key: 2\n  }\n];\n\n@connect(state => state.home, actionCreators)\nclass FieldNumber extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    const { getFieldList } = this.props;\n    getFieldList();\n  }\n  render() {\n    const { fieldList } = this.props;\n    const paginationObj = {\n      pageSize: 3\n    };\n    return (\n      <div className=\"fieldNumber\" style={{ padding: '10px' }}>\n        <Table\n          rowKey={(record, index) => index}\n          columns={columns}\n          dataSource={fieldList}\n          pagination={paginationObj}\n        />\n      </div>\n    );\n  }\n}\n\nexport default FieldNumber;\n","import React, { Component } from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport { actionCreators } from '../store';\nimport './rejular.less';\n\n@connect(state => state.home, actionCreators)\nclass Rejular extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    const { getRejularList } = this.props;\n    getRejularList();\n  }\n  render() {\n    const { rejularList, regularTotal } = this.props;\n    console.log('regularTotal', regularTotal);\n\n    return (\n      <div className=\"rejular\" style={{ padding: '10px' }}>\n        {rejularList.map((item, index) => {\n          return (\n            <span key={index} className=\"rejular-content\">\n              {item.empName}将在\n              <span style={{ color: '#658ef7' }}>{item.regularTime}</span>\n              天后转正\n            </span>\n          );\n        })}\n        <div className=\"rejular-pagination\">\n          <Pagination current={1} pageSize={6} total={regularTotal} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Rejular;\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport Reminder from './components/Reminder.jsx';\nimport BirthdayReminder from './components/BirthdayReminder.jsx';\nimport FieldNumber from './components/FieldNumber.jsx';\nimport Rejular from './components/Rejular.jsx';\nimport './index.less';\nconst homeList = ['提醒事项', '转正提醒', '生日提醒', '场地人数'];\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"layout-home\">\n        <Row>\n          {homeList.map((item, index) => {\n            return (\n              <Col\n                key={index}\n                className=\"layout-home-col\"\n                span={12}\n                style={{ height: '400px' }}\n              >\n                <h2 className=\"layout-home-title\">{item}</h2>\n                <div className=\"layout-home-info\">\n                  <div>\n                    {(item === '提醒事项' && <Reminder />) ||\n                      (item === '场地人数' && <FieldNumber />) ||\n                      (item === '生日提醒' && <BirthdayReminder />) ||\n                      (item === '转正提醒' && <Rejular />)}\n                  </div>\n                </div>\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport './index.less';\n\nclass Menus extends Component {\n  selectRouterAactive = () => {\n    const { pathname } = this.props.location;\n    let activeKey = '';\n    activeKey = pathname.substr(1);\n    if (pathname !== '/') {\n      activeKey = pathname.substr(1);\n    }\n\n    if (pathname === '/') {\n      activeKey = 'home';\n    }\n    return activeKey;\n  };\n  render() {\n    const activeKey = this.selectRouterAactive();\n\n    return (\n      <div className=\"inservice-menu\">\n        <Menu\n          theme=\"dark\"\n          className=\"inservice-menu-antd\"\n          style={{ backgroundColor: '#658ef7', color: '#fff' }}\n          selectedKeys={[activeKey]}\n          mode=\"horizontal\"\n        >\n          <Menu.Item key=\"home\">\n            <Link to=\"/home\">首页</Link>\n          </Menu.Item>\n          <Menu.Item key=\"basic\">\n            <Link to=\"/basic\">基础信息</Link>\n          </Menu.Item>\n          <Menu.Item key=\"education\">\n            <Link to=\"/education\">学历信息</Link>\n          </Menu.Item>\n          <Menu.Item key=\"project\">\n            <Link to=\"/project\">项目信息</Link>\n          </Menu.Item>\n          <Menu.Item key=\"department\">\n            <Link to=\"/department\">人事调整</Link>\n          </Menu.Item>\n          <Menu.Item key=\"leave\">\n            <Link to=\"/leave\">离职信息</Link>\n          </Menu.Item>\n          <Menu.Item key=\"analysis\">\n            <Link to=\"/analysis\">数据分析</Link>\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  }\n}\nexport default withRouter(Menus);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Row, Col } from 'antd';\nimport Menus from '../../components/Menu';\nimport './index.less';\n\nclass Header extends Component {\n  handleCancleLogin = () => {\n    localStorage.setItem('flag', false);\n    this.props.history.push('/login');\n  };\n  render() {\n    const { pathname } = this.props.location;\n    return (\n      <div className=\"inservice-header\">\n        <Row style={{ height: '100%', display: 'flex' }}>\n          <Col span={5}>\n            <div className=\"inservice-header-logo\"></div>\n          </Col>\n          <Col span={16} className=\"inservice-header-menu\">\n            <Menus />\n          </Col>\n          <Col span={3} style={{ display: 'flex', justifyContent: 'center' }}>\n            {pathname !== '/login' && (\n              <Button onClick={this.handleCancleLogin.bind(this)}>\n                退出登录\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Icon, Input, Button, Checkbox, Col, Row, message } from 'antd';\nimport './index.less';\nclass Login extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        axios\n          .post('/api/user/login.json', {\n            username: values.username,\n            password: values.password\n          })\n          .then(res => {\n            if (res.data.success) {\n              localStorage.setItem('token', res.data.data.token);\n              localStorage.setItem('flag', true);\n              this.props.history.push('/home');\n            } else {\n              message.error('登录失败');\n            }\n          })\n          .catch(err => {\n            message.error('登录失败' + err);\n          });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    return (\n      <div>\n        <div className=\"login-form-layout\">\n          <Row style={{ backgroundColor: '#fff' }}>\n            <Col span={15}>\n              <div className=\"login-left-img\">\n                <img width=\"100%\" src={require('../../images/login.jpg')} />\n              </div>\n            </Col>\n            <Col span={9}>\n              <div className=\"login-rigiht-img\">\n                <h2 style={{ fontSize: '30px' }}>登录</h2>\n                <Form\n                  {...formItemLayout}\n                  onSubmit={this.handleSubmit}\n                  className=\"login-form\"\n                >\n                  <Form.Item>\n                    {getFieldDecorator('username', {\n                      rules: [\n                        {\n                          required: true,\n                          message: 'Please input your username!'\n                        }\n                      ]\n                    })(\n                      <Input\n                        prefix={\n                          <Icon\n                            type=\"user\"\n                            style={{ color: 'rgba(0,0,0,.25)' }}\n                          />\n                        }\n                        placeholder=\"请输入账号\"\n                      />\n                    )}\n                  </Form.Item>\n                  <Form.Item>\n                    {getFieldDecorator('password', {\n                      rules: [\n                        {\n                          required: true,\n                          message: 'Please input your Password!'\n                        }\n                      ]\n                    })(\n                      <Input\n                        prefix={\n                          <Icon\n                            type=\"lock\"\n                            style={{ color: 'rgba(0,0,0,.25)' }}\n                          />\n                        }\n                        type=\"password\"\n                        placeholder=\"请输入密码\"\n                      />\n                    )}\n                  </Form.Item>\n                  <Form.Item>\n                    {getFieldDecorator('remember', {\n                      valuePropName: 'checked',\n                      initialValue: true\n                    })(<Checkbox>记住密码</Checkbox>)}\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                    >\n                      登录\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Login = Form.create()(Login);\n","import React, { Component } from 'react'\n\nexport default class Error extends Component {\n    render() {\n        return (\n            <div>\n                404\n            </div>\n        )\n    }\n}","export const httAddress = 'http://47.92.48.141';\nexport const genderEunm = [\n  {\n    value: 1,\n    label: '男'\n  },\n  {\n    value: 0,\n    label: '女'\n  }\n];\n\nexport const uniformFlagEnum = [\n  {\n    key: 0,\n    label: '非'\n  },\n  {\n    key: 1,\n    label: '是'\n  }\n];\n\nexport const educationCodeEnum = [\n  {\n    key: 0,\n    label: '高中'\n  },\n  {\n    key: 1,\n    label: '中专'\n  },\n  {\n    key: 2,\n    label: '大专'\n  },\n  {\n    key: 3,\n    label: '本科'\n  },\n  {\n    key: 4,\n    label: '硕士'\n  },\n  {\n    key: 5,\n    label: '博士'\n  },\n  {\n    key: 6,\n    label: '博士后'\n  },\n  {\n    key: 7,\n    label: '院士'\n  }\n];\n\nexport const empPropertyEumn = [\n  {\n    id: 0,\n    name: '正式员工'\n  },\n  {\n    id: 1,\n    name: '试用期'\n  },\n  {\n    id: 2,\n    name: '实习期'\n  },\n  {\n    id: 3,\n    name: '兼职员工'\n  }\n];\nexport const onJobEnum = [\n  {\n    id: 0,\n    name: '离职'\n  },\n  {\n    id: 1,\n    name: '在职'\n  }\n];\n\nexport const reminderColumnsForm = [\n  {\n    title: 'BU',\n    dataIndex: 'ipsaBuDeptId',\n    width: '150px'\n  },\n  {\n    title: '部门',\n    dataIndex: 'ipsaDeptId',\n    width: '150px'\n  },\n  {\n    title: '姓名',\n    dataIndex: 'empName',\n    width: '150px',\n    fixed: 'left'\n  },\n  {\n    title: '软通工号',\n    dataIndex: 'empNo',\n    width: '150px'\n  },\n  {\n    title: '性别',\n    dataIndex: 'gender',\n    width: '150px'\n  },\n  {\n    title: '出生日期',\n    dataIndex: 'birthday',\n    width: '150px'\n  },\n  {\n    title: '入职日期',\n    dataIndex: 'joiningDay',\n    width: '150px'\n  },\n  {\n    title: '转正日期',\n    dataIndex: 'correctionTime',\n    width: '150px'\n  },\n  {\n    title: '通用职位',\n    dataIndex: 'ipsaPostNo',\n    width: '150px'\n  },\n  {\n    title: 'Grade代码',\n    dataIndex: 'ipsaGradeCode',\n    width: '150px'\n  },\n  {\n    title: '是否在职',\n    dataIndex: 'onJob',\n    width: '150px'\n  },\n  {\n    title: '人员性质',\n    dataIndex: 'empProperty',\n    width: '150px'\n  },\n  {\n    title: '直属上级',\n    dataIndex: 'directSuperiorName',\n    width: '150px'\n  },\n  {\n    title: '交付经理',\n    dataIndex: 'deliveryManagerName',\n    width: '150px'\n  },\n  {\n    title: '招聘顾问',\n    dataIndex: 'recruitmentUserId'\n  }\n];\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Select, Modal, Form, DatePicker, Input } from 'antd';\nimport './basicModal.less';\nimport { actionCreators } from '../store';\nimport {\n  genderEunm,\n  empPropertyEumn,\n  onJobEnum,\n  reminderColumnsForm\n} from '../../../utils/optionEnum';\nconst { Option } = Select;\n\nconst inputList = ['empName', 'empNo'];\nconst dateList = ['birthday', 'joiningDay', 'correctionTime'];\nconst managedisabled = ['directSuperiorName'];\n\n@connect(state => state.basic, actionCreators)\nclass BasicModal extends Component {\n  handleCancel = () => {\n    const { changeBasicVisible } = this.props;\n    this.props.form.resetFields();\n    changeBasicVisible({\n      basicVisible: false,\n      record: {}\n    });\n  };\n\n  // 对输入框进行校验\n  basicFormRules = key => {\n    if (key === 'deliveryManagerName') {\n      return [];\n    }\n    if (key === 'correctionTime') {\n      return [];\n    }\n    return [\n      { required: true, message: '不能为空' },\n      {\n        validator: this.validFunction\n      }\n    ];\n  };\n\n  validFunction = (rule, value, callback) => {\n    if (rule && rule.field === 'ipsaDeptId')\n      if (value instanceof Object && Object.keys(value).length === 0) {\n        callback('不能为空');\n      }\n    callback();\n  };\n\n  componentDidMount() {\n    const { queryUserListInfoByRolePermission, dictInfo } = this.props;\n    dictInfo('general_position');\n    dictInfo('position_grade_code');\n    queryUserListInfoByRolePermission('recruitmentConsultant');\n    queryUserListInfoByRolePermission('projectManage');\n  }\n\n  // 根据不同的信息渲染不同的输入框\n  baseFormInput = (key, disabled) => {\n    const {\n      rsData,\n      dmData,\n      buList,\n      dicList,\n      dicModalList,\n      manageList,\n      gradeList\n    } = this.props;\n\n    if (inputList.indexOf(key) !== -1) {\n      return <Input />;\n    }\n    if (dateList.indexOf(key) !== -1) {\n      return (\n        <DatePicker\n          placeholder=\"请选择日期\"\n          style={{ width: '100%' }}\n          onChange={this.handleChangeDate.bind(this, key)}\n        />\n      );\n    }\n    return (\n      <Select\n        onChange={this.handleGetOption.bind(this, key)}\n        disabled={disabled}\n        labelInValue={true}\n        className=\"basic-select\"\n        style={{ width: '100%' }}\n        allowClear={key === 'deliveryManagerName' ? true : false}\n      >\n        {key === 'ipsaBuDeptId' &&\n          buList.map(item => {\n            //BU下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        {key === 'ipsaDeptId' &&\n          dicModalList.map(item => {\n            //部门下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        {key === 'gender' &&\n          genderEunm.map(item => {\n            //性别下拉列表\n            return (\n              <Option key={item.value} value={item.value}>\n                {item.label}\n              </Option>\n            );\n          })}\n        {key === 'ipsaPostNo' &&\n          dicList.map(item => {\n            //通用职位下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.label}\n              </Option>\n            );\n          })}\n        {key === 'ipsaGradeCode' &&\n          gradeList.map(item => {\n            //Grade代码下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.label}\n              </Option>\n            );\n          })}\n        {key === 'empProperty' &&\n          empPropertyEumn.map(item => {\n            //员工性质下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        {key === 'directSuperiorName' &&\n          manageList.map(item => {\n            //上级主管列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.empName}\n              </Option>\n            );\n          })}\n        {key === 'deliveryManagerName' &&\n          dmData.map(item => {\n            //交付下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.empName}\n              </Option>\n            );\n          })}\n        {key === 'onJob' &&\n          onJobEnum.map(item => {\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        {key === 'recruitmentUserId' &&\n          rsData.map(item => {\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.username}\n              </Option>\n            );\n          })}\n      </Select>\n    );\n  };\n\n  handleGetOption = (key, value) => {\n    const { deptInfo, basicRecord, changeBasicVisible } = this.props;\n\n    if (key === 'ipsaBuDeptId') {\n      const newBasicRecord = JSON.parse(JSON.stringify(basicRecord));\n      newBasicRecord.ipsaDeptId = {};\n      changeBasicVisible({\n        basicVisible: true,\n        record: newBasicRecord\n      });\n      deptInfo({ id: value.key, tab: 'ipsaPostNo' });\n      this.props.form.resetFields();\n    }\n  };\n\n  handleChangeDate = (key, date, dateString) => {\n    console.log('date', date, 'dateString', dateString, 'key', key);\n  };\n\n  handleProjectSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const {\n          saveEmployeeBaseInfo,\n          basicRecord,\n          updateEmployeeBaseInfo\n        } = this.props;\n        const arg0 = {\n          empName: values.empName,\n          ipsaBuDeptId: values.ipsaBuDeptId ? values.ipsaBuDeptId.key : '',\n          ipsaDeptId: values.ipsaDeptId ? values.ipsaDeptId.key : '',\n          empNo: values.empNo,\n          gender: values.gender ? values.gender.key : '',\n          birthdayFormat: moment(values.birthday).format('YYYY-MM-DD'),\n          joiningDayFormat: moment(values.joiningDay).format('YYYY-MM-DD'),\n          correctionTimeFormat: basicRecord.id\n            ? values.correctionTime\n              ? moment(values.correctionTime).format('YYYY-MM-DD')\n              : ''\n            : '',\n          ipsaPostNo: values.ipsaPostNo ? values.ipsaPostNo.key : '',\n          ipsaGradeCode: values.ipsaGradeCode ? values.ipsaGradeCode.key : '',\n          empProperty: values.empProperty ? values.empProperty.key : '',\n          directSuperiorId: values.directSuperiorName\n            ? values.directSuperiorName.key\n            : '',\n          directSuperiorName: values.directSuperiorName\n            ? values.directSuperiorName.label\n            : '',\n          deliveryManagerId: values.deliveryManagerName\n            ? values.deliveryManagerName.key\n            : '',\n          deliveryManagerName: values.deliveryManagerName\n            ? values.deliveryManagerName.label\n            : '',\n          onJob: values.onJob ? values.onJob.key : '',\n          recruitmentUserId: values.recruitmentUserId\n            ? values.recruitmentUserId.key\n            : '',\n          recruitmentUserName: values.recruitmentUserId\n            ? values.recruitmentUserId.label\n            : ''\n        };\n        if (basicRecord.id) {\n          arg0.id = basicRecord.id;\n          updateEmployeeBaseInfo(arg0);\n        } else {\n          saveEmployeeBaseInfo(arg0);\n        }\n      }\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.basicVisible) {\n      this.props.form.resetFields();\n    }\n  }\n\n  render() {\n    const { basicVisible, basicRecord } = this.props;\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    return (\n      <div className=\"basic-modal\">\n        <Modal\n          title={basicRecord.id ? '修改信息' : '添加新员工'}\n          visible={basicVisible}\n          onOk={this.handleProjectSubmit}\n          onCancel={this.handleCancel}\n          className=\"basic-add-modal\"\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Form {...formItemLayout} className=\"basic-form\">\n            {reminderColumnsForm.map((item, index) => {\n              if (item.dataIndex === 'recruitmentUserId' && basicRecord.id) {\n                //编辑状态不显示招聘顾问\n                return '';\n              }\n              //直属上级在编辑时不能修改\n              let disabled = false;\n              if (managedisabled.includes(item.dataIndex) && basicRecord.id) {\n                disabled = true;\n              }\n              return (\n                <Form.Item label={item.title} key={item.dataIndex}>\n                  {getFieldDecorator(item.dataIndex, {\n                    initialValue:\n                      item.dataIndex === 'birthday' ||\n                      item.dataIndex === 'joiningDay' ||\n                      item.dataIndex === 'correctionTime'\n                        ? basicRecord[item.dataIndex]\n                          ? moment(basicRecord[item.dataIndex])\n                          : null\n                        : basicRecord[item.dataIndex],\n                    rules: this.basicFormRules(item.dataIndex)\n                  })(this.baseFormInput(item.dataIndex, disabled))}\n                </Form.Item>\n              );\n            })}\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(BasicModal);\n","import React from 'react';\nexport const basicColumnsFunction = that => {\n  const basicTableList = [\n    {\n      title: 'BU',\n      dataIndex: 'ipsaBuDeptName',\n      width: '100px'\n    },\n    {\n      title: '部门',\n      dataIndex: 'ipsaDeptName',\n      width: '150px'\n    },\n    {\n      title: '姓名',\n      dataIndex: 'empName',\n      width: '80px'\n    },\n    {\n      title: '软通工号',\n      dataIndex: 'empNo',\n      width: '100px'\n    },\n    {\n      title: '性别',\n      dataIndex: 'gender',\n      width: '50px',\n      render: (text, record) => {\n        switch (text) {\n          case 1:\n            return <span>男</span>;\n          case 0:\n            return <span>女</span>;\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '出生日期',\n      dataIndex: 'birthday',\n      width: '150px'\n    },\n    {\n      title: '入职日期',\n      dataIndex: 'joiningDay',\n      width: '150px'\n    },\n    {\n      title: '转正日期',\n      dataIndex: 'correctionTime',\n      width: '150px'\n    },\n    {\n      title: '通用职位',\n      dataIndex: 'ipsaPostName',\n      width: '150px'\n    },\n    {\n      title: 'Grade代码',\n      dataIndex: 'ipsaGradeName',\n      width: '90px'\n    },\n    {\n      title: '是否在职',\n      dataIndex: 'onJob',\n      width: '90px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>离职</span>;\n          case 1:\n            return <span>在职</span>;\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '人员性质',\n      dataIndex: 'empProperty',\n      width: '100px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>正式员工</span>;\n          case 1:\n            return <span>试用期</span>;\n          case 2:\n            return <span>实习期</span>;\n          case 3:\n            return <span>兼职员工</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '直属上级',\n      dataIndex: 'directSuperiorName',\n      width: '100px'\n    },\n    {\n      title: '交付经理',\n      dataIndex: 'deliveryManagerName',\n      width: '100px'\n    },\n    {\n      title: '操作',\n      dataIndex: 'action',\n      width: '90px',\n      render: (text, record) => {\n        return (\n          <span\n            className=\"basic-action-span\"\n            onClick={() => {\n              const { changeBasicVisible, deptInfo } = that.props;\n              let onjobKey = '',\n                onJobLabel = '';\n              if (record.onJob === 0) {\n                onjobKey = record.onJob;\n                onJobLabel = '离职';\n              } else if (record.onJob === 1) {\n                onjobKey = record.onJob;\n                onJobLabel = '在职';\n              }\n              const newRecord = {\n                id: record.id,\n                empNo: record.empNo,\n                empName: record.empName,\n                ipsaBuDeptId: {\n                  key: record.ipsaBuDeptId,\n                  label: record.ipsaBuDeptName\n                },\n                ipsaDeptId: {\n                  key: record.ipsaDeptId,\n                  label: record.ipsaDeptName\n                },\n                gender: {\n                  key: record.gender,\n                  label: record.gender === 1 ? '男' : '女'\n                },\n                birthday: record.birthday,\n                joiningDay: record.joiningDay,\n                ipsaPostNo: {\n                  key: record.ipsaPostNo,\n                  label: record.ipsaPostName\n                },\n                ipsaGradeCode: {\n                  key: record.ipsaGradeCode,\n                  label: record.ipsaGradeName\n                },\n                correctionTime: record.correctionTime\n                  ? record.correctionTime\n                  : '',\n                empProperty: {\n                  key: record.empProperty,\n                  label: record.empProperty\n                },\n                directSuperiorName: {\n                  key: record.directSuperiorId,\n                  label: record.directSuperiorName\n                },\n                deliveryManagerName: {\n                  key: record.deliveryManagerId,\n                  label: record.deliveryManagerName\n                },\n                onJob: {\n                  key: onjobKey,\n                  label: onJobLabel\n                }\n              };\n              changeBasicVisible({\n                basicVisible: true,\n                record: newRecord\n              });\n              deptInfo({ id: record.ipsaBuDeptId });\n            }}\n          >\n            编辑\n          </span>\n        );\n      }\n    }\n  ];\n  return basicTableList;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  DatePicker,\n  Upload,\n  Row,\n  Col,\n  Button,\n  Table,\n  Form,\n  Select,\n  Input,\n  Pagination,\n  message,\n  Tooltip\n} from 'antd';\nimport axios from 'axios';\nimport BasicModal from './components/BasicModal.jsx';\nimport { empPropertyEumn } from '../../utils/optionEnum';\nimport { actionCreators } from './store';\nimport { basicColumnsFunction } from './basicColumns';\nimport './index.less';\nconst { Search } = Input;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n@connect(state => state.basic, actionCreators)\nclass BasicInformation extends Component {\n  componentDidMount() {\n    const {\n      queryEmployeeBaseInfoList,\n      deptInfoBu,\n      queryUserListInfoByRolePermission,\n      changeCurrentPageData\n    } = this.props;\n    const entmonth = localStorage.getItem('entmonth');\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      gender: '',\n      keyword: '',\n      joiningDayStartTime: '',\n      joiningDayEndTime: '',\n      empProperty: '',\n      deliveryManagerId: '',\n      employeeStatus: entmonth\n    };\n    changeCurrentPageData(arg0);\n    queryEmployeeBaseInfoList(arg0);\n    queryUserListInfoByRolePermission('deliveryManager');\n    deptInfoBu();\n  }\n\n  //打开对话框\n  handleShowModel = () => {\n    const { changeBasicVisible } = this.props;\n    this.props.form.resetFields();\n    changeBasicVisible({\n      basicVisible: true,\n      record: {}\n    });\n  };\n\n  //导入数据提醒\n  handleChangeFile = ({ file, fileList }) => {\n    const { queryEmployeeBaseInfoList } = this.props;\n\n    if (file && file.status === 'done' && file.response.success) {\n      message.success(\n        file.response.message + '，共导入' + file.response.data + '条数据'\n      );\n      queryEmployeeBaseInfoList({\n        currentPage: 1,\n        pageSize: 20\n      });\n    } else {\n      if (file && file.status === 'done' && !file.response.success) {\n        message.error('上传失败:' + file.response.message);\n      }\n    }\n  };\n\n  //上传前的文件校验\n  handleBeforeUpload = (file, fileList) => {\n    if (\n      file &&\n      file.type !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      message.error('请上传以.xlsx为后缀的Excel文件');\n      return;\n    }\n  };\n  //搜索框调用查询列表\n  handleSearchInput = value => {\n    const { queryEmployeeBaseInfoList, changeCurrentPageData } = this.props;\n    this.props.form.validateFields((err, values) => {\n      const arg0 = {\n        currentPage: 1,\n        pageSize: 10,\n        ipsaBuDeptId: '',\n        ipsaDeptId: '',\n        gender: '',\n        keyword: value,\n        joiningDayStartTime: '',\n        joiningDayEndTime: '',\n        empProperty: '',\n        deliveryManagerId: '',\n        employeeStatus: ''\n      };\n      changeCurrentPageData(arg0);\n      localStorage.setItem('entmonth', '');\n      queryEmployeeBaseInfoList(arg0);\n      this.props.form.resetFields();\n    });\n  };\n\n  //修改搜索框的值\n  handleChangeSearchInput = value => {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      gender: '',\n      keyword: value.target.value,\n      joiningDayStartTime: '',\n      joiningDayEndTime: '',\n      empProperty: '',\n      deliveryManagerId: '',\n      employeeStatus: ''\n    };\n    changeCurrentPageData(arg0);\n  };\n\n  handleChangeBuDeptId = value => {\n    const {\n      deptInfo,\n      changeDepList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    if (value) {\n      const newCurrentPageData = JSON.parse(JSON.stringify(currentPageData));\n      newCurrentPageData.ipsaDeptId = '';\n      changeCurrentPageData(newCurrentPageData);\n      deptInfo(value);\n      this.props.form.resetFields();\n    } else {\n      changeDepList([]);\n    }\n  };\n\n  //查询按钮\n  handleSearchList = event => {\n    event.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      const { queryEmployeeBaseInfoList, changeCurrentPageData } = this.props;\n      const dateStart =\n        values.joiningDay && values.joiningDay.length\n          ? moment(values.joiningDay[0]).format('YYYY-MM-DD')\n          : '';\n      const dateEnd =\n        values.joiningDay && values.joiningDay.length\n          ? moment(values.joiningDay[1]).format('YYYY-MM-DD')\n          : '';\n      const arg0 = {\n        currentPage: 1,\n        pageSize: 10,\n        ipsaBuDeptId: values.ipsaBuDeptId,\n        ipsaDeptId: values.ipsaDeptId,\n        gender: values.gender,\n        keyword: '',\n        joiningDayStartTime: dateStart,\n        joiningDayEndTime: dateEnd,\n        empProperty: values.empProperty,\n        deliveryManagerId: values.deliveryManagerName,\n        employeeStatus: ''\n      };\n      changeCurrentPageData(arg0);\n      localStorage.setItem('entmonth', '');\n      queryEmployeeBaseInfoList(arg0);\n    });\n  };\n\n  //分页查询\n  handleTableChange = page => {\n    const {\n      queryEmployeeBaseInfoList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    const entmonth = localStorage.getItem('entmonth');\n    const arg0 = {\n      currentPage: page,\n      pageSize: 10,\n      keyword: currentPageData.keyword,\n      ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n      ipsaDeptId: currentPageData.ipsaDeptId,\n      deliveryManagerId: currentPageData.deliveryManagerId,\n      gender: currentPageData.gender,\n      joiningDayEndTime: currentPageData.joiningDayEndTime,\n      joiningDayStartTime: currentPageData.joiningDayStartTime,\n      empProperty: currentPageData.empProperty,\n      employeeStatus: entmonth\n    };\n    changeCurrentPageData(arg0);\n    queryEmployeeBaseInfoList(arg0);\n  };\n\n  //导出excel\n  handleDownload = () => {\n    const token = localStorage.getItem('token');\n    const entmonth = localStorage.getItem('entmonth');\n    const { currentPageData } = this.props;\n\n    axios({\n      method: 'get',\n      url: '/api/base/download',\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      params: {\n        keyword: currentPageData.keyword,\n        ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n        ipsaDeptId: currentPageData.ipsaDeptId,\n        deliveryManagerId: currentPageData.deliveryManagerId,\n        gender: currentPageData.gender,\n        joiningDayEndTime: currentPageData.joiningDayEndTime,\n        joiningDayStartTime: currentPageData.joiningDayStartTime,\n        empProperty: currentPageData.empProperty,\n        employeeStatus: entmonth\n      },\n      responseType: 'blob'\n    })\n      .then(res => {\n        if (res.status === 200) {\n          const blob = new Blob([res.data], {\n            type:\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'\n          });\n          const url = window.URL.createObjectURL(blob);\n          const aLink = document.createElement('a');\n          aLink.style.display = 'none';\n          aLink.href = url;\n          aLink.setAttribute('download', 'excel.xlsx');\n          document.body.appendChild(aLink);\n          aLink.click();\n          document.body.removeChild(aLink); //下载完成移除元素\n          window.URL.revokeObjectURL(url);\n          message.success('导出成功');\n        } else {\n          message.error('导出失败');\n        }\n      })\n      .catch(err => {\n        message.error('导出失败');\n      });\n  };\n\n  //表格列表\n  handleGetColumns = () => {\n    const that = this;\n    const projectList = basicColumnsFunction(that);\n    return projectList;\n  };\n\n  //组件销毁清空搜索\n  componentWillUnmount() {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      gender: '',\n      keyword: '',\n      joiningDayStartTime: '',\n      joiningDayEndTime: '',\n      empProperty: '',\n      deliveryManagerId: '',\n      employeeStatus: ''\n    };\n    changeCurrentPageData(arg0);\n    localStorage.setItem('entmonth', '');\n  }\n  render() {\n    const {\n      basicList,\n      buList,\n      depList,\n      total,\n      currentPageData,\n      dmData\n    } = this.props;\n    const { getFieldDecorator } = this.props.form;\n    const token = localStorage.getItem('token');\n    // const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"basic-information\">\n        <Row style={{ padding: '20px' }}>\n          <Col span={24}>\n            <Row className=\"basic-operator-set\">\n              <Col span={8}>\n                <Search\n                  style={{ width: '50%', marginLeft: '20px' }}\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => this.handleSearchInput(value)}\n                  onChange={value => this.handleChangeSearchInput(value)}\n                  enterButton\n                  value={currentPageData.keyword}\n                />\n              </Col>\n              <Col span={16} style={{ textAlign: 'right' }}>\n                <Button\n                  type=\"primary\"\n                  onClick={this.handleShowModel.bind(this)}\n                  style={{ marginRight: '7%' }}\n                >\n                  + 新增\n                </Button>\n                <div\n                  style={{\n                    width: '64px',\n                    display: 'inline-block',\n                    marginRight: '7%'\n                  }}\n                >\n                  <Upload\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    action=\"/api/base/import/employeeBaseInfo.json\"\n                    method=\"post\"\n                    headers={{\n                      Authorization: 'Bearer ' + token\n                    }}\n                    showUploadList={false}\n                    onChange={this.handleChangeFile.bind(this)}\n                    beforeUpload={this.handleBeforeUpload.bind(this)}\n                  >\n                    <Tooltip title=\"支持导入.xlsx文件\">\n                      <Button type=\"primary\">导入</Button>\n                    </Tooltip>\n                  </Upload>\n                </div>\n                <div\n                  style={{\n                    width: '64px',\n                    display: 'inline-block',\n                    marginRight: '2%'\n                  }}\n                >\n                  <Button\n                    type=\"primary\"\n                    onClick={this.handleDownload.bind(this)}\n                  >\n                    导出\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '5px' }} span={24}>\n            <Row>\n              <Col span={22}>\n                <Form>\n                  <Col span={6} className=\"basic-from-search-btn\">\n                    <Form.Item\n                      labelCol={{ span: 5 }}\n                      wrapperCol={{ span: 18 }}\n                      label=\"BU\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('ipsaBuDeptId', {\n                        initialValue: currentPageData.ipsaBuDeptId\n                      })(\n                        <Select\n                          allowClear\n                          onChange={this.handleChangeBuDeptId.bind(this)}\n                        >\n                          {buList.length &&\n                            buList.map((item, index) => {\n                              return (\n                                <Option key={item.id} value={item.id}>\n                                  {item.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={6}>\n                    <Form.Item\n                      labelCol={{ span: 6 }}\n                      wrapperCol={{ span: 16 }}\n                      label=\"部门\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('ipsaDeptId', {\n                        initialValue: currentPageData.ipsaDeptId\n                      })(\n                        <Select allowClear>\n                          {depList.length &&\n                            depList.map(item => {\n                              return (\n                                <Option key={item.id} value={item.id}>\n                                  {item.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={4}>\n                    <Form.Item\n                      labelCol={{ span: 6 }}\n                      wrapperCol={{ span: 14 }}\n                      label=\"性别\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('gender', {\n                        initialValue: currentPageData.gender\n                      })(\n                        <Select allowClear>\n                          <Option value=\"1\">男</Option>\n                          <Option value=\"0\">女</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={8}>\n                    <Form.Item\n                      labelCol={{ span: 5 }}\n                      wrapperCol={{ span: 18 }}\n                      label=\"入职日期\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('joiningDay', {\n                        initialValue: currentPageData.joiningDay\n                      })(\n                        <RangePicker\n                          placeholder={['起始日期', '结束日期']}\n                          ranges={{\n                            当天: [moment(), moment()],\n                            本月: [\n                              moment().startOf('month'),\n                              moment().endOf('month')\n                            ]\n                          }}\n                        />\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={4}>\n                    <Form.Item\n                      labelCol={{ span: 8 }}\n                      wrapperCol={{ span: 15 }}\n                      label=\"人员性质\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('empProperty', {\n                        initialValue: currentPageData.empProperty\n                      })(\n                        <Select allowClear>\n                          {empPropertyEumn.map(item => {\n                            return (\n                              <Option key={item.id} value={item.id}>\n                                {item.name}\n                              </Option>\n                            );\n                          })}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={6}>\n                    <Form.Item\n                      labelCol={{ span: 14 }}\n                      wrapperCol={{ span: 10 }}\n                      label=\"交付经理\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('deliveryManagerName', {\n                        initialValue: currentPageData.deliveryManagerName\n                      })(\n                        <Select allowClear>\n                          {dmData.map(item => {\n                            return (\n                              <Option key={item.id} value={item.id}>\n                                {item.empName}\n                              </Option>\n                            );\n                          })}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                </Form>\n              </Col>\n              <Col span={2} style={{ textAlign: 'right' }}>\n                <Button\n                  type=\"primary\"\n                  style={{\n                    marginTop: '3px',\n                    marginRight: '15%'\n                  }}\n                  onClick={this.handleSearchList.bind(this)}\n                >\n                  查询\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col\n            className=\"basic-content-table\"\n            style={{ marginTop: '5px' }}\n            span={24}\n            ref={el => {\n              this.tableHeight = el;\n            }}\n          >\n            <Table\n              rowKey={(record, index) => index}\n              columns={this.handleGetColumns()}\n              dataSource={basicList}\n              pagination={false}\n            />\n          </Col>\n          <Col className=\"basic-paging\" span={24}>\n            <Pagination\n              total={total}\n              current={currentPageData.currentPage}\n              onChange={page => {\n                this.handleTableChange(page);\n              }}\n            />\n          </Col>\n        </Row>\n\n        <BasicModal />\n      </div>\n    );\n  }\n}\nexport default Form.create()(BasicInformation);\n","import React from 'react';\nexport const reminderColumns = [\n  {\n    title: '姓名',\n    dataIndex: 'empName',\n    width: '150px',\n    fixed: 'left'\n  },\n  {\n    title: 'BU',\n    dataIndex: 'ipsaBuDeptId',\n    width: '150px'\n  },\n  {\n    title: '部门',\n    dataIndex: 'ipsaDeptId',\n    width: '150px'\n  },\n  {\n    title: '软通工号',\n    dataIndex: 'empNo',\n    width: '150px'\n  },\n  {\n    title: '性别',\n    dataIndex: 'gender',\n    width: '150px'\n  },\n  {\n    title: '出生日期',\n    dataIndex: 'birthday',\n    width: '150px'\n  },\n  {\n    title: '入职日期',\n    dataIndex: 'joiningDay',\n    width: '150px'\n  },\n  {\n    title: '转正日期',\n    dataIndex: 'correctionTime',\n    width: '150px'\n  },\n  {\n    title: '通用职位',\n    dataIndex: 'ipsaPostNo',\n    width: '150px'\n  },\n  {\n    title: 'Grade代码',\n    dataIndex: 'ipsaGradeCode',\n    width: '150px'\n  },\n  {\n    title: '是否在职',\n    dataIndex: 'onJob',\n    width: '150px',\n    render: (text, record) => {\n      return <span>{text === 0 ? '离职' : '在职'} </span>;\n    }\n  },\n  {\n    title: '人员性质',\n    dataIndex: 'empProperty',\n    width: '150px'\n  },\n  {\n    title: '直属上级',\n    dataIndex: 'directSuperiorName',\n    width: '150px'\n  },\n  {\n    title: '交付经理',\n    dataIndex: 'deliveryManagerName',\n    width: '150px'\n  }\n];\n\nexport const educationList = [\n  {\n    title: '毕业学校',\n    dataIndex: 'graduatedUniversities',\n    width: '150px'\n  },\n  {\n    title: '专业',\n    dataIndex: 'majorCode',\n    width: '150px'\n  },\n  {\n    title: '学历',\n    dataIndex: 'educationCode',\n    width: '150px'\n  },\n  {\n    title: '是否统招',\n    dataIndex: 'uniformFlag',\n    width: '150px'\n  }\n];\n\nexport const leaveFormList = [\n  {\n    title: '姓名',\n    dataIndex: 'name',\n    width: '150px'\n  },\n  {\n    title: 'BU',\n    dataIndex: 'bu',\n    width: '150px'\n  },\n  {\n    title: '部门',\n    dataIndex: 'bumen',\n    width: '150px'\n  },\n  {\n    title: '软通工号',\n    dataIndex: 'empNo',\n    width: '150px'\n  },\n  {\n    title: '阿里离项时间',\n    dataIndex: 'alworkId',\n    width: '150px'\n  },\n  {\n    title: '阿里离项原因',\n    dataIndex: 'entryp',\n    width: '150px'\n  },\n  {\n    title: '阿里离项类型',\n    dataIndex: 'onepost',\n    width: '150px'\n  },\n  {\n    title: '业务线反馈离职原因',\n    dataIndex: 'twopost',\n    width: '150px'\n  },\n  {\n    title: '业务线反馈离职类型',\n    dataIndex: 'threepost',\n    width: '150px'\n  },\n  {\n    title: '业务线反馈离职分类',\n    dataIndex: 'hierarchy',\n    width: '150px'\n  },\n  {\n    title: '离职提出时间',\n    dataIndex: 'direction',\n    width: '150px'\n  },\n  {\n    title: '离职生效日',\n    dataIndex: 'frame',\n    width: '150px'\n  },\n  {\n    title: '离职时状态',\n    dataIndex: 'careergroup',\n    width: '150px'\n  },\n  {\n    title: 'IPSA离职原因',\n    dataIndex: 'businessunit',\n    width: '150px'\n  },\n  {\n    title: 'HR三月后离职分类',\n    dataIndex: 'entryname',\n    width: '150px'\n  },\n  {\n    title: 'HR一月后离职类型',\n    dataIndex: 'business',\n    width: '150px'\n  },\n  {\n    title: 'HR一月后沟通离职原因',\n    dataIndex: 'projecttype',\n    width: '150px'\n  }\n];\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Upload,\n  Modal,\n  Form,\n  Icon,\n  Input,\n  Select,\n  message\n} from 'antd';\nimport './educModal.less';\nimport { actionCreators } from '../store';\nimport { educationList } from '../../../utils/tableTitle.config.js';\nimport {\n  educationCodeEnum,\n  uniformFlagEnum,\n  httAddress\n} from '../../../utils/optionEnum';\nconst { Option } = Select;\n\n@connect(state => state.educ, actionCreators)\nclass EducationModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      previewVisible: false,\n      previewImage: ''\n    };\n  }\n  handleCancel = () => {\n    const { changeEducationVisible } = this.props;\n    changeEducationVisible({\n      educVisible: false,\n      record: {},\n      imageUrl: []\n    });\n  };\n\n  // 对输入框进行校验\n  basicFormRules = key => {\n    return [{ required: true, message: '不能为空' }];\n  };\n\n  // 根据不同的信息渲染不同的输入框\n  baseFormInput = key => {\n    const { majorList } = this.props;\n    if (key === 'majorCode') {\n      return (\n        <Select>\n          {majorList.map(item => {\n            //专业下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.label}\n              </Option>\n            );\n          })}\n        </Select>\n      );\n    }\n\n    if (key === 'educationCode') {\n      return (\n        <Select>\n          {educationCodeEnum.map(item => {\n            //学位下拉列表\n            return (\n              <Option key={item.key} value={item.key}>\n                {item.label}\n              </Option>\n            );\n          })}\n        </Select>\n      );\n    }\n\n    if (key === 'uniformFlag') {\n      return (\n        <Select>\n          {uniformFlagEnum.map(item => {\n            //统招列表\n            return (\n              <Option key={item.key} value={item.key}>\n                {item.label}\n              </Option>\n            );\n          })}\n        </Select>\n      );\n    }\n    return <Input />;\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.educVisible) {\n      this.props.form.resetFields();\n    }\n  }\n\n  handleEducationSubmit = () => {\n    this.props.form.validateFields((err, values) => {\n      const {\n        educRecord,\n        updateEducationRecordInfoById,\n        imageUrl\n      } = this.props;\n      let newfiledID = '';\n      for (let i = 0, len = imageUrl.length; i < len; i++) {\n        newfiledID += imageUrl[i].fileId\n          ? imageUrl[i].fileId + '$'\n          : imageUrl[i].response.data.fileId + '$';\n      }\n      if (newfiledID.substring(newfiledID.length - 1) === '$') {\n        newfiledID = newfiledID.substring(0, newfiledID.length - 1);\n      }\n      if (!err) {\n        if (!newfiledID) {\n          message.error('证据必须上传');\n          return;\n        }\n        const arg0 = {\n          recruitmentUserId: educRecord.recruitmentUserId,\n          majorCode: values.majorCode,\n          recruitmentUserName: educRecord.recruitmentUserName,\n          graduatedUniversities: values.graduatedUniversities,\n          educationCode: values.educationCode,\n          uniformFlag: values.uniformFlag,\n          avatarIdPath: newfiledID,\n          id: educRecord.id\n        };\n        updateEducationRecordInfoById(arg0);\n      }\n    });\n  };\n\n  //上传图片\n  handleChangeFile = ({ file, fileList }) => {\n    const { changeEducationVisible, educRecord, imageUrl } = this.props;\n\n    if (file && file.status === 'done' && file.response.success) {\n      if (file.response.data) {\n        const newImageUrl = [];\n        imageUrl.forEach(item => {\n          if (item.response) {\n            newImageUrl.push({\n              uid: item.response.data.fileId,\n              name: 'image.png',\n              status: 'done',\n              url: httAddress + item.response.data.url\n            });\n          }\n          newImageUrl.push(item);\n        });\n        changeEducationVisible({\n          educVisible: true,\n          imageUrl,\n          record: educRecord,\n          fileId: newImageUrl\n        });\n      } else {\n        message.error(\n          '上传图片失败' + file.response.message && file.response.message\n        );\n      }\n    }\n    if (file && file.status === 'done' && !file.response.success) {\n      message.error(\n        '上传图片失败' + file.response.message && file.response.message\n      );\n    }\n    if (file && file.status === 'error' && file.error.status === 401) {\n      message.error('上传失败，请重新登录');\n    }\n\n    changeEducationVisible({\n      educVisible: true,\n      imageUrl: fileList,\n      record: educRecord\n      // fileId: file.response.data.fileId\n    });\n  };\n\n  handlePreview = file => {\n    console.log('handlePreviewfile', file);\n  };\n\n  render() {\n    const { educVisible, educRecord, imageUrl } = this.props;\n    const { getFieldDecorator } = this.props.form;\n    const token = localStorage.getItem('token');\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    return (\n      <div className=\"basic-modal\">\n        <Modal\n          title=\"修改学历信息\"\n          visible={educVisible}\n          onOk={this.handleEducationSubmit}\n          onCancel={this.handleCancel}\n          className=\"basic-add-modal\"\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Form\n            {...formItemLayout}\n            onSubmit={this.handleEducationSubmit}\n            className=\"basic-form\"\n          >\n            {educationList.map((item, index) => {\n              return (\n                <Form.Item label={item.title} key={item.dataIndex}>\n                  {getFieldDecorator(item.dataIndex, {\n                    initialValue: educRecord[item.dataIndex],\n                    rules: this.basicFormRules(item.dataIndex)\n                  })(this.baseFormInput(item.dataIndex))}\n                </Form.Item>\n              );\n            })}\n            <Row>\n              <Col style={{ marginRight: '10px', textAlign: 'right' }} span={6}>\n                证据：\n              </Col>\n              <Col span={16}>\n                <Upload\n                  accept=\"image/png,image/jpeg\"\n                  method=\"post\"\n                  headers={{\n                    Authorization: 'Bearer ' + token\n                  }}\n                  listType=\"picture-card\"\n                  className=\"avatar-uploader\"\n                  // showUploadList={false}\n                  fileList={imageUrl}\n                  action=\"/api/file/uploadFile.json\"\n                  onChange={this.handleChangeFile.bind(this)}\n                  onPreview={this.handlePreview.bind(this)}\n                >\n                  {imageUrl.length >= 3 ? null : uploadButton}\n                </Upload>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(EducationModal);\n","import React, { Component } from 'react';\nimport {\n  Row,\n  Col,\n  Button,\n  Table,\n  Form,\n  Select,\n  Input,\n  Pagination,\n  Upload,\n  message,\n  Tooltip\n} from 'antd';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { actionCreators } from './store';\nimport EducationModal from './components/EducationModal.jsx';\nimport {\n  uniformFlagEnum,\n  educationCodeEnum,\n  httAddress\n} from '../../utils/optionEnum';\nimport './index.less';\nconst { Search } = Input;\nconst { Option } = Select;\n\n@connect(state => state.educ, actionCreators)\nclass EducationInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'BU',\n        dataIndex: 'ipsaBuDeptName',\n        width: '15%'\n      },\n      {\n        title: '部门',\n        dataIndex: 'ipsaDeptName',\n        width: '15%'\n      },\n      {\n        title: '姓名',\n        dataIndex: 'empName',\n        width: '10%'\n      },\n      {\n        title: '软通工号',\n        dataIndex: 'empNo',\n        width: '10%'\n      },\n      {\n        title: '毕业学校',\n        dataIndex: 'graduatedUniversities',\n        width: '15%'\n      },\n      {\n        title: '专业',\n        dataIndex: 'majorName',\n        width: '15%'\n      },\n      {\n        title: '学历',\n        dataIndex: 'educationCode',\n        width: '6%',\n        render: (text, record) => {\n          switch (text) {\n            case 0:\n              return <span>高中</span>;\n            case 1:\n              return <span>中专</span>;\n            case 2:\n              return <span>大专</span>;\n            case 3:\n              return <span>本科</span>;\n            case 4:\n              return <span>硕士</span>;\n            case 5:\n              return <span>博士</span>;\n            case 6:\n              return <span>博士后</span>;\n            case 7:\n              return <span>院士</span>;\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '是否统招',\n        dataIndex: 'uniformFlag',\n        width: '9%',\n        render: (text, record) => {\n          switch (text) {\n            case 0:\n              return <span>非</span>;\n            case 1:\n              return <span>是</span>;\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '操作',\n        dataIndex: 'action',\n        width: '5%',\n        render: (text, record) => {\n          return (\n            <span\n              className=\"educ-action-span\"\n              onClick={this.handleShowModal.bind(this, record)}\n            >\n              编辑\n            </span>\n          );\n        }\n      }\n    ];\n  }\n\n  //打开编辑框\n  handleShowModal = record => {\n    const { changeEducationVisible, dictInfo } = this.props;\n    const imgUrl = [];\n    record.avatar &&\n      record.avatar.length &&\n      record.avatar.forEach(item => {\n        if (item) {\n          imgUrl.push({\n            fileId: item.id,\n            uid: item.id,\n            name: 'image.png',\n            status: 'done',\n            url: httAddress + item.url\n          });\n        }\n      });\n    changeEducationVisible({\n      educVisible: true,\n      record,\n      imageUrl: imgUrl,\n      fileId: ''\n    });\n    dictInfo();\n  };\n\n  componentDidMount() {\n    const { deptInfoBu, queryEducationRecordInfoList } = this.props;\n    const educStatusFlag = localStorage.getItem('educStatusFlag');\n    queryEducationRecordInfoList({\n      currentPage: 1,\n      pageSize: 10,\n      statusFlag: educStatusFlag\n    });\n    deptInfoBu();\n  }\n\n  //BU列表\n  handleChangeBuDeptId = value => {\n    const {\n      deptInfo,\n      changeDepList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    if (value) {\n      const newCurrentPageData = JSON.parse(JSON.stringify(currentPageData));\n      newCurrentPageData.ipsaDeptId = '';\n      changeCurrentPageData(newCurrentPageData);\n      deptInfo(value);\n      this.props.form.resetFields();\n    } else {\n      changeDepList([]);\n    }\n  };\n\n  //分页查询\n  handleTableChange = page => {\n    const {\n      queryEducationRecordInfoList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    const educStatusFlag = localStorage.getItem('educStatusFlag');\n    const arg0 = {\n      currentPage: page,\n      pageSize: 10,\n      educationCode: currentPageData.educationCode,\n      uniformFlag: currentPageData.uniformFlag,\n      ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n      ipsaDeptId: currentPageData.ipsaDeptId,\n      keyword: currentPageData.keyword,\n      statusFlag: educStatusFlag\n    };\n    changeCurrentPageData(arg0);\n    queryEducationRecordInfoList(arg0);\n  };\n\n  //导入数据提醒\n  handleChangeFile = ({ file, fileList }) => {\n    const { queryEducationRecordInfoList } = this.props;\n    if (file && file.status === 'done' && file.response.success) {\n      message.success(\n        file.response.message + '，共导入' + file.response.data + '条数据'\n      );\n      queryEducationRecordInfoList({\n        currentPage: 1,\n        pageSize: 20\n      });\n    } else {\n      if (file && file.status === 'done' && !file.response.success) {\n        message.error('上传失败:' + file.response.message);\n      }\n      if (file && file.status === 'error') {\n        if (file.error.status === 401) {\n          message.error('导入失败，请重新登录');\n        } else {\n          message.error('导入失败:' + file.response.message);\n        }\n      }\n    }\n  };\n\n  //上传前的文件校验\n  handleBeforeUpload = (file, fileList) => {\n    if (\n      file &&\n      file.type !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      message.error('请上传以.xlsx为后缀的Excel文件');\n      return;\n    }\n  };\n\n  //导出excel\n  handleDownload = () => {\n    const token = localStorage.getItem('token');\n    const { currentPageData } = this.props;\n    const educStatusFlag = localStorage.getItem('educStatusFlag');\n    axios({\n      method: 'get',\n      url: '/api/education/download',\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      params: {\n        educationCode: currentPageData.educationCode,\n        uniformFlag: currentPageData.uniformFlag,\n        ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n        ipsaDeptId: currentPageData.ipsaDeptId,\n        keyword: currentPageData.keyword,\n        statusFlag: educStatusFlag\n      },\n      responseType: 'blob'\n    })\n      .then(res => {\n        if (res.status === 200) {\n          const blob = new Blob([res.data], {\n            type:\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'\n          });\n          const url = window.URL.createObjectURL(blob);\n          const aLink = document.createElement('a');\n          aLink.style.display = 'none';\n          aLink.href = url;\n          aLink.setAttribute('download', 'excel.xlsx');\n          document.body.appendChild(aLink);\n          aLink.click();\n          document.body.removeChild(aLink); //下载完成移除元素\n          window.URL.revokeObjectURL(url);\n          message.success('导出成功');\n        } else {\n          message.error('导出失败');\n        }\n      })\n      .catch(err => {\n        message.error('导出失败');\n      });\n  };\n\n  //搜索框调用查询列表\n  handleSearchInput = value => {\n    const { queryEducationRecordInfoList, changeCurrentPageData } = this.props;\n    this.props.form.validateFields((err, values) => {\n      const arg0 = {\n        educationCode: '',\n        uniformFlag: '',\n        ipsaBuDeptId: '',\n        ipsaDeptId: '',\n        keyword: value,\n        currentPage: 1,\n        pageSize: 10\n      };\n      changeCurrentPageData(arg0);\n      localStorage.setItem('educStatusFlag', '');\n      queryEducationRecordInfoList(arg0);\n      this.props.form.resetFields();\n    });\n  };\n\n  //修改搜索框的值\n  handleChangeSearchInput = value => {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      keyword: value.target.value,\n      educationCode: '',\n      uniformFlag: '',\n      ipsaBuDeptId: '',\n      ipsaDeptId: ''\n    };\n    changeCurrentPageData(arg0);\n  };\n\n  //查询按钮\n  handleSearchList = event => {\n    event.preventDefault();\n    const { queryEducationRecordInfoList, changeCurrentPageData } = this.props;\n    this.props.form.validateFields((err, values) => {\n      const arg0 = {\n        educationCode: values.educationCode,\n        uniformFlag: values.uniformFlag,\n        ipsaBuDeptId: values.ipsaBuDeptId,\n        ipsaDeptId: values.ipsaDeptId,\n        keyword: '',\n        currentPage: 1,\n        pageSize: 10\n      };\n      changeCurrentPageData(arg0);\n      localStorage.setItem('educStatusFlag', '');\n      queryEducationRecordInfoList(arg0);\n    });\n  };\n\n  //组件销毁清空搜索\n  componentWillUnmount() {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      keyword: '',\n      educationCode: '',\n      uniformFlag: '',\n      ipsaBuDeptId: '',\n      ipsaDeptId: ''\n    };\n    changeCurrentPageData(arg0);\n    localStorage.setItem('educStatusFlag', '');\n  }\n  render() {\n    const columns = this.columns;\n    const { buList, depList, educList, total, currentPageData } = this.props;\n    const token = localStorage.getItem('token');\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"education-info\">\n        <Row style={{ padding: '20px' }}>\n          <Col className=\"educ-operator-set\" span={24}>\n            <Row>\n              <Col span={8}>\n                <Search\n                  className=\"educ-seatch-input\"\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => this.handleSearchInput(value)}\n                  onChange={value => this.handleChangeSearchInput(value)}\n                  enterButton\n                  value={currentPageData.keyword}\n                />\n              </Col>\n              <Col span={16} style={{ textAlign: 'right' }}>\n                <div className=\"educ-upload-btn\" style={{ marginRight: '7%' }}>\n                  <Upload\n                    style={{ marginRight: '7%' }}\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    action=\"/api/education/import/education.json\"\n                    method=\"post\"\n                    headers={{\n                      Authorization: 'Bearer ' + token\n                    }}\n                    showUploadList={false}\n                    onChange={this.handleChangeFile.bind(this)}\n                    beforeUpload={this.handleBeforeUpload.bind(this)}\n                  >\n                    <Tooltip title=\"支持导入.xlsx文件\">\n                      <Button type=\"primary\">导入</Button>\n                    </Tooltip>\n                  </Upload>\n                </div>\n                <div className=\"educ-upload-btn\">\n                  <Button\n                    onClick={this.handleDownload.bind(this)}\n                    type=\"primary\"\n                  >\n                    导出\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '30px' }} span={24}>\n            <Row>\n              <Form>\n                <Col span={5}>\n                  <Form.Item\n                    labelCol={{ span: 3 }}\n                    wrapperCol={{ span: 16 }}\n                    label=\"BU\"\n                    hasFeedback\n                  >\n                    {getFieldDecorator('ipsaBuDeptId', {\n                      initialValue: currentPageData.ipsaBuDeptId\n                    })(\n                      <Select\n                        allowClear\n                        onChange={this.handleChangeBuDeptId.bind(this)}\n                      >\n                        {buList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={6}>\n                  <Form.Item\n                    labelCol={{ span: 4 }}\n                    wrapperCol={{ span: 14 }}\n                    label=\"部门\"\n                    hasFeedback\n                  >\n                    {getFieldDecorator('ipsaDeptId', {\n                      initialValue: currentPageData.ipsaDeptId\n                    })(\n                      <Select allowClear>\n                        {depList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item\n                    labelCol={{ span: 4 }}\n                    wrapperCol={{ span: 12 }}\n                    label=\"学历\"\n                    hasFeedback\n                  >\n                    {getFieldDecorator('educationCode', {\n                      initialValue: currentPageData.educationCode\n                    })(\n                      <Select allowClear>\n                        {educationCodeEnum.map(item => {\n                          return (\n                            <Option key={item.key} value={item.key}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={7}>\n                  <Form.Item\n                    labelCol={{ span: 7 }}\n                    wrapperCol={{ span: 9 }}\n                    label=\"是否统招\"\n                    hasFeedback\n                  >\n                    {getFieldDecorator('uniformFlag', {\n                      initialValue: currentPageData.uniformFlag\n                    })(\n                      <Select allowClear>\n                        {uniformFlagEnum.map(item => {\n                          return (\n                            <Option key={item.key} value={item.key}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={2} style={{ textAlign: 'right' }}>\n                  <Button\n                    type=\"primary\"\n                    style={{\n                      marginTop: '3px',\n                      marginRight: '15%'\n                    }}\n                    onClick={this.handleSearchList.bind(this)}\n                  >\n                    查询\n                  </Button>\n                </Col>\n              </Form>\n            </Row>\n          </Col>\n          <Col span={24} className=\"educ-content-table\">\n            <Table\n              rowKey={(record, index) => index}\n              columns={columns}\n              dataSource={educList}\n              pagination={false}\n            />\n          </Col>\n          <Col className=\"educ-paging\" span={24}>\n            <Pagination\n              total={total}\n              current={currentPageData.currentPage}\n              onChange={page => {\n                this.handleTableChange(page);\n              }}\n            />\n          </Col>\n        </Row>\n        <EducationModal />\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(EducationInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Row, Col, Button, Select, Modal, Form, DatePicker, Input } from 'antd';\nimport './projectModal.less';\nimport { actionCreators } from '../store';\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n@connect(state => state.project, actionCreators)\nclass ProjectModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shortTime: null\n    };\n  }\n  //获取一类岗位\n  handleFocusFirstCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_1');\n  };\n\n  //获取二类岗位\n  handleFocusSecondCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_2');\n  };\n\n  //获取三类岗位\n  handleFocusThirdCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_3');\n  };\n\n  //获取层级\n  handleFocusaliGradeCode = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_level');\n  };\n\n  //获取工作城市\n  handleFocusWorkCity = () => {\n    const { dictInfo } = this.props;\n    dictInfo('work_city');\n  };\n\n  //获取项目名称\n  handleFocusProjectList = () => {\n    const { dictInfo } = this.props;\n    dictInfo('project_list');\n  };\n\n  //获取框架\n  handleFocusIframe = () => {\n    const { deptInfoIframe } = this.props;\n    const arg0 = {\n      value: '',\n      flag: 'zero'\n    };\n    deptInfoIframe(arg0);\n  };\n\n  handleChangeIftame = (value, key) => {\n    console.log('key', key);\n\n    if (key) {\n      const { deptInfo } = this.props;\n      const arg0 = {\n        value: key.key,\n        flag: value\n      };\n      deptInfo(arg0);\n    }\n    if (!key) {\n      const {\n        changeCareerGroupId,\n        changeCareerDeptId,\n        changeGroupDeptId,\n        changeDeptId\n      } = this.props;\n      changeCareerGroupId([]);\n      changeCareerDeptId([]);\n      changeGroupDeptId([]);\n      changeDeptId([]);\n      this.props.form.resetFields();\n    }\n  };\n\n  handleCancel = () => {\n    const { changeProjectVisible } = this.props;\n    changeProjectVisible({\n      projectVisible: false,\n      record: {}\n    });\n  };\n\n  handleOk = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { projectRecord, updateProjectRecordInfoById } = this.props;\n        const projectStartTimeFormat = values.shortTime\n          ? moment(values.shortTime[0]).format('YYYY-MM-DD')\n          : '';\n        const projectEndTimeFormat = values.shortTime\n          ? moment(values.shortTime[1]).format('YYYY-MM-DD')\n          : '';\n\n        const reg = /[\\u4e00-\\u9fa5]/g;\n        const level = values.aliGradeCode.label\n          ? values.aliGradeCode.label.match(reg).join('')\n          : '';\n        const arg0 = {\n          id: projectRecord.id,\n          aliNo: values.aliNo,\n          projectName: values.projectId.label,\n          projectId: values.projectId.key,\n          joiningProjTimeFormat: values.joiningProjTimeFormat\n            ? moment(values.joiningProjTimeFormat).format('YYYY-MM-DD')\n            : '',\n          managerId: projectRecord.managerId,\n          managerName: projectRecord.managerName,\n          firstCategoryId: values.firstCategoryId.key,\n          secondCategoryId: values.secondCategoryId.key,\n          thirdJobId: values.thirdJobId.key,\n          aliGradeCode: values.aliGradeCode.key,\n          techDirection: values.techDirection,\n          aliFrameId: values.aliFrameId.key,\n          careerGroupId: values.careerGroupId.key,\n          groupDeptId: values.groupDeptId.key,\n          careerDeptId: values.careerDeptId.key,\n          deptId: values.deptId.key,\n          businessLine:\n            values.iduFlag === 1\n              ? 'IDU-' + values.careerDeptId.label\n              : values.careerDeptId.label,\n          projetDurationType: values.projetDurationType,\n          projetType: values.projetType,\n          iduFlag: values.iduFlag,\n          tlFlag: values.tlFlag,\n          workCity: values.workCity,\n          workAddress: values.workAddress,\n          resourceStatus: values.resourceStatus,\n          backboneFlag: level === '资深' || level === '专家' ? 1 : 0,\n          chargeFlag: values.chargeFlag,\n          leaveProjReasonId: values.leaveProjReasonId,\n          leaveProjType: values.leaveProjType,\n          projectStartTimeFormat,\n          projectEndTimeFormat\n        };\n        console.log('arg0', arg0);\n\n        updateProjectRecordInfoById(arg0);\n      }\n    });\n  };\n\n  //选择项目时长\n  handleChangeprojetType = value => {\n    console.log('value', value);\n    this.setState({\n      shortTime: value\n    });\n  };\n\n  //关闭弹框刷新表单\n  handleAfterClose = () => {\n    this.props.form.resetFields();\n  };\n\n  render() {\n    const {\n      projectVisible,\n      firstCategoryidList,\n      secondCategoryidList,\n      thirdCategoryidList,\n      aliGradeCodeList,\n      workCityList,\n      newProjectList = [],\n      iframeList = [],\n      careerGroupList = [],\n      groupdeptList = [],\n      careerdepList = [],\n      deptIdList = [],\n      projectRecord\n    } = this.props;\n    const { shortTime } = this.state;\n\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    return (\n      <div className=\"project-modal\">\n        <Modal\n          title=\"编辑项目信息\"\n          visible={projectVisible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          afterClose={this.handleAfterClose}\n          className=\"project-add-modal\"\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Row>\n            <Form\n              {...formItemLayout}\n              onSubmit={this.handleSubmit}\n              className=\"project-form\"\n            >\n              <Col>\n                <Form.Item label=\"阿里工号\" hasFeedback>\n                  {getFieldDecorator('aliNo', {\n                    initialValue: projectRecord.aliNo ? projectRecord.aliNo : ''\n                  })(<Input />)}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"入项时间\" hasFeedback>\n                  {getFieldDecorator('joiningProjTimeFormat', {\n                    initialValue: projectRecord.joiningProjTime\n                      ? moment(projectRecord.joiningProjTime)\n                      : null\n                  })(\n                    <DatePicker\n                      showToday={false}\n                      placeholder=\"请选择入项时间\"\n                      // onChange={this.onChange.bind(this)}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"一类岗位\" hasFeedback>\n                  {getFieldDecorator('firstCategoryId', {\n                    initialValue: projectRecord.firstCategoryId\n                      ? projectRecord.firstCategoryId\n                      : {}\n                  })(\n                    <Select\n                      allowClear\n                      labelInValue\n                      onFocus={this.handleFocusFirstCategoryId.bind(this)}\n                    >\n                      {firstCategoryidList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"二类岗位\" hasFeedback>\n                  {getFieldDecorator('secondCategoryId', {\n                    initialValue: projectRecord.secondCategoryId\n                      ? projectRecord.secondCategoryId\n                      : {}\n                  })(\n                    <Select\n                      allowClear\n                      labelInValue\n                      onFocus={this.handleFocusSecondCategoryId.bind(this)}\n                    >\n                      {secondCategoryidList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"三类岗位\" hasFeedback>\n                  {getFieldDecorator('thirdJobId', {\n                    initialValue: projectRecord.thirdJobId\n                      ? projectRecord.thirdJobId\n                      : {}\n                  })(\n                    <Select\n                      allowClear\n                      labelInValue\n                      onFocus={this.handleFocusThirdCategoryId.bind(this)}\n                    >\n                      {thirdCategoryidList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"层级\" hasFeedback>\n                  {getFieldDecorator('aliGradeCode', {\n                    initialValue: projectRecord.aliGradeCode\n                      ? projectRecord.aliGradeCode\n                      : {}\n                  })(\n                    <Select\n                      allowClear\n                      labelInValue\n                      onFocus={this.handleFocusaliGradeCode.bind(this)}\n                    >\n                      {aliGradeCodeList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"技术方向\" hasFeedback>\n                  {getFieldDecorator('techDirection', {\n                    initialValue: projectRecord.techDirection\n                      ? projectRecord.techDirection\n                      : ''\n                  })(<Input />)}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"框架\" hasFeedback>\n                  {getFieldDecorator('aliFrameId', {\n                    initialValue: projectRecord.aliFrameId\n                      ? projectRecord.aliFrameId\n                      : {}\n                  })(\n                    <Select\n                      labelInValue\n                      onFocus={this.handleFocusIframe.bind(this)}\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'aliFrameId'\n                      )}\n                    >\n                      {Array.isArray(iframeList) &&\n                        iframeList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"事业群\" hasFeedback>\n                  {getFieldDecorator('careerGroupId', {\n                    initialValue: projectRecord.careerGroupId\n                      ? projectRecord.careerGroupId\n                      : {}\n                  })(\n                    <Select\n                      labelInValue\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'careerGroupId'\n                      )}\n                    >\n                      {Array.isArray(careerGroupList) &&\n                        careerGroupList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"事业群本部\" hasFeedback>\n                  {getFieldDecorator('groupDeptId', {\n                    initialValue: projectRecord.groupDeptId\n                      ? projectRecord.groupDeptId\n                      : {}\n                  })(\n                    <Select\n                      labelInValue\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'groupDeptId'\n                      )}\n                    >\n                      {Array.isArray(groupdeptList) &&\n                        groupdeptList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"事业部\" hasFeedback>\n                  {getFieldDecorator('careerDeptId', {\n                    initialValue: projectRecord.careerDeptId\n                      ? projectRecord.careerDeptId\n                      : {}\n                  })(\n                    <Select\n                      labelInValue\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'careerDeptId'\n                      )}\n                    >\n                      {Array.isArray(careerdepList) &&\n                        careerdepList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"阿里部门\" hasFeedback>\n                  {getFieldDecorator('deptId', {\n                    initialValue: projectRecord.deptId\n                      ? projectRecord.deptId\n                      : {}\n                  })(\n                    <Select labelInValue>\n                      {Array.isArray(deptIdList) &&\n                        deptIdList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"项目名称\" hasFeedback>\n                  {getFieldDecorator('projectId', {\n                    initialValue: projectRecord.projectId\n                      ? projectRecord.projectId\n                      : {}\n                  })(\n                    <Select\n                      labelInValue\n                      onFocus={this.handleFocusProjectList.bind(this)}\n                    >\n                      {Array.isArray(newProjectList) &&\n                        newProjectList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item label=\"项目类型\" hasFeedback>\n                  {getFieldDecorator('projetType', {\n                    initialValue: projectRecord.projetType\n                      ? projectRecord.projetType\n                      : ''\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>FP</Option>\n                      <Option value={1}>TM</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item label=\"项目时长\" hasFeedback>\n                  {getFieldDecorator('projetDurationType', {\n                    initialValue: projectRecord.projetDurationType\n                      ? projectRecord.projetDurationType\n                      : ''\n                  })(\n                    <Select allowClear onChange={this.handleChangeprojetType}>\n                      <Option value={0}>短期</Option>\n                      <Option value={1}>长期</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              {shortTime === '0' ? (\n                <Col>\n                  <Form.Item label=\"短期起始\" hasFeedback>\n                    {getFieldDecorator('shortTime')(\n                      <RangePicker\n                        placeholder={['起始日期', '结束日期']}\n                        ranges={{\n                          当天: [moment(), moment()],\n                          本月: [\n                            moment().startOf('month'),\n                            moment().endOf('month')\n                          ]\n                        }}\n                      />\n                    )}\n                  </Form.Item>\n                </Col>\n              ) : (\n                ''\n              )}\n              <Col>\n                <Form.Item label=\"是否IDU\" hasFeedback>\n                  {getFieldDecorator('iduFlag', {\n                    initialValue: projectRecord.iduFlag\n                      ? projectRecord.iduFlag\n                      : ''\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>否</Option>\n                      <Option value={1}>是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"是否TL\" hasFeedback>\n                  {getFieldDecorator('tlFlag', {\n                    initialValue: projectRecord.tlFlag\n                      ? projectRecord.tlFlag\n                      : ''\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>否</Option>\n                      <Option value={1}>是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item\n                  label=\"工作城市\"\n                  hasFeedback\n                  onFocus={this.handleFocusWorkCity.bind(this)}\n                >\n                  {getFieldDecorator('workCity', {\n                    initialValue: projectRecord.workCity\n                      ? projectRecord.workCity\n                      : ''\n                  })(\n                    <Select allowClear>\n                      {workCityList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"办公场地\" hasFeedback>\n                  {getFieldDecorator('workAddress', {\n                    initialValue: projectRecord.workAddress\n                      ? projectRecord.workAddress\n                      : ''\n                  })(<Input />)}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"资源状态\" hasFeedback>\n                  {getFieldDecorator('resourceStatus', {\n                    initialValue: projectRecord.resourceStatus\n                      ? projectRecord.resourceStatus\n                      : ''\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>闲置</Option>\n                      <Option value={1}>在岗</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"是否收费\" hasFeedback>\n                  {getFieldDecorator('chargeFlag', {\n                    initialValue: projectRecord.chargeFlag\n                      ? projectRecord.chargeFlag\n                      : ''\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>否</Option>\n                      <Option value={1}>是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n            </Form>\n          </Row>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ProjectModal);\n","import React from 'react';\nimport { Button } from 'antd';\nimport moment from 'moment';\nexport const projectColumnsFunction = that => {\n  const projectList = [\n    {\n      title: 'BU',\n      dataIndex: 'ipsaBuDeptName',\n      width: '100px'\n    },\n    {\n      title: '部门',\n      dataIndex: 'ipsaDeptName',\n      width: '180px'\n    },\n    {\n      title: '姓名',\n      dataIndex: 'empName',\n      width: '80px'\n    },\n    {\n      title: '软通工号',\n      dataIndex: 'empNo',\n      width: '100px'\n    },\n    {\n      title: '阿里工号',\n      dataIndex: 'aliNo',\n      width: '100px'\n    },\n    {\n      title: '入项时间',\n      dataIndex: 'joiningProjTime',\n      width: '100px',\n      render: (text, record) => {\n        return <span>{text ? moment(text).format('YYYY-MM-DD') : ''}</span>;\n      }\n    },\n    {\n      title: '一类岗位',\n      dataIndex: 'firstCategoryName',\n      width: '100px'\n    },\n    {\n      title: '二类岗位',\n      dataIndex: 'secondCategoryName',\n      width: '100px'\n    },\n    {\n      title: '三类岗位',\n      dataIndex: 'thirdJobName',\n      width: '100px'\n    },\n    {\n      title: '层级',\n      dataIndex: 'aliGradeCodeName',\n      width: '80px'\n    },\n    {\n      title: '技术方向',\n      dataIndex: 'techDirection',\n      width: '100px'\n    },\n    {\n      title: '框架',\n      dataIndex: 'aliFrameName',\n      width: '80px'\n    },\n    {\n      title: '事业群',\n      dataIndex: 'careerGroupName',\n      width: '100px'\n    },\n    {\n      title: '事业群本部',\n      dataIndex: 'groupDeptName',\n      width: '80px'\n    },\n    {\n      title: '事业部',\n      dataIndex: 'careerDeptName',\n      width: '100px'\n    },\n    {\n      title: '阿里部门',\n      dataIndex: 'deptName',\n      width: '100px'\n    },\n    {\n      title: '项目名称',\n      dataIndex: 'projectName',\n      width: '100px'\n    },\n    {\n      title: '业务线名称',\n      dataIndex: 'businessLine',\n      width: '100px'\n    },\n    {\n      title: '项目类型',\n      dataIndex: 'projetType',\n      width: '80px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>FP</span>;\n\n          case 1:\n            return <span>TM</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '项目时长',\n      dataIndex: 'projetDurationType',\n      width: '80px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>短期</span>;\n\n          case 1:\n            return <span>长期</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '是否IDU',\n      dataIndex: 'iduFlag',\n      width: '70px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>否</span>;\n\n          case 1:\n            return <span>是</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '是否TL',\n      dataIndex: 'tlFlag',\n      width: '70px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>否</span>;\n\n          case 1:\n            return <span>是</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '工作城市',\n      dataIndex: 'workCityName',\n      width: '100px'\n    },\n    {\n      title: '办公场地',\n      dataIndex: 'workAddress',\n      width: '100px'\n    },\n    {\n      title: '资源状态',\n      dataIndex: 'resourceStatus',\n      width: '80px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>闲置</span>;\n\n          case 1:\n            return <span>在岗</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '是否骨干',\n      dataIndex: 'backboneFlag',\n      width: '70px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>否</span>;\n\n          case 1:\n            return <span>是</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '是否收费',\n      dataIndex: 'chargeFlag',\n      width: '70px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>否</span>;\n\n          case 1:\n            return <span>是</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '操作',\n      dataIndex: 'action',\n      width: '70px',\n      fixed: 'right',\n      render: (text, record) => {\n        const { changeProjectVisible } = that.props;\n\n        return (\n          <Button\n            onClick={() => {\n              const newRecord = JSON.parse(JSON.stringify(record));\n              newRecord.projectId = {\n                key: record.projectId ? record.projectId : '',\n                label: record.projectName ? record.projectName : ''\n              };\n              newRecord.firstCategoryId = {\n                key: record.firstCategoryId ? record.firstCategoryId : '',\n                label: record.firstCategoryName ? record.firstCategoryName : ''\n              };\n              newRecord.secondCategoryId = {\n                key: record.secondCategoryId ? record.secondCategoryId : '',\n                label: record.secondCategoryName\n                  ? record.secondCategoryName\n                  : ''\n              };\n              newRecord.thirdJobId = {\n                key: record.thirdJobId ? record.thirdJobId : '',\n                label: record.thirdJobName ? record.thirdJobName : ''\n              };\n              newRecord.aliGradeCode = {\n                key: record.aliGradeCode ? record.aliGradeCode : '',\n                label: record.aliGradeCodeName ? record.aliGradeCodeName : ''\n              };\n              newRecord.aliFrameId = {\n                key: record.aliFrameId ? record.aliFrameId : '',\n                label: record.aliFrameName ? record.aliFrameName : ''\n              };\n              newRecord.careerGroupId = {\n                key: record.careerGroupId ? record.careerGroupId : '',\n                label: record.careerGroupName ? record.careerGroupName : ''\n              };\n              newRecord.groupDeptId = {\n                key: record.groupDeptId ? record.groupDeptId : '',\n                label: record.groupDeptName ? record.groupDeptName : ''\n              };\n              newRecord.careerDeptId = {\n                key: record.careerDeptId ? record.careerDeptId : '',\n                label: record.careerDeptName ? record.careerDeptName : ''\n              };\n              newRecord.deptId = {\n                key: record.deptId ? record.deptId : '',\n                label: record.deptName ? record.deptName : ''\n              };\n              changeProjectVisible({\n                projectVisible: true,\n                record: newRecord\n              });\n            }}\n          >\n            编辑\n          </Button>\n        );\n      }\n    }\n  ];\n  return projectList;\n};\n","import React, { Component } from 'react';\nimport { Row, Input, Col, Button, Form, Select, DatePicker } from 'antd';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { actionCreators } from '../store';\nimport './searchForm.less';\n\nconst { Option } = Select;\n\n@connect(state => state.project, actionCreators)\nclass SearchForm extends Component {\n  onChange = (date, dateString) => {\n    console.log(date, dateString);\n  };\n\n  //切换BU列表\n  handleChangeBuDeptId = value => {\n    const { deptInfo, changeDepList } = this.props;\n    if (value) {\n      const arg0 = {\n        flag: 'bu',\n        value\n      };\n      deptInfo(arg0);\n      this.props.form.resetFields();\n    } else {\n      changeDepList([]);\n    }\n  };\n\n  //获取一类岗位\n  handleFocusFirstCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_1');\n  };\n\n  //获取二类岗位\n  handleFocusSecondCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_2');\n  };\n\n  //获取三类岗位\n  handleFocusThirdCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_3');\n  };\n\n  //获取层级\n  handleFocusaliGradeCode = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_level');\n  };\n\n  //获取工作城市\n  handleFocusWorkCity = () => {\n    const { dictInfo } = this.props;\n    dictInfo('work_city');\n  };\n\n  //获取项目名称\n  handleFocusProjectList = () => {\n    const { dictInfo } = this.props;\n    dictInfo('project_list');\n  };\n\n  //获取框架\n  handleFocusIframe = () => {\n    const { deptInfoIframe } = this.props;\n    const arg0 = {\n      value: '',\n      flag: 'zero'\n    };\n    deptInfoIframe(arg0);\n  };\n\n  handleChangeIftame = (value, key) => {\n    if (key) {\n      const { deptInfo } = this.props;\n      const arg0 = {\n        value: key,\n        flag: value\n      };\n      deptInfo(arg0);\n    }\n    if (!key) {\n      const {\n        changeCareerGroupId,\n        changeCareerDeptId,\n        changeGroupDeptId,\n        changeDeptId\n      } = this.props;\n      changeCareerGroupId([]);\n      changeCareerDeptId([]);\n      changeGroupDeptId([]);\n      changeDeptId([]);\n      this.props.form.resetFields();\n    }\n  };\n\n  handleSearchSubmit = () => {\n    this.props.form.validateFields((err, values) => {\n      const {\n        changeSaveSearchSubmit,\n        queryProjectRecordInfoList,\n        changeCurrentPageData\n      } = this.props;\n      const arg0 = {\n        currentPage: 1,\n        pageSize: 10,\n        aliNo: values.aliNo,\n        ipsaBuDeptId: values.ipsaBuDeptId,\n        ipsaDeptId: values.ipsaDeptId,\n        projectId: values.projectId,\n        joiningProjTimeFormat: values.joiningProjTimeFormat\n          ? moment(values.joiningProjTimeFormat).format('YYYY-MM-DD')\n          : '',\n        firstCategoryId: values.firstCategoryId,\n        secondCategoryId: values.secondCategoryId,\n        thirdJobId: values.thirdJobId,\n        aliGradeCode: values.aliGradeCode,\n        techDirection: values.techDirection,\n        aliFrameId: values.aliFrameId,\n        careerGroupId: values.careerGroupId,\n        groupDeptId: values.groupDeptId,\n        careerDeptId: values.careerDeptId,\n        deptId: values.deptId,\n        projetDurationType: values.projetDurationType,\n        projetType: values.projetType,\n        iduFlag: values.iduFlag,\n        tlFlag: values.tlFlag,\n        workCity: values.workCity,\n        workAddress: values.workAddress,\n        resourceStatus: values.resourceStatus,\n        backboneFlag: values.backboneFlag,\n        chargeFlag: values.chargeFlag\n      };\n      changeSaveSearchSubmit(values);\n      changeCurrentPageData(arg0);\n      queryProjectRecordInfoList(arg0);\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const that = this;\n    const {\n      buList,\n      depList,\n      currentPageData,\n      firstCategoryidList,\n      secondCategoryidList,\n      thirdCategoryidList,\n      aliGradeCodeList,\n      workCityList,\n      newProjectList,\n      iframeList = [],\n      careerGroupList = [],\n      groupdeptList = [],\n      careerdepList = [],\n      deptIdList = []\n    } = this.props;\n    return (\n      <div className=\"project-search-from\">\n        <Row>\n          <Col span={22}>\n            <Form>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"BU\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('ipsaBuDeptId', {\n                    initialValue: currentPageData.ipsaBuDeptId\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleChangeBuDeptId.bind(this)}\n                    >\n                      {buList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.name}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"部门\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('ipsaDeptId', {\n                    initialValue: currentPageData.ipsaDeptId\n                  })(\n                    <Select allowClear>\n                      {depList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.name}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"阿里工号\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('aliNo', {\n                    initialValue: currentPageData.aliNo\n                  })(<Input />)}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"入项时间\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('joiningProjTimeFormat', {\n                    initialValue: currentPageData.joiningProjTimeFormat\n                      ? moment(currentPageData.joiningProjTimeFormat)\n                      : null\n                  })(\n                    <DatePicker\n                      showToday={false}\n                      placeholder=\"请选择入项时间\"\n                      onChange={this.onChange.bind(this)}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 9 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"一类岗位\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('firstCategoryId', {\n                    initialValue: currentPageData.firstCategoryId\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusFirstCategoryId.bind(this)}\n                    >\n                      {firstCategoryidList &&\n                        firstCategoryidList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"二类岗位\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('secondCategoryId', {\n                    initialValue: currentPageData.secondCategoryId\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusSecondCategoryId.bind(this)}\n                    >\n                      {secondCategoryidList &&\n                        secondCategoryidList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"三类岗位\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('thirdJobId', {\n                    initialValue: currentPageData.thirdJobId\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusThirdCategoryId.bind(this)}\n                    >\n                      {thirdCategoryidList &&\n                        thirdCategoryidList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"层级\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('aliGradeCode', {\n                    initialValue: currentPageData.aliGradeCode\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusaliGradeCode.bind(this)}\n                    >\n                      {aliGradeCodeList &&\n                        aliGradeCodeList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"框架\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('aliFrameId', {\n                    initialValue: currentPageData.ipsaBaliFrameIduDeptId\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusIframe.bind(this)}\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'aliFrameId'\n                      )}\n                    >\n                      {Array.isArray(iframeList) &&\n                        iframeList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 9 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"事业群\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('careerGroupId', {\n                    initialValue: currentPageData.careerGroupId\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'careerGroupId'\n                      )}\n                    >\n                      {Array.isArray(careerGroupList) &&\n                        careerGroupList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"事业群本部\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('groupDeptId', {\n                    initialValue: currentPageData.groupDeptId\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'groupDeptId'\n                      )}\n                    >\n                      {Array.isArray(groupdeptList) &&\n                        groupdeptList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"事业部\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('careerDeptId', {\n                    initialValue: currentPageData.careerDeptId\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'careerDeptId'\n                      )}\n                    >\n                      {Array.isArray(careerdepList) &&\n                        careerdepList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 10 }}\n                  wrapperCol={{ span: 14 }}\n                  label=\"阿里部门\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('deptId', {\n                    initialValue: currentPageData.deptId\n                  })(\n                    <Select allowClear>\n                      {Array.isArray(deptIdList) &&\n                        deptIdList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"项目名称\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('projectId', {\n                    initialValue: currentPageData.projectId\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusProjectList.bind(this)}\n                    >\n                      {Array.isArray(newProjectList) &&\n                        newProjectList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 9 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"项目类型\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('projetType', {\n                    initialValue: currentPageData.projetType\n                  })(\n                    <Select allowClear>\n                      <Option value=\"0\">EP</Option>\n                      <Option value=\"1\">TM</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"项目时长\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('projetDurationType', {\n                    initialValue: currentPageData.projetDurationType\n                  })(\n                    <Select allowClear>\n                      <Option value=\"0\">短期</Option>\n                      <Option value=\"1\">长期</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"是否IDU\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('iduFlag', {\n                    initialValue: currentPageData.iduFlag\n                  })(\n                    <Select allowClear>\n                      <Option value=\"0\">否</Option>\n                      <Option value=\"1\">是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 10 }}\n                  wrapperCol={{ span: 14 }}\n                  label=\"是否TL\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('tlFlag', {\n                    initialValue: currentPageData.tlFlag\n                  })(\n                    <Select allowClear>\n                      <Option value=\"0\">否</Option>\n                      <Option value=\"1\">是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"工作城市\"\n                  hasFeedback\n                  onFocus={this.handleFocusWorkCity.bind(this)}\n                >\n                  {getFieldDecorator('workCity', {\n                    initialValue: currentPageData.workCity\n                  })(\n                    <Select allowClear>\n                      {workCityList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 9 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"办公场地\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('workAddress', {\n                    initialValue: currentPageData.workAddress\n                  })(<Input />)}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"资源状态\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('resourceStatus', {\n                    initialValue: currentPageData.resourceStatus\n                  })(\n                    <Select allowClear>\n                      <Option value=\"0\">闲置</Option>\n                      <Option value=\"1\">在岗</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 10 }}\n                  label=\"是否骨干\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('backboneFlag', {\n                    initialValue: currentPageData.backboneFlag\n                  })(\n                    <Select allowClear>\n                      <Option value=\"0\">否</Option>\n                      <Option value=\"1\">是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 10 }}\n                  wrapperCol={{ span: 10 }}\n                  label=\"是否收费\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('chargeFlag', {\n                    initialValue: currentPageData.chargeFlag\n                  })(\n                    <Select allowClear>\n                      <Option value=\"0\">否</Option>\n                      <Option value=\"1\">是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n            </Form>\n          </Col>\n          <Col span={2} style={{ textAlign: 'right' }}>\n            <Button\n              type=\"primary\"\n              style={{\n                marginTop: '3px',\n                marginRight: '15%'\n              }}\n              onClick={this.handleSearchSubmit.bind(this)}\n            >\n              查询\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(SearchForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Button,\n  Table,\n  Pagination,\n  Input,\n  message,\n  Upload,\n  Tooltip\n} from 'antd';\nimport axios from 'axios';\nimport ProjectModal from './components/ProjectModal.jsx';\nimport { actionCreators } from './store';\nimport { projectColumnsFunction } from './projectColumns';\nimport SearchForm from './components/searchForm.jsx';\nimport './index.less';\nconst { Search } = Input;\n\n@connect(state => state.project, actionCreators)\nclass ProjectInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      thats: null\n    };\n  }\n\n  //table表格\n  handleGetColumns = () => {\n    const that = this;\n    const projectList = projectColumnsFunction(that);\n    return projectList;\n  };\n\n  componentDidMount() {\n    const { deptInfoBu, queryProjectRecordInfoList } = this.props;\n    deptInfoBu();\n    queryProjectRecordInfoList({\n      currentPage: 1,\n      pageSize: 10\n    });\n  }\n\n  //分页查询\n  handleTableChange = page => {\n    const {\n      queryProjectRecordInfoList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    const arg0 = {\n      currentPage: page,\n      pageSize: 10,\n      aliNo: currentPageData.aliNo,\n      ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n      ipsaDeptId: currentPageData.ipsaDeptId,\n      projectId: currentPageData.projectId,\n      joiningProjTimeFormat: currentPageData.joiningProjTimeFormat,\n      firstCategoryId: currentPageData.firstCategoryId,\n      secondCategoryId: currentPageData.secondCategoryId,\n      thirdJobId: currentPageData.thirdJobId,\n      aliGradeCode: currentPageData.aliGradeCode,\n      techDirection: currentPageData.techDirection,\n      aliFrameId: currentPageData.aliFrameId,\n      careerGroupId: currentPageData.careerGroupId,\n      groupDeptId: currentPageData.groupDeptId,\n      careerDeptId: currentPageData.careerDeptId,\n      deptId: currentPageData.deptId,\n      projetDurationType: currentPageData.projetDurationType,\n      projetType: currentPageData.projetType,\n      iduFlag: currentPageData.iduFlag,\n      tlFlag: currentPageData.tlFlag,\n      workCity: currentPageData.workCity,\n      workAddress: currentPageData.workAddress,\n      resourceStatus: currentPageData.resourceStatus,\n      backboneFlag: currentPageData.backboneFlag,\n      chargeFlag: currentPageData.chargeFlag,\n      keyword: currentPageData.keyword\n    };\n    changeCurrentPageData(arg0);\n    queryProjectRecordInfoList(arg0);\n  };\n\n  //导出excel\n  handleDownload = () => {\n    const token = localStorage.getItem('token');\n    const { currentPageData } = this.props;\n    axios({\n      method: 'get',\n      url: '/api/project/download',\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      params: {\n        aliNo: currentPageData.aliNo,\n        ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n        ipsaDeptId: currentPageData.ipsaDeptId,\n        projectId: currentPageData.projectId,\n        joiningProjTimeFormat: currentPageData.joiningProjTimeFormat,\n        firstCategoryId: currentPageData.firstCategoryId,\n        secondCategoryId: currentPageData.secondCategoryId,\n        thirdJobId: currentPageData.thirdJobId,\n        aliGradeCode: currentPageData.aliGradeCode,\n        techDirection: currentPageData.techDirection,\n        aliFrameId: currentPageData.aliFrameId,\n        careerGroupId: currentPageData.careerGroupId,\n        groupDeptId: currentPageData.groupDeptId,\n        careerDeptId: currentPageData.careerDeptId,\n        deptId: currentPageData.deptId,\n        projetDurationType: currentPageData.projetDurationType,\n        projetType: currentPageData.projetType,\n        iduFlag: currentPageData.iduFlag,\n        tlFlag: currentPageData.tlFlag,\n        workCity: currentPageData.workCity,\n        workAddress: currentPageData.workAddress,\n        resourceStatus: currentPageData.resourceStatus,\n        backboneFlag: currentPageData.backboneFlag,\n        chargeFlag: currentPageData.chargeFlag,\n        keyword: currentPageData.keyword\n      },\n      responseType: 'blob'\n    })\n      .then(res => {\n        if (res.status === 200) {\n          const blob = new Blob([res.data], {\n            type:\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'\n          });\n          const url = window.URL.createObjectURL(blob);\n          const aLink = document.createElement('a');\n          aLink.style.display = 'none';\n          aLink.href = url;\n          aLink.setAttribute('download', 'excel.xlsx');\n          document.body.appendChild(aLink);\n          aLink.click();\n          document.body.removeChild(aLink); //下载完成移除元素\n          window.URL.revokeObjectURL(url);\n          message.success('导出成功');\n        } else {\n          message.error('导出失败');\n        }\n      })\n      .catch(err => {\n        message.error('导出失败');\n      });\n  };\n\n  //导入数据提醒\n  handleChangeFile = ({ file, fileList }) => {\n    const { queryEmployeeBaseInfoList } = this.props;\n\n    if (file && file.status === 'done' && file.response.success) {\n      message.success(\n        file.response.message + '，共导入' + file.response.data + '条数据'\n      );\n      queryEmployeeBaseInfoList({\n        currentPage: 1,\n        pageSize: 20\n      });\n    } else {\n      if (file && file.status === 'done' && !file.response.success) {\n        message.error('上传失败:' + file.response.message);\n      }\n    }\n  };\n\n  //上传前的文件校验\n  handleBeforeUpload = (file, fileList) => {\n    if (\n      file &&\n      file.type !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      message.error('请上传以.xlsx为后缀的Excel文件');\n      return;\n    }\n  };\n\n  //搜索框调用查询列表\n  handleSearchInput = value => {\n    const { queryProjectRecordInfoList, changeCurrentPageData } = this.props;\n    const { thats } = this.state;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      aliNo: '',\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      projectId: '',\n      joiningProjTimeFormat: '',\n      firstCategoryId: '',\n      secondCategoryId: '',\n      thirdJobId: '',\n      aliGradeCode: '',\n      techDirection: '',\n      aliFrameId: '',\n      careerGroupId: '',\n      groupDeptId: '',\n      careerDeptId: '',\n      deptId: '',\n      projetDurationType: '',\n      projetType: '',\n      iduFlag: '',\n      tlFlag: '',\n      workCity: '',\n      workAddress: '',\n      resourceStatus: '',\n      backboneFlag: '',\n      chargeFlag: '',\n      keyword: value\n    };\n    changeCurrentPageData(arg0);\n    queryProjectRecordInfoList(arg0);\n    thats.props.form.resetFields();\n  };\n\n  handleChangeSearchInput = value => {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      aliNo: '',\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      projectId: '',\n      joiningProjTimeFormat: '',\n      firstCategoryId: '',\n      secondCategoryId: '',\n      thirdJobId: '',\n      aliGradeCode: '',\n      techDirection: '',\n      aliFrameId: '',\n      careerGroupId: '',\n      groupDeptId: '',\n      careerDeptId: '',\n      deptId: '',\n      projetDurationType: '',\n      projetType: '',\n      iduFlag: '',\n      tlFlag: '',\n      workCity: '',\n      workAddress: '',\n      resourceStatus: '',\n      backboneFlag: '',\n      chargeFlag: '',\n      keyword: value.target.value\n    };\n    changeCurrentPageData(arg0);\n  };\n\n  //刷新子组件\n\n  render() {\n    const {\n      projectDataList,\n      total,\n      currentPageData,\n      saveSearchData\n    } = this.props;\n    const token = localStorage.getItem('token');\n    return (\n      <div className=\"project-information\">\n        <Row style={{ padding: '20px' }}>\n          <Col span={24}>\n            <Row className=\"project-operator-set\">\n              <Col span={8}>\n                <Search\n                  style={{ width: '50%', marginLeft: '20px' }}\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => this.handleSearchInput(value)}\n                  onChange={value => this.handleChangeSearchInput(value)}\n                  value={currentPageData.keyword}\n                  enterButton\n                />\n              </Col>\n              <Col span={16} style={{ textAlign: 'right' }}>\n                <div\n                  style={{\n                    width: '64px',\n                    display: 'inline-block',\n                    marginRight: '7%'\n                  }}\n                >\n                  <Upload\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    action=\"/api/project/import/projectRecordInfo.json\"\n                    method=\"post\"\n                    headers={{\n                      Authorization: 'Bearer ' + token\n                    }}\n                    showUploadList={false}\n                    onChange={this.handleChangeFile.bind(this)}\n                    beforeUpload={this.handleBeforeUpload.bind(this)}\n                  >\n                    <Tooltip title=\"支持导入.xlsx文件\">\n                      <Button type=\"primary\">导入</Button>\n                    </Tooltip>\n                  </Upload>\n                </div>\n                <div\n                  style={{\n                    width: '64px',\n                    display: 'inline-block',\n                    marginRight: '2%'\n                  }}\n                >\n                  <Button\n                    type=\"primary\"\n                    onClick={this.handleDownload.bind(this)}\n                  >\n                    导出\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '5px' }} span={24}>\n            <SearchForm handleSonSearch={this.handleSonSearch} />\n          </Col>\n          <Col className=\"project-content-table\" span={24}>\n            <Table\n              rowKey={(record, index) => index}\n              columns={this.handleGetColumns()}\n              dataSource={projectDataList}\n              scroll={{ x: '100%' }}\n              pagination={false}\n            />\n          </Col>\n          <Col className=\"project-paging\" span={24}>\n            <Pagination\n              total={total}\n              current={currentPageData.currentPage}\n              onChange={page => {\n                this.handleTableChange(page);\n              }}\n            />\n          </Col>\n        </Row>\n        <ProjectModal />\n      </div>\n    );\n  }\n}\nexport default ProjectInformation;\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Table, Form, Select, Input } from 'antd';\nimport { connect } from 'react-redux';\n// import { actionCreators } from '../BasicInformation/store';\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst data = [\n  {\n    key: '1',\n    empName: 'John Brown',\n    ipsaBuDeptId: 32,\n    ipsaDeptId: 'New York No. 1 Lake Park',\n    empNo: 111\n  }\n];\n// @connect(state => state.basic, actionCreators)\nclass Department extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: '姓名',\n        dataIndex: 'empName',\n        width: '150px'\n      },\n      {\n        title: 'BU',\n        dataIndex: 'ipsaBuDeptId',\n        width: '150px'\n      },\n      {\n        title: '部门',\n        dataIndex: 'ipsaDeptId',\n        width: '150px'\n      },\n      {\n        title: '软通工号',\n        dataIndex: 'empNo',\n        width: '150px'\n      },\n      {\n        title: '调整后一类岗位',\n        dataIndex: 'w',\n        width: '150px'\n      },\n      {\n        title: '调整后二类岗位',\n        dataIndex: 'e',\n        width: '150px'\n      },\n      {\n        title: '调整后三类岗位',\n        dataIndex: 'r',\n        width: '150px'\n      },\n      {\n        title: '调岗生效时间',\n        dataIndex: 't',\n        width: '150px'\n      },\n      {\n        title: '调整后层级',\n        dataIndex: 'y',\n        width: '150px'\n      },\n      {\n        title: '调级生效时间',\n        dataIndex: 'u',\n        width: '150px'\n      },\n      {\n        title: '调整后职位',\n        dataIndex: 'i',\n        width: '150px'\n      },\n      {\n        title: '调整后职级',\n        dataIndex: 'o',\n        width: '150px'\n      },\n      {\n        title: '调职调级生效时间',\n        dataIndex: 'p',\n        width: '150px'\n      },\n      {\n        title: '调整后部门',\n        dataIndex: 'a',\n        width: '150px'\n      },\n      {\n        title: '部门调整生效时间',\n        dataIndex: 's',\n        width: '150px'\n      },\n      {\n        title: '操作',\n        dataIndex: 'action',\n        width: '150px',\n        render: (text, record) => {\n          return <Button>编辑</Button>;\n        }\n      }\n    ];\n  }\n  render() {\n    const columns = this.columns;\n    const { basicList } = this.props;\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 12 }\n      }\n    };\n    console.log('basicList', basicList);\n\n    return (\n      <div>\n        <Row style={{ padding: '30px' }}>\n          <Col span={24}>\n            <Row>\n              <Col span={12}>\n                <Search\n                  style={{ width: '50%' }}\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => console.log(value)}\n                  enterButton\n                />\n              </Col>\n              <Col span={12} style={{ textAlign: 'right' }}>\n                <Button style={{ marginRight: '40px' }} type=\"primary\">\n                  导入\n                </Button>\n                <Button style={{ marginRight: '30px' }} type=\"primary\">\n                  导出\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '30px' }} span={24}>\n            <Row>\n              <Form {...formItemLayout}>\n                <Col span={6}>\n                  <Form.Item label=\"BU\" hasFeedback>\n                    {getFieldDecorator('confirm')(\n                      <Select>\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={6}>\n                  <Form.Item label=\"部门\" hasFeedback>\n                    {getFieldDecorator('bumen')(\n                      <Select>\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item label=\"生效时间\" hasFeedback>\n                    {getFieldDecorator('sex')(\n                      <Select>\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                {/* <Col span={8}>\n                  <Form.Item label=\"是否统招本科\" hasFeedback>\n                    {getFieldDecorator('entry')(\n                      <Select>\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col> */}\n                <Col span={4} style={{ textAlign: 'right' }}>\n                  <Button\n                    type=\"primary\"\n                    style={{\n                      marginTop: '3px',\n                      marginLeft: '5%',\n                      marginRight: '30px'\n                    }}\n                  >\n                    查询\n                  </Button>\n                </Col>\n              </Form>\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Table columns={columns} dataSource={data} scroll={{ x: '100%' }} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Department);\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Form, Select } from 'antd';\nimport { leaveFormList } from '../../../utils/tableTitle.config.js';\nconst { Option } = Select;\nconst searchListNo = [\n  'name',\n  'empNo',\n  'onepost',\n  'twopost',\n  'frame',\n  'businessunit',\n  'projecttype'\n];\nclass SearchForm extends Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 10 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 14 }\n      }\n    };\n    return (\n      <div>\n        <Row style={{ marginRight: '30px' }}>\n          <Form {...formItemLayout}>\n            {leaveFormList.map(item => {\n              if (!searchListNo.includes(item.dataIndex)) {\n                return (\n                  <Col key={item.dataIndex} span={6}>\n                    <Form.Item label={item.title} hasFeedback>\n                      {getFieldDecorator(item.dataIndex)(\n                        <Select>\n                          <Option value=\"jack\">Jack</Option>\n                          <Option value=\"lucy\">Lucy</Option>\n                          <Option value=\"tom\">Tom</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                );\n              }\n            })}\n\n            {/* <Col span={4}>\n              <Form.Item label=\"部门\" hasFeedback>\n                {getFieldDecorator('bumen')(\n                  <Select>\n                    <Option value=\"jack\">Jack</Option>\n                    <Option value=\"lucy\">Lucy</Option>\n                    <Option value=\"tom\">Tom</Option>\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={4}>\n              <Form.Item label=\"学历\" hasFeedback>\n                {getFieldDecorator('sex')(\n                  <Select>\n                    <Option value=\"jack\">Jack</Option>\n                    <Option value=\"lucy\">Lucy</Option>\n                    <Option value=\"tom\">Tom</Option>\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"是否统招本科\" hasFeedback>\n                {getFieldDecorator('entry')(\n                  <Select>\n                    <Option value=\"jack\">Jack</Option>\n                    <Option value=\"lucy\">Lucy</Option>\n                    <Option value=\"tom\">Tom</Option>\n                  </Select>\n                )}\n              </Form.Item>\n            </Col> */}\n            <Col span={4} style={{ textAlign: 'right' }}>\n              <Button\n                type=\"primary\"\n                style={{\n                  marginTop: '3px',\n                  marginLeft: '5%',\n                  marginRight: '30px'\n                }}\n              >\n                查询\n              </Button>\n            </Col>\n          </Form>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(SearchForm);\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Table, Form, Select, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport SearchForm from './components/searchForm.jsx';\n// import { actionCreators } from '../BasicInformation/store';\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst data = [\n  {\n    key: '1',\n    empName: 'John Brown',\n    ipsaBuDeptId: 32,\n    ipsaDeptId: 'New York No. 1 Lake Park',\n    empNo: 111\n  }\n];\n// @connect(state => state.basic, actionCreators)\nclass Department extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: '姓名',\n        dataIndex: 'name',\n        width: '150px'\n      },\n      {\n        title: 'BU',\n        dataIndex: 'bu',\n        width: '150px'\n      },\n      {\n        title: '部门',\n        dataIndex: 'bumen',\n        width: '150px'\n      },\n      {\n        title: '软通工号',\n        dataIndex: 'empNo',\n        width: '150px'\n      },\n      {\n        title: '阿里离项时间',\n        dataIndex: 'alworkId',\n        width: '150px'\n      },\n      {\n        title: '阿里离项原因',\n        dataIndex: 'entryp',\n        width: '150px'\n      },\n      {\n        title: '阿里离项类型',\n        dataIndex: 'onepost',\n        width: '150px'\n      },\n      {\n        title: '业务线反馈离职原因',\n        dataIndex: 'twopost',\n        width: '150px'\n      },\n      {\n        title: '业务线反馈离职类型',\n        dataIndex: 'threepost',\n        width: '150px'\n      },\n      {\n        title: '业务线反馈离职分类',\n        dataIndex: 'hierarchy',\n        width: '150px'\n      },\n      {\n        title: '离职提出时间',\n        dataIndex: 'direction',\n        width: '150px'\n      },\n      {\n        title: '离职生效日',\n        dataIndex: 'frame',\n        width: '150px'\n      },\n      {\n        title: '离职时状态',\n        dataIndex: 'careergroup',\n        width: '150px'\n      },\n      {\n        title: 'IPSA离职原因',\n        dataIndex: 'businessunit',\n        width: '150px'\n      },\n      {\n        title: 'HR三月后离职分类',\n        dataIndex: 'entryname',\n        width: '150px'\n      },\n      {\n        title: 'HR一月后离职类型',\n        dataIndex: 'business',\n        width: '150px'\n      },\n      {\n        title: 'HR一月后沟通离职原因',\n        dataIndex: 'projecttype',\n        width: '150px'\n      },\n      {\n        title: '操作',\n        dataIndex: 'action',\n        width: '150px',\n        render: (text, record) => {\n          return <Button>编辑</Button>;\n        }\n      }\n    ];\n  }\n  render() {\n    const columns = this.columns;\n    const { basicList } = this.props;\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div>\n        <Row style={{ padding: '30px' }}>\n          <Col span={24}>\n            <Row>\n              <Col span={12}>\n                <Search\n                  style={{ width: '50%' }}\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => console.log(value)}\n                  enterButton\n                />\n              </Col>\n              <Col span={12} style={{ textAlign: 'right' }}>\n                <Button style={{ marginRight: '40px' }} type=\"primary\">\n                  导入\n                </Button>\n                <Button style={{ marginRight: '30px' }} type=\"primary\">\n                  导出\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '30px' }} span={24}>\n            <SearchForm />\n          </Col>\n          <Col span={24}>\n            <Table columns={columns} dataSource={data} scroll={{ x: '100%' }} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Department);\n","import React, { Component } from 'react';\n\nexport default class Analysis extends Component {\n  render() {\n    return (\n      <div>\n        <span>数据分析</span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass FrontendAuth extends Component {\n  componentWillReceiveProps(nextProps) {\n    const { pathname } = this.props.location;\n    const flag = localStorage.getItem('flag');\n    // 判断登录情况，如果是登录状态跳转至当前页面，如果不是登录状态跳转至登录页\n    if ((flag === null || flag === 'false') && pathname !== '/login') {\n      this.props.history.push('/login');\n      return;\n    }\n  }\n  componentDidMount() {\n    const { pathname } = this.props.location;\n    const flag = localStorage.getItem('flag');\n    // 判断登录情况，如果是登录状态跳转至当前页面，如果不是登录状态跳转至登录页\n    if ((flag === null || flag === 'false') && pathname !== '/login') {\n      this.props.history.push('/login');\n      return;\n    }\n  }\n  render() {\n    return null;\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\nexport default connect(mapStateToProps)(withRouter(FrontendAuth));\n","import React, { Component } from 'react';\nimport {\n  HashRouter,\n  Route,\n  Switch,\n  Redirect,\n  withRouter\n} from 'react-router-dom';\nimport Home from '../Home'; //首页\nimport Header from '../../components/Header'; //头部导航栏\nimport Login from '../Login'; //登录页面\nimport Error from '../../components/Error'; //404页面\nimport BasicInformation from '../BasicInformation'; //基础信息页面\nimport EducationInfo from '../EducationInfo'; //学历信息页面\nimport ProjectInformation from '../ProjectInformation'; //项目信息页面\nimport Department from '../Department'; //部门调整页面\nimport Leave from '../Leave'; //离职离项页面\nimport Analysis from '../Analysis/'; //数据分析页面\n\nimport FrontendAuth from '../../components/FrontendAuth'; //根据是否存有token值，判断是否登录\n\nconst routerList = [\n  '/',\n  '/home',\n  '/basic',\n  '/project',\n  '/department',\n  '/leave',\n  '/analysis',\n  '/education'\n];\nclass Layout extends Component {\n  render() {\n    const flag = localStorage.getItem('flag');\n    const { pathname } = this.props.location;\n    return (\n      <div style={{ minWidth: '1300px' }}>\n        <FrontendAuth />\n        {routerList.includes(pathname) && <Header />}\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          {flag === 'false' ? (\n            <Redirect to=\"/login\" />\n          ) : (\n            <Route exact path=\"/\" component={Home} />\n          )}\n          <Route exact path=\"/home\" component={Home} />\n          <Route path=\"/basic\" component={BasicInformation} />\n          <Route path=\"/education\" component={EducationInfo} />\n          <Route path=\"/project\" component={ProjectInformation} />\n          <Route path=\"/department\" component={Department} />\n          <Route path=\"/leave\" component={Leave} />\n          <Route path=\"/analysis\" component={Analysis} />\n          <Route component={Error} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Layout);\n","import React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport Layout from './page/Layout';\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Layout />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport moment from 'moment';\nimport { Provider } from 'react-redux';\nimport 'moment/locale/zh-cn';\nimport './index.css';\nimport store from './store'\nimport App from './App';\nmoment.locale('zh-cn');\n\n \nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}