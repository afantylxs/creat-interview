{"version":3,"sources":["images/login.jpg","images/404.png","page/Home/store/reducer.js","utils/axios.config.js","page/Home/store/actionCreators.js","page/Home/store/constants.js","page/BasicInformation/store/reducer.js","page/BasicInformation/store/actionCreators.js","page/BasicInformation/store/constants.js","page/ProjectInformation/store/reducer.js","page/ProjectInformation/store/actionCreators.js","page/ProjectInformation/store/constants.js","page/EducationInfo/store/reducer.js","page/EducationInfo/store/actionCreators.js","page/EducationInfo/store/constants.js","page/Analysis/store/reducer.js","page/PersonnelInformation/store/reducer.js","page/PersonnelInformation/store/actionCreators.js","page/PersonnelInformation/store/constants.js","store/reduce.js","page/Analysis/store/constants.js","store/index.js","page/Home/components/Reminder.jsx","page/Home/components/BirthdayReminder.jsx","page/Home/components/FieldNumber.jsx","page/Home/components/Rejular.jsx","page/Home/interviewComponents/InterviewReminder.jsx","page/Home/interviewComponents/InterviewRejular.jsx","page/Home/interviewComponents/WaitingDistribution.jsx","page/Home/interviewComponents/ProjectApproval.jsx","page/Home/index.jsx","utils/router.config.js","components/Menu/index.jsx","components/Header/index.jsx","page/Login/index.jsx","page/Register/index.jsx","components/Error/index.js","utils/optionEnum.js","page/BasicInformation/components/BasicModal.jsx","page/BasicInformation/basicColumns/index.jsx","page/BasicInformation/index.jsx","utils/tableTitle.config.js","page/EducationInfo/components/EducationModal.jsx","page/EducationInfo/index.jsx","page/ProjectInformation/components/ProjectModal.jsx","page/ProjectInformation/components/ProjectLeaveModal.jsx","page/ProjectInformation/projectColumns/index.jsx","page/ProjectInformation/components/searchForm.jsx","page/ProjectInformation/index.jsx","page/Department/index.jsx","page/Leave/components/searchForm.jsx","page/Leave/index.jsx","page/Analysis/components/WeekAnalysis.jsx","page/Analysis/components/GeneralTable.jsx","page/Analysis/index.jsx","page/PersonnelInformation/components/AssignModal.jsx","page/PersonnelInformation/components/EidtModal.jsx","page/PersonnelInformation/components/DetailsModal.jsx","page/PersonnelInformation/components/DistributionTable.jsx","page/PersonnelInformation/components/InterviewTable.jsx","page/PersonnelInformation/components/AddModal.jsx","page/PersonnelInformation/index.jsx","components/FrontendAuth/index.js","page/Layout/index.jsx","App.js","index.js"],"names":["module","exports","defaultState","rejularList","birthdayList","fieldList","reminderList","myTodoList","interviewRejularList","distributionResume","interviewResume","myTodoeducationData","regularTotal","fieldTotal","interviewRejularTotal","fetch","axios","create","baseURL","process","BASE_URL","timeout","interceptors","request","use","config","token","localStorage","getItem","method","data","params","headers","error","Promise","reject","response","code","status","setItem","message","changeBirthdayList","payload","type","changeRejularList","changeFieldList","changeReminderList","changeMyToDoProjectList","changeMyToDoEducationList","changeInterviewResumeData","changeDistributionResumeData","changeInterviewRejularData","getBirthdayList","dispatch","get","pageSize","currentPage","then","res","success","catch","err","getRejularList","arg0","total","getFieldList","getReminderList","queryMyToDoProject","queryMyToDoEducation","queryMyToDoAssignationInterview","queryMyToDoInterview","queryResumeWillRelease","console","log","basicVisible","currentPageData","keyword","ipsaBuDeptId","ipsaDeptId","gender","joiningDay","empProperty","joiningDayStartTime","joiningDayEndTime","directSuperiorId","basicRecord","basicList","rsData","dmData","buList","depList","dicList","dicModalList","manageList","gradeList","changeBasicVisible","changeBasicList","changeRsRoleData","changeDmRoleData","changeBuList","changeDepList","changeDepModalList","changeDicList","changemanageRoleData","changeGradeData","changeCurrentPageData","queryEmployeeBaseInfoList","post","basiclist","forEach","item","birthday","moment","format","correctionTime","saveEmployeeBaseInfo","getState","basic","record","updateEmployeeBaseInfo","deptInfoBu","queryUserListInfoByRolePermission","permission","roleData","searchEmployeeBaseInfoList","deptInfo","pid","id","dictInfo","dictName","projectVisible","leaveProjVisible","projectRecord","leaveProjRecord","projectDataList","firstCategoryidList","secondCategoryidList","thirdCategoryidList","aliGradeCodeList","workCityList","newProjectList","iframeList","careerGroupList","groupdeptList","careerdepList","deptIdList","saveSearchData","leaveProjList","thats","aliNo","projectId","joiningProjTimeFormat","firstCategoryId","secondCategoryId","thirdJobId","aliGradeCode","techDirection","aliFrameId","careerGroupId","groupDeptId","careerDeptId","deptId","projetDurationType","projetType","iduFlag","tlFlag","workCity","workAddress","resourceStatus","backboneFlag","chargeFlag","businessLine","changeProjectVisible","changeLeaveProjVisible","changeProjectDataList","changeFocusFirstCategoryId","changeFocusSecondCategoryId","changeFocusThirdCategoryId","changeFocusAliGradeCategoryId","changeFocusWorkCity","changeFocusProjectList","changeFocusIframe","changeCareerGroupId","changeGroupDeptId","changeCareerDeptId","changeDeptId","changeSaveSearchSubmit","changeFocusLeaveProjList","handleSaveSearchThis","value","flag","queryProjectRecordInfoList","deptInfoIframe","updateProjectRecordInfoById","educVisible","educList","majorList","educRecord","imageUrl","fileId","uniformFlag","educationCode","changeEducationVisible","changeEducList","changeDircInfoList","queryEducationRecordInfoList","updateEducationRecordInfoById","assignModalVisible","addModalvisible","editModalVisible","editRecord","detailsVisible","interviewerList","resourceMangeList","ownerList","leveList","typeList","projectList","assignList","assignTotal","interviewList","interviewotal","selectedRowKeys","detailsList","dispCurrentPage","interCurrentPage","changeAssignModalVisible","changeAddModalVisible","changeEditModalVisible","changeDetailsModalVisible","changeinterviewerList","changeResourceMangerList","changeAssignInterviewList","changeOwnerRangeList","changePositionLevelList","changePositionTypeList","changeQueryInterviewList","changeSelectedRowKeys","changeDatailsList","changeCurrentPage","key","queryAssignInterviewList","queryInterviewList","addInterview","queryInterviewInfoById","assignInterview","reducer","combineReducers","home","state","action","project","educ","analysis","personnel","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","applyMiddleware","thunk","store","createStore","reduce","month","Reminder","connect","actionCreators","handlGoToBasic","props","history","push","handlGoToEduc","handleGoToProject","this","className","style","minWidth","span","onClick","color","entryEmpTotal","leaveEmpTotal","Component","withRouter","columns","title","dataIndex","width","BirthdayReminder","padding","rowKey","index","dataSource","pagination","FieldNumber","handleChangePage","page","paginationObj","onChange","Rejular","handleChangeRejularPage","setState","rejularPage","map","empName","regularTime","current","bind","InterviewReminder","InterviewRejular","handleChangeInterviewRejularPage","userName","releaseTime","WaitingDistribution","queryResumeWillAssignCount","waitingList","waitingTotal","ProjectApproval","queryProjectInterviewPassCount","projectApprovalList","projectApprovalTotal","onCell","maxWidth","overflow","whiteSpace","textOverflow","cursor","render","text","placement","homeList","interViewHomeList","Home","location","pathname","height","allRouterList","IncumbencyRouterList","inserviceRouterList","Menus","selectRouterAactive","activeKey","substr","selectInserviceRouterAactive","includes","theme","backgroundColor","selectedKeys","mode","Item","to","Header","handleCancleLogin","display","justifyContent","Login","handleSubmit","e","preventDefault","form","validateFields","values","username","password","handleGoToRegister","getFieldDecorator","src","require","fontSize","labelCol","xs","sm","wrapperCol","rules","required","prefix","placeholder","valuePropName","initialValue","htmlType","Register","handleFocusPasswordType","passwordType","handleGoToLogin","onSubmit","autocomplete","onFocus","pattern","RegExp","Error","httAddress","genderEunm","label","uniformFlagEnum","educationCodeEnum","empPropertyEumn","name","onJobEnum","reminderColumnsForm","fixed","resumeStatusList","initialInterviewResultList","finalInterviewResultList","Option","inputList","dateList","managedisabled","BasicModal","handleCancel","resetFields","basicFormRules","validator","validFunction","rule","callback","field","Object","keys","length","baseFormInput","disabled","indexOf","handleChangeDate","handleGetOption","labelInValue","allowClear","newBasicRecord","JSON","parse","stringify","tab","date","dateString","handleProjectSubmit","event","empNo","birthdayFormat","joiningDayFormat","correctionTimeFormat","ipsaPostNo","ipsaGradeCode","directSuperiorName","deliveryManagerId","deliveryManagerName","onJob","recruitmentUserId","recruitmentUserName","nextProps","visible","onOk","onCancel","okText","cancelText","basicColumnsFunction","that","onjobKey","onJobLabel","ipsaBuDeptName","ipsaDeptName","ipsaPostName","ipsaGradeName","Search","RangePicker","BasicInformation","handleShowModel","handleChangeFile","file","fileList","handleBeforeUpload","handleSearchInput","employeeStatus","handleChangeSearchInput","target","handleChangeBuDeptId","newCurrentPageData","handleSearchList","dateStart","dateEnd","handleTableChange","entmonth","handleDownload","url","Authorization","responseType","blob","Blob","URL","createObjectURL","aLink","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","handleGetColumns","marginLeft","onSearch","enterButton","textAlign","marginRight","accept","showUploadList","beforeUpload","marginTop","hasFeedback","ranges","当天","本月","startOf","endOf","ref","el","tableHeight","showTotal","educationList","leaveFormList","weekAnalysisColumns","align","children","generalTableColumns","EducationModal","handleEducationSubmit","newfiledID","i","len","substring","majorCode","graduatedUniversities","avatarIdPath","newImageUrl","uid","handlePreview","previewVisible","previewImage","uploadButton","listType","onPreview","EducationInfo","handleShowModal","imgUrl","avatar","educStatusFlag","statusFlag","ProjectModal","handleFocusFirstCategoryId","handleFocusSecondCategoryId","handleFocusThirdCategoryId","handleFocusaliGradeCode","handleFocusWorkCity","handleFocusProjectList","handleFocusIframe","handleChangeIftame","projectStartTimeFormat","shortTime","projectEndTimeFormat","reg","level","match","join","projectName","managerId","managerName","leaveProjReasonId","leaveProjType","remark","handleChangeprojetType","newRecord","shortDate","handleAfterClose","afterClose","joiningProjTime","showToday","Array","isArray","startTime","endTime","ProjectLeaveModal","handleFocusLeaveProj","handleOk","leaveProjTimeFormat","leaveProjTime","projectColumnsFunction","firstCategoryName","secondCategoryName","thirdJobName","aliGradeCodeName","aliFrameName","careerGroupName","groupDeptName","careerDeptName","deptName","leaveProjReasonName","SearchForm","ipsaBuDeptIdValue","ipsaDeptIdValue","handleChangeBuMenDeptId","aliFrameIdValue","careerGroupIdValue","groupDeptIdValue","careerDeptIdValue","deptIdValue","handleSearchSubmit","handleAllInputChange","aliNoValue","joiningProjTimeFormatValue","firstCategoryIdValue","secondCategoryIdValue","thirdJobIdValue","aliGradeCodeValue","projectIdValue","projetTypeValue","projetDurationTypeValue","iduFlagValue","tlFlagValue","workCityValue","workAddressValue","resourceStatusValue","backboneFlagValue","chargeFlagValue","businessLineValue","ProjectInformation","scroll","x","Department","searchListNo","weekOfday","last_monday","subtract","last_sunday","add","WeekPicker","WeekAnalysis","onChangeWeekAnalysis","startTimeFormat","endTimeFormat","handleSearchWeekAnalysis","queryEmployeeWeekDataAnalysis","showYear","showWeek","weekTimeFormat","weekData","dataAnalysisList","bordered","GeneralTable","queryAllEmployeeInfoList","generalData","generalTotal","TabPane","Analysis","handleChangeTabs","activeKye","arg1","animated","defaultActiveKey","AssignModal","handleGetDicInfo","handleAssignSubmit","interviewEndTimeFormat","ids","userIds","disabledDate","currentDate","destroyOnClose","showSearch","optionFilterProp","tokenSeparators","TextArea","EditModal","handleEditSubmit","updataId","interviewLevel","initialInterviewResult","interviewComment","DetailsModal","footer","resumeUserName","resumeUserPhone","resourceManagerUserName","resumeStatus","recruitmentLevel","resumeSource","distributionTime","interviewCompleteTime","finalInterviewResult","positionType","interviewUserName","expireTime","autoSize","minRows","maxRows","DistributionTable","handleOpenAssignModal","handleOpenDetailsModal","onSelectChange","a","distriSearchValue","getCheckboxPropsStatus","rowSelection","getCheckboxProps","marginBottom","InterviewTable","resumeDownloadUrl","handleOpenEditModal","handleAcquireInterview","interviewSearchValue","AddModal","handleAddSubmit","splice","PersonnelInformation","handleOpenAddModal","searchValue","handleEmptyCheck","setFieldsValue","FrontendAuth","Layout","exact","path","component","App","locale","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.17ff79b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.8f9a2c7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404.ec0e15f6.png\";","import * as constants from './constants';\n\nconst defaultState = {\n  rejularList: [],\n  birthdayList: [],\n  fieldList: [],\n  reminderList: {},\n  myTodoList: [],\n  interviewRejularList: [],\n  distributionResume: 0,\n  interviewResume: 0,\n  myTodoeducationData: '',\n  regularTotal: 1,\n  fieldTotal: 1,\n  interviewRejularTotal: 0\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.REGULAR_DETAIL:\n      return {\n        ...state,\n        rejularList: payload.data,\n        regularTotal: payload.regularTotal\n      };\n    case constants.BIRTHDAY_DETAIL:\n      return { ...state, birthdayList: payload };\n    case constants.FIELD_DETAIL:\n      return {\n        ...state,\n        fieldList: payload.data,\n        fieldTotal: payload.fieldTotal\n      };\n    case constants.CHANGE_INTERVIEWREJULARLIST:\n      return {\n        ...state,\n        interviewRejularList: payload.data,\n        interviewRejularTotal: payload.total\n      };\n    case constants.REMINDER_DETAIL:\n      return { ...state, reminderList: payload };\n    case constants.MYTOPROJECT_DETAIL:\n      return { ...state, myTodoList: payload };\n    case constants.MYTOEDUCATION_DETAIL:\n      return { ...state, myTodoeducationData: payload };\n    case constants.CHANGE_INTERVIEWRESUME:\n      return { ...state, interviewResume: payload };\n    case constants.CHANGE_DISTRIBUTIONRESUME:\n      return { ...state, distributionResume: payload };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n/****** 创建axios实例 ******/\nconst fetch = axios.create({\n  baseURL: process.env.BASE_URL, // api的base_url\n  timeout: 6000 // 请求超时时间\n});\n\n/****** request拦截器==>对请求参数做处理 ******/\nfetch.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    // const data = JSON.parse(JSON.stringify(config.data));\n    config.method === 'post'\n      ? (config.data = { ...config.data })\n      : (config.params = { ...config.params });\n    config.headers['Authorization'] = 'Bearer ' + token;\n\n    return config;\n  },\n  error => {\n    //请求错误处理\n    Promise.reject(error);\n  }\n);\n\n/****** respone拦截器==>对响应做处理 ******/\nfetch.interceptors.response.use(\n  response => {\n    //成功请求到数据\n    if (response.data.code === '200') {\n      return response.data;\n    } else {\n      return response.data;\n    }\n  },\n  error => {\n    //响应错误处理\n    if (error && error.response && error.response.status === 401) {\n      const data = {\n        data: {\n          message: '请重新登录'\n        }\n      };\n      localStorage.setItem('token', null);\n      localStorage.setItem('flag', false);\n      return Promise.reject(data);\n    }\n    return Promise.reject(error.response);\n  }\n);\nexport default fetch;\n","import * as constants from './constants';\nimport fetch from '../../../utils/axios.config';\n// import axios from 'axios';\nimport { message } from 'antd';\n\nexport const changeBirthdayList = payload => ({\n  type: constants.BIRTHDAY_DETAIL,\n  payload\n});\n\nexport const changeRejularList = payload => ({\n  type: constants.REGULAR_DETAIL,\n  payload\n});\n\nexport const changeFieldList = payload => ({\n  type: constants.FIELD_DETAIL,\n  payload\n});\n\nexport const changeReminderList = payload => ({\n  type: constants.REMINDER_DETAIL,\n  payload\n});\n\nexport const changeMyToDoProjectList = payload => ({\n  type: constants.MYTOPROJECT_DETAIL,\n  payload\n});\n\nexport const changeMyToDoEducationList = payload => ({\n  type: constants.MYTOEDUCATION_DETAIL,\n  payload\n});\n\nexport const changeInterviewResumeData = payload => ({\n  type: constants.CHANGE_INTERVIEWRESUME,\n  payload\n});\n\nexport const changeDistributionResumeData = payload => ({\n  type: constants.CHANGE_DISTRIBUTIONRESUME,\n  payload\n});\n\nexport const changeInterviewRejularData = payload => ({\n  type: constants.CHANGE_INTERVIEWREJULARLIST,\n  payload\n});\n\n//获取生日列表\nexport const getBirthdayList = () => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryEmployeeBirthdayCountByMonth.json', {\n        params: {\n          pageSize: 3,\n          currentPage: 1\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          dispatch(changeBirthdayList(data));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获转正列表\nexport const getRejularList = payload => {\n  return dispatch => {\n    fetch\n      .get('api/home/queryWillRegularEmployee.json', {\n        params: payload\n      })\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          const arg0 = {\n            data: data.data,\n            regularTotal: data.total\n          };\n          dispatch(changeRejularList(arg0));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取场地人数列表\nexport const getFieldList = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryAreaEmployeeCount.json', {\n        params: {\n          payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          const arg0 = {\n            data: data.data,\n            fieldTotal: data.total\n          };\n          dispatch(changeFieldList(arg0));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取入职离职列表\nexport const getReminderList = () => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryEmployeeCountByMonthAndStatus.json')\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          dispatch(changeReminderList(data));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//查询项目待办事项\nexport const queryMyToDoProject = () => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryMyToDoProject.json')\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          dispatch(changeMyToDoProjectList(data));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//查询项目待办事项\nexport const queryMyToDoEducation = () => {\n  return dispatch => {\n    fetch\n      .get('/api/home/queryMyToDoEducation.json')\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          dispatch(changeMyToDoEducationList(data));\n        } else {\n          message.error('获取列表失败');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//首页查询待分配简历\nexport const queryMyToDoAssignationInterview = () => {\n  return dispatch => {\n    fetch\n      .get('/api/audition/home/queryMyToDoAssignationInterview.json')\n      .then(res => {\n        if (res && res.success) {\n          dispatch(changeDistributionResumeData(res.data));\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//首页查询待面试\nexport const queryMyToDoInterview = () => {\n  return dispatch => {\n    fetch\n      .get('/api/audition/home/queryMyToDoInterview.json')\n      .then(res => {\n        if (res && res.success) {\n          dispatch(changeInterviewResumeData(res.data));\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//面试提醒\nexport const queryResumeWillRelease = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/audition/home/queryResumeWillRelease.json', {\n        params: payload\n      })\n      .then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          console.log('data', data);\n          const arg0 = {\n            data: data.data ? data.data : [],\n            total: data.total\n          };\n\n          dispatch(changeInterviewRejularData(arg0));\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n","export const REGULAR_DETAIL = 'home/REGULAR_DETAIL';\nexport const BIRTHDAY_DETAIL = 'home/BIRTHDAY_DETAIL';\nexport const FIELD_DETAIL = 'home/FIELD_DETAIL';\nexport const REMINDER_DETAIL = 'home/REMINDER_DETAIL';\nexport const MYTOPROJECT_DETAIL = 'home/MYTOPROJECT_DETAIL';\nexport const MYTOEDUCATION_DETAIL = 'home/MYTOEDUCATION_DETAIL';\nexport const CHANGE_INTERVIEWRESUME = 'home/CHANGE_INTERVIEWRESUME';\nexport const CHANGE_DISTRIBUTIONRESUME = 'home/CHANGE_DISTRIBUTIONRESUME';\nexport const CHANGE_INTERVIEWREJULARLIST = 'home/CHANGE_INTERVIEWREJULARLIST';\n","import * as constants from './constants';\n\nconst defaultState = {\n  basicVisible: false,\n  currentPageData: {\n    currentPage: 1,\n    pageSize: 10,\n    keyword: '',\n    ipsaBuDeptId: '',\n    ipsaDeptId: '',\n    gender: '',\n    joiningDay: '',\n    empProperty: '',\n    joiningDayStartTime: '',\n    joiningDayEndTime: '',\n    directSuperiorId: ''\n  },\n  basicRecord: {},\n  basicList: [],\n  rsData: [],\n  dmData: [],\n  buList: [],\n  depList: [],\n  dicList: [],\n  dicModalList: [],\n  manageList: [],\n  gradeList: [],\n  total: 1\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.CHANGE_BASICVISIBLE:\n      return {\n        ...state,\n        basicVisible: payload.basicVisible,\n        basicRecord: payload.record\n      };\n    case constants.CHANGE_BASICLIST:\n      return { ...state, basicList: payload.basiclist, total: payload.total };\n    case constants.RS_ROLE:\n      return { ...state, rsData: payload };\n    case constants.DM_ROLE:\n      return { ...state, dmData: payload };\n    case constants.CHANGE_BULIST:\n      return { ...state, buList: payload };\n    case constants.CHANGE_DEPLIST:\n      return { ...state, depList: payload };\n    case constants.CHANGE_DICLIST:\n      return { ...state, dicList: payload };\n    case constants.CHANGE_DEPMODALLIST:\n      return { ...state, dicModalList: payload };\n    case constants.CHANGE_MANAGELIST:\n      return { ...state, manageList: payload };\n    case constants.CHANGE_GRADELIST:\n      return { ...state, gradeList: payload };\n    case constants.CURRENTPAGEDATA:\n      return { ...state, currentPageData: payload };\n    default:\n      return state;\n  }\n};\n","import * as constants from './constants';\nimport { message } from 'antd';\nimport fetch from '../../../utils/axios.config';\nimport moment from 'moment';\n\nexport const changeBasicVisible = payload => ({\n  type: constants.CHANGE_BASICVISIBLE,\n  payload\n});\n\nexport const changeBasicList = payload => ({\n  type: constants.CHANGE_BASICLIST,\n  payload\n});\n\nexport const changeRsRoleData = payload => ({\n  type: constants.RS_ROLE,\n  payload\n});\n\nexport const changeDmRoleData = payload => ({\n  type: constants.DM_ROLE,\n  payload\n});\n\nexport const changeBuList = payload => ({\n  type: constants.CHANGE_BULIST,\n  payload\n});\n\nexport const changeDepList = payload => ({\n  type: constants.CHANGE_DEPLIST,\n  payload\n});\n\nexport const changeDepModalList = payload => ({\n  type: constants.CHANGE_DEPMODALLIST,\n  payload\n});\n\nexport const changeDicList = payload => ({\n  type: constants.CHANGE_DICLIST,\n  payload\n});\n\nexport const changemanageRoleData = payload => ({\n  type: constants.CHANGE_MANAGELIST,\n  payload\n});\n\nexport const changeGradeData = payload => ({\n  type: constants.CHANGE_GRADELIST,\n  payload\n});\n\nexport const changeCurrentPageData = payload => ({\n  type: constants.CURRENTPAGEDATA,\n  payload\n});\n\n//获取基础信息列表\nexport const queryEmployeeBaseInfoList = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/base/queryEmployeeBaseInfoList.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          const basiclist = res.data.data;\n          const total = res.data.total;\n          basiclist.forEach(item => {\n            item.birthday = moment(item.birthday).format('YYYY-MM-DD');\n            item.joiningDay = moment(item.joiningDay).format('YYYY-MM-DD');\n            item.correctionTime = item.correctionTime\n              ? moment(item.correctionTime).format('YYYY-MM-DD')\n              : '';\n          });\n          dispatch(\n            changeBasicList({\n              basiclist,\n              total\n            })\n          );\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//新增基础信息\nexport const saveEmployeeBaseInfo = payload => {\n  return (dispatch, getState) => {\n    const { currentPageData } = getState().basic;\n    const arg0 = {\n      currentPage: currentPageData.currentPage,\n      pageSize: 10\n    };\n    fetch\n      .post('/api/base/saveEmployeeBaseInfo.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          dispatch(\n            changeBasicVisible({\n              basicVisible: false,\n              record: {}\n            })\n          );\n          message.success('新员工新增成功');\n          dispatch(queryEmployeeBaseInfoList(arg0));\n        } else {\n          message.error('新员工新增失败' + res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error('新员工新增失败：' + err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//编辑基础信息\nexport const updateEmployeeBaseInfo = payload => {\n  return (dispatch, getState) => {\n    const { currentPageData } = getState().basic;\n    const arg0 = {\n      currentPage: currentPageData.currentPage,\n      pageSize: 10\n    };\n    fetch\n      .post('/api/base/updateEmployeeBaseInfo.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          dispatch(\n            changeBasicVisible({\n              basicVisible: false,\n              record: {}\n            })\n          );\n          message.success('修改成功');\n          dispatch(queryEmployeeBaseInfoList(arg0));\n        } else {\n          message.error('修改失败：' + res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//查询BU列表\nexport const deptInfoBu = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/bu')\n      .then(res => {\n        if (res && res.success) {\n          const buList = res.data;\n          dispatch(changeBuList(buList));\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//查询招聘顾问，交付经理和项目经理\nexport const queryUserListInfoByRolePermission = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/user/queryUserListInfoByRolePermission.json', {\n        params: {\n          permission: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const roleData = res.data;\n          switch (payload) {\n            case 'recruitmentConsultant':\n              dispatch(changeRsRoleData(roleData));\n              break;\n            case 'deliveryManager':\n              dispatch(changeDmRoleData(roleData));\n              break;\n            case 'projectManage':\n              dispatch(changemanageRoleData(roleData));\n              break;\n            default:\n              break;\n          }\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//搜索栏输入查询\nexport const searchEmployeeBaseInfoList = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/base/searchEmployeeBaseInfoList.json', {\n        params: {\n          currentPage: 1,\n          pageSize: 10,\n          keyword: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const basiclist = res.data.data;\n          dispatch(changeBasicList(basiclist));\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取部门\nexport const deptInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/pid', {\n        params: {\n          pid: payload.id ? payload.id : payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const depList = res.data;\n          if (payload.id) {\n            dispatch(changeDepModalList(depList));\n          } else {\n            dispatch(changeDepList(depList));\n          }\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//通用职位及id字典查询\nexport const dictInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/dictInfo/name', {\n        params: {\n          dictName: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const dicList = res.data;\n          switch (payload) {\n            case 'general_position':\n              dispatch(changeDicList(dicList));\n              break;\n            case 'position_grade_code':\n              dispatch(changeGradeData(dicList));\n              break;\n            default:\n              break;\n          }\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n","export const CHANGE_BASICVISIBLE = 'basic/CHANGE_BASICVISIBLE';\nexport const CHANGE_BASICLIST = 'basic/CHANGE_BASICLIST';\nexport const RS_ROLE = 'basic/RS_ROLE';\nexport const DM_ROLE = 'basic/DM_ROLE';\nexport const CHANGE_BULIST = 'basic/CHANGE_BULIST';\nexport const CHANGE_DEPLIST = 'basic/CHANGE_DEPLIST';\nexport const CHANGE_DICLIST = 'basic/CHANGE_DICLIST';\nexport const CHANGE_DEPMODALLIST = 'basic/CHANGE_DEPMODALLIST';\nexport const CHANGE_MANAGELIST = 'basic/CHANGE_MANAGELIST';\nexport const CHANGE_GRADELIST = 'basic/CHANGE_GRADELIST';\nexport const CURRENTPAGEDATA = 'basic/CURRENTPAGEDATA';\n","import * as constants from './constants';\n\nconst defaultState = {\n  projectVisible: false,\n  leaveProjVisible: false,\n  projectRecord: {},\n  leaveProjRecord: {},\n  buList: [],\n  depList: [],\n  projectDataList: [],\n  total: 1,\n  firstCategoryidList: [],\n  secondCategoryidList: [],\n  thirdCategoryidList: [],\n  aliGradeCodeList: [],\n  workCityList: [],\n  newProjectList: [],\n  iframeList: [],\n  careerGroupList: [],\n  groupdeptList: [],\n  careerdepList: [],\n  deptIdList: [],\n  saveSearchData: {},\n  leaveProjList: [],\n  thats: null,\n  currentPageData: {\n    currentPage: 1,\n    pageSize: 10,\n    aliNo: '',\n    ipsaBuDeptId: '',\n    ipsaDeptId: '',\n    projectId: '',\n    joiningProjTimeFormat: '',\n    firstCategoryId: '',\n    secondCategoryId: '',\n    thirdJobId: '',\n    aliGradeCode: '',\n    techDirection: '',\n    aliFrameId: '',\n    careerGroupId: '',\n    groupDeptId: '',\n    careerDeptId: '',\n    deptId: '',\n    projetDurationType: '',\n    projetType: '',\n    iduFlag: '',\n    tlFlag: '',\n    workCity: '',\n    workAddress: '',\n    resourceStatus: '',\n    backboneFlag: '',\n    chargeFlag: '',\n    keyword: '',\n    businessLine: ''\n  }\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.CHANGE_PROJECTVISIBLE:\n      return {\n        ...state,\n        projectVisible: payload.projectVisible,\n        projectRecord: payload.record\n      };\n    case constants.CHANGE_LEAVEPROJVISIBLE:\n      return {\n        ...state,\n        leaveProjVisible: payload.leaveProjVisible,\n        leaveProjRecord: payload.record\n      };\n    case constants.CHANGE_BULIST:\n      return {\n        ...state,\n        buList: payload\n      };\n    case constants.CHANGE_DEPLIST:\n      return {\n        ...state,\n        depList: payload\n      };\n    case constants.CHANGE_PROJECTDATALIST:\n      return {\n        ...state,\n        projectDataList: payload.data,\n        total: payload.total\n      };\n    case constants.CHANGE_FIRSTCATEGORYID:\n      return {\n        ...state,\n        firstCategoryidList: payload\n      };\n    case constants.CHANGE_SECONDCATEGORYID:\n      return {\n        ...state,\n        secondCategoryidList: payload\n      };\n    case constants.CHANGE_THIRDCATEGORYID:\n      return {\n        ...state,\n        thirdCategoryidList: payload\n      };\n    case constants.CHANGE_ALIGRADECODE:\n      return {\n        ...state,\n        aliGradeCodeList: payload\n      };\n    case constants.CHANGE_WORKCITY:\n      return {\n        ...state,\n        workCityList: payload\n      };\n    case constants.CHANGE_PROJECTPAGE:\n      return {\n        ...state,\n        currentPageData: payload\n      };\n    case constants.CHANGE_NEWPROJECTDATALIST:\n      return {\n        ...state,\n        newProjectList: payload\n      };\n    case constants.CHANGE_IFRAME:\n      return {\n        ...state,\n        iframeList: payload\n      };\n    case constants.CHANGE_CAREERGROUP:\n      return {\n        ...state,\n        careerGroupList: payload\n      };\n    case constants.CHANGE_GROUPDEPT:\n      return {\n        ...state,\n        groupdeptList: payload\n      };\n    case constants.CHANGE_CAREERDEPT:\n      return {\n        ...state,\n        careerdepList: payload\n      };\n    case constants.CHANGE_DEPTID:\n      return {\n        ...state,\n        deptIdList: payload\n      };\n    case constants.CHANGE_SAVESEARCHSUBMIT:\n      return {\n        ...state,\n        saveSearchData: payload\n      };\n    case constants.CHANGE_SAVESEARCHTHIS:\n      return {\n        ...state,\n        thats: payload\n      };\n    case constants.CHANGE_LEAVEPROJ:\n      return {\n        ...state,\n        leaveProjList: payload\n      };\n    default:\n      return state;\n  }\n};\n","import * as constants from './constants';\nimport { message } from 'antd';\nimport fetch from '../../../utils/axios.config';\n\nexport const changeProjectVisible = payload => ({\n  type: constants.CHANGE_PROJECTVISIBLE,\n  payload\n});\n\nexport const changeLeaveProjVisible = payload => ({\n  type: constants.CHANGE_LEAVEPROJVISIBLE,\n  payload\n});\n\nexport const changeBuList = payload => ({\n  type: constants.CHANGE_BULIST,\n  payload\n});\n\nexport const changeDepList = payload => ({\n  type: constants.CHANGE_DEPLIST,\n  payload\n});\n\nexport const changeProjectDataList = payload => ({\n  type: constants.CHANGE_PROJECTDATALIST,\n  payload\n});\n\nexport const changeFocusFirstCategoryId = payload => ({\n  type: constants.CHANGE_FIRSTCATEGORYID,\n  payload\n});\n\nexport const changeFocusSecondCategoryId = payload => ({\n  type: constants.CHANGE_SECONDCATEGORYID,\n  payload\n});\n\nexport const changeFocusThirdCategoryId = payload => ({\n  type: constants.CHANGE_THIRDCATEGORYID,\n  payload\n});\n\nexport const changeFocusAliGradeCategoryId = payload => ({\n  type: constants.CHANGE_ALIGRADECODE,\n  payload\n});\n\nexport const changeFocusWorkCity = payload => ({\n  type: constants.CHANGE_WORKCITY,\n  payload\n});\n\nexport const changeCurrentPageData = payload => ({\n  type: constants.CHANGE_PROJECTPAGE,\n  payload\n});\n\nexport const changeFocusProjectList = payload => ({\n  type: constants.CHANGE_NEWPROJECTDATALIST,\n  payload\n});\n\nexport const changeFocusIframe = payload => ({\n  type: constants.CHANGE_IFRAME,\n  payload\n});\n\nexport const changeCareerGroupId = payload => ({\n  type: constants.CHANGE_CAREERGROUP,\n  payload\n});\n\nexport const changeGroupDeptId = payload => ({\n  type: constants.CHANGE_GROUPDEPT,\n  payload\n});\n\nexport const changeCareerDeptId = payload => ({\n  type: constants.CHANGE_CAREERDEPT,\n  payload\n});\n\nexport const changeDeptId = payload => ({\n  type: constants.CHANGE_DEPTID,\n  payload\n});\n\nexport const changeSaveSearchSubmit = payload => ({\n  type: constants.CHANGE_SAVESEARCHSUBMIT,\n  payload\n});\n\nexport const changeFocusLeaveProjList = payload => ({\n  type: constants.CHANGE_LEAVEPROJ,\n  payload\n});\n\n//存储搜索框里的this指针\n\nexport const handleSaveSearchThis = payload => ({\n  type: constants.CHANGE_SAVESEARCHTHIS,\n  payload\n});\n\n//查询BU列表\nexport const deptInfoBu = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/bu')\n      .then(res => {\n        if (res && res.success) {\n          const buList = res.data;\n          dispatch(changeBuList(buList));\n        } else {\n          message.error('出错了');\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//获取部门\nexport const deptInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/pid', {\n        params: {\n          pid: payload.value ? payload.value : ''\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const depList = res.data;\n          switch (payload.flag) {\n            case 'aliFrameId':\n              dispatch(changeCareerGroupId(depList));\n              break;\n            case 'zero':\n              dispatch(changeFocusIframe(depList));\n              break;\n            case 'careerGroupId':\n              dispatch(changeGroupDeptId(depList));\n              break;\n            case 'groupDeptId':\n              dispatch(changeCareerDeptId(depList));\n              break;\n            case 'careerDeptId':\n              dispatch(changeDeptId(depList));\n              break;\n            case 'bu':\n              dispatch(changeDepList(depList));\n              break;\n            default:\n              break;\n          }\n        } else {\n          message.error('出错了');\n        }\n      })\n      .catch(err => {\n        if (err && err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//查询项目列表接口\nexport const queryProjectRecordInfoList = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/project/queryProjectRecordInfoList.json', payload)\n      .then(res => {\n        if (res && res.success && res.data) {\n          const { data, total } = res.data;\n          dispatch(\n            changeProjectDataList({\n              data,\n              total\n            })\n          );\n        } else {\n          message.error('出错了');\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//获取框架\nexport const deptInfoIframe = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/frame', {\n        params: {\n          pid: payload.value\n        }\n      })\n      .then(res => {\n        if (res && res.success && res.data) {\n          const { data } = res;\n          switch (payload.flag) {\n            case 'aliFrameId':\n              dispatch(changeCareerGroupId(data));\n              break;\n            case 'zero':\n              dispatch(changeFocusIframe(data));\n              break;\n            case 'careerGroupId':\n              dispatch(changeGroupDeptId(data));\n              break;\n            case 'groupDeptId':\n              dispatch(changeCareerDeptId(data));\n              break;\n            case 'careerDeptId':\n              dispatch(changeDeptId(data));\n              break;\n            default:\n              break;\n          }\n        } else {\n          message.error('出错了');\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//字典查询\nexport const dictInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/dictInfo/name', {\n        params: {\n          dictName: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const dicList = res.data;\n          switch (payload) {\n            case 'job_class_1':\n              dispatch(changeFocusFirstCategoryId(dicList));\n              break;\n            case 'job_class_2':\n              dispatch(changeFocusSecondCategoryId(dicList));\n              break;\n            case 'job_class_3':\n              dispatch(changeFocusThirdCategoryId(dicList));\n              break;\n            case 'job_class_level':\n              dispatch(changeFocusAliGradeCategoryId(dicList));\n              break;\n            case 'work_city':\n              dispatch(changeFocusWorkCity(dicList));\n              break;\n            case 'project_list':\n              dispatch(changeFocusProjectList(dicList));\n              break;\n            case 'leave_proj_reason':\n              dispatch(changeFocusLeaveProjList(dicList));\n              break;\n            default:\n              break;\n          }\n        } else {\n          message.error('获取一类岗位失败');\n        }\n      })\n      .catch(err => {\n        if (err && err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//修改项目信息接口\nexport const updateProjectRecordInfoById = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/project/updateProjectRecordInfoById.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          message.success('编辑成功');\n          dispatch(\n            changeProjectVisible({\n              projectVisible: false,\n              record: {}\n            })\n          );\n          dispatch(\n            changeLeaveProjVisible({\n              leaveProjVisible: false,\n              record: {}\n            })\n          );\n          dispatch(\n            queryProjectRecordInfoList({\n              currentPage: 1,\n              pageSize: 10\n            })\n          );\n        } else {\n          message.error('提交失败：' + res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n","export const CHANGE_PROJECTVISIBLE = 'project/CHANGE_PROJECTVISIBLE';\nexport const CHANGE_BULIST = 'project/CHANGE_BULIST';\nexport const CHANGE_DEPLIST = 'project/CHANGE_DEPLIST';\nexport const CHANGE_PROJECTDATALIST = 'project/CHANGE_PROJECTDATALIST';\nexport const CHANGE_FIRSTCATEGORYID = 'project/CHANGE_FIRSTCATEGORYID';\nexport const CHANGE_SECONDCATEGORYID = 'project/CHANGE_SECONDCATEGORYID';\nexport const CHANGE_THIRDCATEGORYID = 'project/CHANGE_THIRDCATEGORYID';\nexport const CHANGE_ALIGRADECODE = 'project/CHANGE_ALIGRADECODE';\nexport const CHANGE_WORKCITY = 'project/CHANGE_WORKCITY';\nexport const CHANGE_PROJECTPAGE = 'project/CHANGE_PROJECTPAGE';\nexport const CHANGE_NEWPROJECTDATALIST = 'project/CHANGE_NEWPROJECTDATALIST';\nexport const CHANGE_IFRAME = 'project/CHANGE_IFRAME';\nexport const CHANGE_CAREERGROUP = 'project/CHANGE_CAREERGROUP';\nexport const CHANGE_GROUPDEPT = 'project/CHANGE_GROUPDEPT';\nexport const CHANGE_CAREERDEPT = 'project/CHANGE_CAREERDEPT';\nexport const CHANGE_DEPTID = 'project/CHANGE_DEPTID';\nexport const CHANGE_SAVESEARCHSUBMIT = 'project/CHANGE_SAVESEARCHSUBMIT';\nexport const CHANGE_SAVESEARCHTHIS = 'project/CHANGE_SAVESEARCHTHIS';\nexport const CHANGE_LEAVEPROJ = 'project/CHANGE_LEAVEPROJ';\nexport const CHANGE_LEAVEPROJVISIBLE = 'project/CHANGE_LEAVEPROJVISIBLE';\n","import * as constants from './constants';\n\nconst defaultState = {\n  educVisible: false,\n  buList: [],\n  depList: [],\n  educList: [],\n  total: 1,\n  majorList: [],\n  educRecord: {},\n  imageUrl: [],\n  fileId: '',\n  currentPageData: {\n    currentPage: 1,\n    pageSize: 10,\n    keyword: '',\n    ipsaDeptId: '',\n    ipsaBuDeptId: '',\n    uniformFlag: '',\n    educationCode: ''\n  }\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.CHANGE_EDUCATIONVISIBLE:\n      return {\n        ...state,\n        educVisible: payload.educVisible,\n        educRecord: payload.record,\n        imageUrl: payload.imageUrl,\n        fileId: payload.fileId\n      };\n    case constants.CHANGE_BULIST:\n      return {\n        ...state,\n        buList: payload\n      };\n    case constants.CHANGE_DEPLIST:\n      return {\n        ...state,\n        depList: payload\n      };\n    case constants.CHANGE_EDUCLIST:\n      return {\n        ...state,\n        educList: payload.educList,\n        total: payload.total\n      };\n    case constants.CHANGE_MAGORLIST:\n      return {\n        ...state,\n        majorList: payload\n      };\n    case constants.CHANGE_CURRENTPAGE:\n      return {\n        ...state,\n        currentPageData: payload\n      };\n    default:\n      return state;\n  }\n};\n","import * as constants from './constants';\nimport { message } from 'antd';\nimport fetch from '../../../utils/axios.config';\n\nexport const changeEducationVisible = payload => ({\n  type: constants.CHANGE_EDUCATIONVISIBLE,\n  payload\n});\n\nexport const changeBuList = payload => ({\n  type: constants.CHANGE_BULIST,\n  payload\n});\n\nexport const changeDepList = payload => ({\n  type: constants.CHANGE_DEPLIST,\n  payload\n});\n\nexport const changeEducList = payload => ({\n  type: constants.CHANGE_EDUCLIST,\n  payload\n});\n\nexport const changeDircInfoList = payload => ({\n  type: constants.CHANGE_MAGORLIST,\n  payload\n});\n\nexport const changeCurrentPageData = payload => ({\n  type: constants.CHANGE_CURRENTPAGE,\n  payload\n});\n//查询BU列表\nexport const deptInfoBu = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/bu')\n      .then(res => {\n        if (res && res.success) {\n          const buList = res.data;\n          dispatch(changeBuList(buList));\n        } else {\n          message.error('出错了');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取部门\nexport const deptInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/deptInfo/pid', {\n        params: {\n          pid: payload.id ? payload.id : payload\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const depList = res.data;\n          dispatch(changeDepList(depList));\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\n//获取学历信息列表\nexport const queryEducationRecordInfoList = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/education/queryEducationRecordInfoList.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          const educList = res.data.data;\n          const total = res.data.total;\n          dispatch(\n            changeEducList({\n              educList,\n              total\n            })\n          );\n        } else {\n          message.error('出错了');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\nexport const dictInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/dictInfo/name', {\n        params: {\n          dictName: 'major_code'\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          const data = res.data;\n          dispatch(changeDircInfoList(data));\n        } else {\n          message.error(res.message && res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n\nexport const updateEducationRecordInfoById = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/education/updateEducationRecordInfoById.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          message.success('学历编辑成功');\n          dispatch(\n            changeEducationVisible({\n              educVisible: false,\n              record: {},\n              imageUrl: []\n            })\n          );\n          dispatch(\n            queryEducationRecordInfoList({\n              currentPage: 1,\n              pageSize: 10\n            })\n          );\n        } else {\n          message.error('学历编辑失败：' + res.message && res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n};\n","export const CHANGE_EDUCATIONVISIBLE = 'educ/CHANGE_EDUCATIONVISIBLE';\nexport const CHANGE_BULIST = 'educ/CHANGE_BULIST';\nexport const CHANGE_DEPLIST = 'educ/CHANGE_DEPLIST';\nexport const CHANGE_EDUCLIST = 'educ/CHANGE_EDUCLIST';\nexport const CHANGE_MAGORLIST = 'educ/CHANGE_MAGORLIST';\nexport const CHANGE_CURRENTPAGE = 'educ/CHANGE_CURRENTPAGE';\n","import * as constants from './constants';\n\nconst defaultState = {\n  educVisible: false,\n  buList: [],\n  depList: [],\n  educList: [],\n  total: 1,\n  majorList: [],\n  educRecord: {},\n  imageUrl: [],\n  fileId: '',\n  currentPageData: {\n    currentPage: 1,\n    pageSize: 10,\n    keyword: '',\n    ipsaDeptId: '',\n    ipsaBuDeptId: '',\n    uniformFlag: '',\n    educationCode: ''\n  }\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.CHANGE_EDUCATIONVISIBLE:\n      return {\n        ...state,\n        educVisible: payload.educVisible,\n        educRecord: payload.record,\n        imageUrl: payload.imageUrl,\n        fileId: payload.fileId\n      };\n    case constants.CHANGE_BULIST:\n      return {\n        ...state,\n        buList: payload\n      };\n    case constants.CHANGE_DEPLIST:\n      return {\n        ...state,\n        depList: payload\n      };\n    case constants.CHANGE_EDUCLIST:\n      return {\n        ...state,\n        educList: payload.educList,\n        total: payload.total\n      };\n    case constants.CHANGE_MAGORLIST:\n      return {\n        ...state,\n        majorList: payload\n      };\n    case constants.CHANGE_CURRENTPAGE:\n      return {\n        ...state,\n        currentPageData: payload\n      };\n    default:\n      return state;\n  }\n};\n","import * as constants from './constants';\n\nconst defaultState = {\n  assignModalVisible: false,\n  addModalvisible: false,\n  editModalVisible: false,\n  editRecord: {},\n  detailsVisible: false,\n  interviewerList: [],\n  resourceMangeList: [],\n  ownerList: [],\n  leveList: [],\n  typeList: [],\n  projectList: [],\n  assignList: [],\n  assignTotal: 0,\n  interviewList: [],\n  interviewotal: 0,\n  selectedRowKeys: [],\n  detailsList: {},\n  dispCurrentPage: 1,\n  interCurrentPage: 1\n};\n\nexport default (state = defaultState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case constants.CHANGE_ASSIGNMODALVISIBLE:\n      return {\n        ...state,\n        assignModalVisible: payload.assignModalVisible\n      };\n    case constants.CHANGE_ADDMODALVISIBLE:\n      return {\n        ...state,\n        addModalvisible: payload.addModalvisible\n      };\n    case constants.CHANGE_EDITMODALVISIBLE:\n      return {\n        ...state,\n        editModalVisible: payload.editModalVisible,\n        editRecord: payload.editRecord\n      };\n    case constants.CHANGE_DETAilSVISIBLE:\n      return {\n        ...state,\n        detailsVisible: payload.detailsVisible\n      };\n    case constants.CHANGE_INTERVIEWERDATA:\n      return {\n        ...state,\n        interviewerList: payload.data\n      };\n    case constants.CHANGE_RESOURCEMANGEDATA:\n      return {\n        ...state,\n        resourceMangeList: payload.data\n      };\n    case constants.CHANGE_ASSIGNINTERVIEWLIST:\n      return {\n        ...state,\n        assignList: payload.data,\n        assignTotal: payload.total\n      };\n    case constants.CHANGE_QUERYINTERVIEWLIST:\n      return {\n        ...state,\n        interviewList: payload.data,\n        interviewotal: payload.total\n      };\n    case constants.CHANGE_OWNERRANGELIST:\n      return {\n        ...state,\n        ownerList: payload.data\n      };\n    case constants.CHANGE_POSITIONLEVELIST:\n      return {\n        ...state,\n        leveList: payload.data\n      };\n    case constants.CHANGE_POSITIONTYPELIST:\n      return {\n        ...state,\n        typeList: payload.data\n      };\n    case constants.CHANGE_NEWPROJECTDATALIST:\n      return {\n        ...state,\n        projectList: payload.data\n      };\n    case constants.CHANGE_SELECTEDROWKEYS:\n      return {\n        ...state,\n        selectedRowKeys: payload\n      };\n    case constants.CHANGE_DATAILSLIST:\n      return {\n        ...state,\n        detailsList: payload\n      };\n    case constants.CHANGE_CURRENTPAGE:\n      return {\n        ...state,\n        dispCurrentPage: payload.dispCurrentPage,\n        interCurrentPage: payload.interCurrentPage\n      };\n    default:\n      return state;\n  }\n};\n","import * as constants from './constants';\nimport { message } from 'antd';\nimport fetch from '../../../utils/axios.config';\n\nexport const changeAssignModalVisible = payload => ({\n  type: constants.CHANGE_ASSIGNMODALVISIBLE,\n  payload\n});\n\nexport const changeAddModalVisible = payload => ({\n  type: constants.CHANGE_ADDMODALVISIBLE,\n  payload\n});\n\nexport const changeEditModalVisible = payload => ({\n  type: constants.CHANGE_EDITMODALVISIBLE,\n  payload\n});\n\nexport const changeDetailsModalVisible = payload => ({\n  type: constants.CHANGE_DETAilSVISIBLE,\n  payload\n});\n\nexport const changeinterviewerList = payload => ({\n  type: constants.CHANGE_INTERVIEWERDATA,\n  payload\n});\n\nexport const changeResourceMangerList = payload => ({\n  type: constants.CHANGE_RESOURCEMANGEDATA,\n  payload\n});\n\nexport const changeAssignInterviewList = payload => ({\n  type: constants.CHANGE_ASSIGNINTERVIEWLIST,\n  payload\n});\n\nexport const changeOwnerRangeList = payload => ({\n  type: constants.CHANGE_OWNERRANGELIST,\n  payload\n});\n\nexport const changePositionLevelList = payload => ({\n  type: constants.CHANGE_POSITIONLEVELIST,\n  payload\n});\n\nexport const changePositionTypeList = payload => ({\n  type: constants.CHANGE_POSITIONTYPELIST,\n  payload\n});\n\nexport const changeFocusProjectList = payload => ({\n  type: constants.CHANGE_NEWPROJECTDATALIST,\n  payload\n});\n\nexport const changeQueryInterviewList = payload => ({\n  type: constants.CHANGE_QUERYINTERVIEWLIST,\n  payload\n});\n\nexport const changeSelectedRowKeys = payload => ({\n  type: constants.CHANGE_SELECTEDROWKEYS,\n  payload\n});\n\nexport const changeDatailsList = payload => ({\n  type: constants.CHANGE_DATAILSLIST,\n  payload\n});\n\n//切换分页\nexport const changeCurrentPage = payload => ({\n  type: constants.CHANGE_CURRENTPAGE,\n  payload\n});\n\n//获取面试官信息\nexport const queryUserListInfoByRolePermission = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/user/queryUserListInfoByRolePermission.json', {\n        params: {\n          permission: payload.value\n        }\n      })\n      .then(res => {\n        if (res && res.success && res.data) {\n          const { data = [] } = res;\n          switch (payload.key) {\n            case 'assign':\n              dispatch(\n                changeinterviewerList({\n                  data\n                })\n              );\n              break;\n            case 'add':\n              dispatch(\n                changeResourceMangerList({\n                  data\n                })\n              );\n              break;\n\n            default:\n              break;\n          }\n        } else {\n          message.error('获取面试官失败');\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//查询分配简历列表\nexport const queryAssignInterviewList = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/interview/queryAssignInterviewList.json', {\n        ...payload\n      })\n      .then(res => {\n        if (res && res.success && res.data) {\n          const { data = [], total } = res.data;\n\n          dispatch(changeAssignInterviewList({ data, total }));\n        } else {\n          message.error('列表获取失败' + res.message);\n        }\n      })\n      .catch(err => {\n        if (err && err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//查询面试简历列表\nexport const queryInterviewList = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/interview/queryInterviewList.json', {\n        ...payload\n      })\n      .then(res => {\n        if (res && res.success && res.data) {\n          const { data = [], total } = res.data;\n          dispatch(changeQueryInterviewList({ data, total }));\n        } else {\n          message.error('列表获取失败' + res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//新建简历\nexport const addInterview = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/interview/addInterview.json', {\n        ...payload\n      })\n      .then(res => {\n        if (res && res.success && res.data) {\n          message.success('提交成功');\n          dispatch(\n            changeAddModalVisible({\n              addModalvisible: false\n            })\n          );\n          dispatch(\n            queryAssignInterviewList({\n              currentPage: 1,\n              pageSize: 10\n            })\n          );\n          dispatch(\n            queryInterviewList({\n              currentPage: 1,\n              pageSize: 10\n            })\n          );\n        } else {\n          message.error('提交失败失败' + res.message);\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//面试新建简历来源\nexport const dictInfo = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/dictInfo/name', {\n        params: {\n          dictName: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success && res.data) {\n          const { data = [] } = res;\n          switch (payload) {\n            case 'owner_range':\n              dispatch(\n                changeOwnerRangeList({\n                  data\n                })\n              );\n              break;\n            case 'wutong_position_level':\n              dispatch(\n                changePositionLevelList({\n                  data\n                })\n              );\n              break;\n            case 'wutong_position_type':\n              dispatch(\n                changePositionTypeList({\n                  data\n                })\n              );\n              break;\n            case 'project_list':\n              dispatch(\n                changeFocusProjectList({\n                  data\n                })\n              );\n              break;\n\n            default:\n              break;\n          }\n        } else {\n          message.error('获取信息失败');\n        }\n      })\n      .catch(err => {\n        if (err && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//获取面试详情\nexport const queryInterviewInfoById = payload => {\n  return dispatch => {\n    fetch\n      .get('/api/interview/queryInterviewInfoById.json', {\n        params: {\n          id: payload\n        }\n      })\n      .then(res => {\n        if (res && res.success && res.data) {\n          const { data = {} } = res;\n          dispatch(changeDatailsList(data));\n        } else {\n          message.error('获取详情失败');\n        }\n      })\n      .catch(err => {\n        if (err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n\n//分配简历\nexport const assignInterview = payload => {\n  return dispatch => {\n    fetch\n      .post('/api/interview/assignInterview.json', payload)\n      .then(res => {\n        if (res && res.success) {\n          message.success('分配简历成功');\n          dispatch(\n            changeAssignModalVisible({\n              assignModalVisible: false\n            })\n          );\n          dispatch(\n            queryAssignInterviewList({\n              currentPage: 1,\n              pageSize: 10\n            })\n          );\n          dispatch(\n            queryInterviewList({\n              currentPage: 1,\n              pageSize: 10\n            })\n          );\n          dispatch(changeSelectedRowKeys([]));\n        } else {\n          if (res && res.message) {\n            message.error('分配简历失败: ' + res.message);\n          } else {\n            message.error('分配简历失败');\n          }\n        }\n      })\n      .catch(err => {\n        if (err && err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n};\n","export const CHANGE_ASSIGNMODALVISIBLE = 'personnel/CHANGE_ASSIGNMODALVISIBLE';\nexport const CHANGE_ADDMODALVISIBLE = 'personnel/CHANGE_ADDMODALVISIBLE';\nexport const CHANGE_EDITMODALVISIBLE = 'personnel/CHANGE_EDITMODALVISIBLE';\nexport const CHANGE_DETAilSVISIBLE = 'personnel/CHANGE_DETAilSVISIBLE';\nexport const CHANGE_INTERVIEWERDATA = 'personnel/CHANGE_INTERVIEWERDATA';\nexport const CHANGE_RESOURCEMANGEDATA = 'personnel/CHANGE_RESOURCEMANGEDATA';\nexport const CHANGE_OWNERRANGELIST = 'personnel/CHANGE_OWNERRANGELIST';\nexport const CHANGE_POSITIONLEVELIST = 'personnel/CHANGE_POSITIONLEVELIST';\nexport const CHANGE_POSITIONTYPELIST = 'personnel/CHANGE_POSITIONTYPELIST';\nexport const CHANGE_NEWPROJECTDATALIST = 'personnel/CHANGE_NEWPROJECTDATALIST';\nexport const CHANGE_QUERYINTERVIEWLIST = 'personnel/CHANGE_QUERYINTERVIEWLIST';\nexport const CHANGE_SELECTEDROWKEYS = 'personnel/CHANGE_SELECTEDROWKEYS';\nexport const CHANGE_DATAILSLIST = 'personnel/CHANGE_DATAILSLIST';\nexport const CHANGE_CURRENTPAGE = 'personnel/CHANGE_CURRENTPAGE';\nexport const CHANGE_ASSIGNINTERVIEWLIST =\n  'personnel/CHANGE_ASSIGNINTERVIEWLIST';\n","import { combineReducers } from 'redux';\nimport { reducer as homeReducer } from '../page/Home/store/index';\nimport { reducer as basicRudecer } from '../page/BasicInformation/store/';\nimport { reducer as projectRudecer } from '../page/ProjectInformation/store/';\nimport { reducer as educationRudecer } from '../page/EducationInfo/store/';\nimport { reducer as analysisRudecer } from '../page/Analysis/store/';\nimport { reducer as personnelRudecer } from '../page/PersonnelInformation/store/';\nconst reducer = combineReducers({\n  home: homeReducer,\n  basic: basicRudecer,\n  project: projectRudecer,\n  educ: educationRudecer,\n  analysis: analysisRudecer,\n  personnel: personnelRudecer\n});\n\nexport default reducer;\n","export const CHANGE_EDUCATIONVISIBLE = 'analysis/CHANGE_EDUCATIONVISIBLE';\nexport const CHANGE_BULIST = 'analysis/CHANGE_BULIST';\nexport const CHANGE_DEPLIST = 'analysis/CHANGE_DEPLIST';\nexport const CHANGE_EDUCLIST = 'analysis/CHANGE_EDUCLIST';\nexport const CHANGE_MAGORLIST = 'analysis/CHANGE_MAGORLIST';\nexport const CHANGE_CURRENTPAGE = 'analysis/CHANGE_CURRENTPAGE';\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport reduce from './reduce.js';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(reduce, enhancer);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport moment from 'moment';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actionCreators } from '../store';\nimport './reminder.less';\nconst month = moment().month() + 1;\n\n@connect(state => state.home, actionCreators)\nclass Reminder extends Component {\n  componentDidMount() {\n    const {\n      getReminderList,\n      queryMyToDoProject,\n      queryMyToDoEducation\n    } = this.props;\n    getReminderList();\n    queryMyToDoProject();\n    queryMyToDoEducation();\n  }\n\n  handlGoToBasic = () => {\n    localStorage.setItem('entmonth', '1');\n    this.props.history.push('/basic');\n  };\n\n  handlGoToEduc = () => {\n    localStorage.setItem('educStatusFlag', '2');\n    this.props.history.push('/education');\n  };\n\n  handleGoToProject = () => {\n    localStorage.setItem('statusFlag', '2');\n    this.props.history.push('/project');\n  };\n  render() {\n    const { reminderList, myTodoList, myTodoeducationData } = this.props;\n    const permission = localStorage.getItem('permission');\n    return (\n      <Row className=\"layout-home-reminder\" style={{ minWidth: '290px' }}>\n        {permission !== 'recruitmentConsultant' && (\n          <Col\n            span={12}\n            onClick={() => this.handlGoToBasic()}\n            className=\"reminder-content reminder-content-link\"\n          >\n            {month}月入职人数\n            <span style={{ color: '#658ef7' }}>\n              {reminderList && reminderList.entryEmpTotal}\n            </span>\n            人\n          </Col>\n        )}\n        {permission !== 'recruitmentConsultant' && (\n          <Col span={12} className=\"reminder-content reminder-content-link\">\n            {month}月离职人数\n            <span style={{ color: '#658ef7' }}>\n              {reminderList && reminderList.leaveEmpTotal}\n            </span>\n            人\n          </Col>\n        )}\n\n        {permission !== 'recruitmentConsultant' && (\n          <Col\n            span={12}\n            onClick={() => this.handleGoToProject()}\n            className=\"reminder-content  reminder-content-link\"\n          >\n            待完善项目\n            <span style={{ color: '#658ef7' }}>{myTodoList}</span>人\n          </Col>\n        )}\n        {permission !== 'recruitmentConsultant' && (\n          <Col span={12} className=\"reminder-content\">\n            信息安全提醒\n            <span style={{ color: '#658ef7' }}></span>\n          </Col>\n        )}\n        <Col\n          onClick={() => this.handlGoToEduc()}\n          span={12}\n          className=\"reminder-content reminder-content-link\"\n        >\n          待完善学历\n          <span style={{ color: '#658ef7' }}> {myTodoeducationData} </span>人\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default withRouter(Reminder);\n","import React, { Component } from 'react';\nimport { Table } from 'antd';\nimport { connect } from 'react-redux';\n// import fetch from '../../../utils/axios.config';\nimport './birthdayReminder.less';\nimport { actionCreators } from '../store';\n\nconst columns = [\n  {\n    title: '月份',\n    dataIndex: 'birthdayMonthCode',\n    width: '50%',\n    key: 1\n  },\n  {\n    title: '人数',\n    dataIndex: 'birthdayMonthTotal',\n    width: '50%',\n    key: 2\n  }\n];\n\n@connect(state => state.home, actionCreators)\nclass BirthdayReminder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // const token = localStorage.getItem(\"token\");\n    const { getBirthdayList } = this.props;\n    getBirthdayList();\n  }\n  render() {\n    const paginationObj = {\n      pageSize: 3\n    };\n    const { birthdayList } = this.props;\n    return (\n      <div className=\"birthdat\" style={{ padding: '10px' }}>\n        <Table\n          rowKey={(record, index) => index}\n          columns={columns}\n          dataSource={birthdayList}\n          pagination={paginationObj}\n        />\n      </div>\n    );\n  }\n}\nexport default BirthdayReminder;\n","import React, { Component } from 'react';\nimport { Table } from 'antd';\nimport { connect } from 'react-redux';\nimport './fieldNumber.less';\nimport { actionCreators } from '../store';\n\nconst columns = [\n  {\n    title: '地址',\n    dataIndex: 'areaName',\n    width: '50%',\n    key: 1\n  },\n  {\n    title: '人数',\n    dataIndex: 'areaEmployeeTotal',\n    width: '50%',\n    key: 2\n  }\n];\n\n@connect(state => state.home, actionCreators)\nclass FieldNumber extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    const { getFieldList } = this.props;\n    const arg0 = {\n      pageSize: 3,\n      currentPage: 1\n    };\n    getFieldList(arg0);\n  }\n  handleChangePage = page => {\n    const { getFieldList } = this.props;\n    const arg0 = {\n      pageSize: 3,\n      currentPage: page\n    };\n    getFieldList(arg0);\n  };\n  render() {\n    const { fieldList, fieldTotal } = this.props;\n    const paginationObj = {\n      pageSize: 3,\n      total: fieldTotal,\n      onChange: this.handleChangePage\n    };\n    return (\n      <div className=\"fieldNumber\" style={{ padding: '10px' }}>\n        <Table\n          rowKey={(record, index) => index}\n          columns={columns}\n          dataSource={fieldList}\n          pagination={paginationObj}\n        />\n      </div>\n    );\n  }\n}\n\nexport default FieldNumber;\n","import React, { Component } from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport { actionCreators } from '../store';\nimport './rejular.less';\n\n@connect(state => state.home, actionCreators)\nclass Rejular extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rejularPage: 1\n    };\n  }\n  componentDidMount() {\n    const { getRejularList } = this.props;\n    const arg0 = {\n      pageSize: 6,\n      currentPage: 1\n    };\n    getRejularList(arg0);\n  }\n\n  handleChangeRejularPage = page => {\n    const { getRejularList } = this.props;\n    const arg0 = {\n      pageSize: 6,\n      currentPage: page\n    };\n    this.setState(\n      {\n        rejularPage: page\n      },\n      () => {\n        getRejularList(arg0);\n      }\n    );\n  };\n  render() {\n    const { rejularList, regularTotal } = this.props;\n    const { rejularPage } = this.state;\n    return (\n      <div className=\"rejular\" style={{ padding: '10px' }}>\n        {rejularList.map((item, index) => {\n          return (\n            <span key={index} className=\"rejular-content\">\n              {item.empName}将在\n              <span style={{ color: '#658ef7' }}>{item.regularTime}</span>\n              天后转正\n            </span>\n          );\n        })}\n        <div className=\"rejular-pagination\">\n          <Pagination\n            current={rejularPage}\n            pageSize={6}\n            total={regularTotal}\n            onChange={this.handleChangeRejularPage.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Rejular;\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actionCreators } from '../store';\n\n@connect(state => state.home, actionCreators)\nclass InterviewReminder extends Component {\n  componentDidMount() {\n    const {\n      queryMyToDoAssignationInterview,\n      queryMyToDoInterview\n    } = this.props;\n    queryMyToDoAssignationInterview();\n    queryMyToDoInterview();\n  }\n  render() {\n    const { interviewResume, distributionResume } = this.props;\n    return (\n      <Row className=\"layout-home-reminder\" style={{ minWidth: '290px' }}>\n        <Col span={12} className=\"reminder-content reminder-content-link\">\n          待分配简历\n          <span style={{ color: '#658ef7' }}> {distributionResume} </span>份\n        </Col>\n        <Col span={12} className=\"reminder-content reminder-content-link\">\n          待面试简历\n          <span style={{ color: '#658ef7' }}> {interviewResume} </span>份\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default withRouter(InterviewReminder);\n","import React, { Component } from 'react';\nimport { Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport { actionCreators } from '../store';\n\n@connect(state => state.home, actionCreators)\nclass InterviewRejular extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1\n    };\n  }\n\n  componentDidMount() {\n    const { queryResumeWillRelease } = this.props;\n    const arg0 = {\n      pageSize: 6,\n      currentPage: 1\n    };\n    queryResumeWillRelease(arg0);\n  }\n\n  //分页\n  handleChangeInterviewRejularPage = page => {\n    const { queryResumeWillRelease } = this.props;\n    const arg0 = {\n      pageSize: 6,\n      currentPage: page\n    };\n    queryResumeWillRelease(arg0);\n    this.setState({\n      currentPage: page\n    });\n  };\n\n  render() {\n    const { interviewRejularList, interviewRejularTotal } = this.props;\n    const { currentPage } = this.state;\n    return (\n      <div className=\"rejular\" style={{ padding: '10px' }}>\n        {interviewRejularList.map((item, index) => {\n          return (\n            <span key={index} className=\"rejular-content\">\n              <span style={{ color: '#658ef7' }}>{item.userName}</span>将在\n              <span style={{ color: '#658ef7' }}>{item.releaseTime}</span>\n              h后释放\n            </span>\n          );\n        })}\n        <div className=\"rejular-pagination\">\n          <Pagination\n            current={currentPage}\n            pageSize={6}\n            total={interviewRejularTotal}\n            onChange={this.handleChangeInterviewRejularPage.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InterviewRejular;\n","import React, { Component } from 'react';\nimport { Table, Button, message } from 'antd';\n\nimport fetch from '../../../utils/axios.config';\n\nconst data = [\n  {\n    resourceManagerName: '张三',\n    assignResumeTotal: '10'\n  }\n];\nexport default class WaitingDistribution extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      waitingList: [],\n      waitingTotal: 0\n    };\n    this.columns = [\n      {\n        title: '姓名',\n        dataIndex: 'resourceManagerName',\n        width: '40%'\n      },\n      {\n        title: '份数',\n        dataIndex: 'assignResumeTotal',\n        width: '40%'\n      }\n    ];\n  }\n\n  componentDidMount() {\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 3\n    };\n    this.queryResumeWillAssignCount(arg0);\n  }\n\n  //获取资源经理待分配的面试简历\n  queryResumeWillAssignCount = arg0 => {\n    fetch\n      .get('/api/audition/home/queryResumeWillAssignCount.json', {\n        params: arg0\n      })\n      .then(res => {\n        if (res && res.success) {\n          const { total, data = [] } = res.data;\n          this.setState({\n            waitingList: data,\n            waitingTotal: total\n          });\n          console.log('res', res);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n\n  handleChangePage = page => {\n    const arg0 = {\n      pageSize: 3,\n      currentPage: page\n    };\n    this.queryResumeWillAssignCount(arg0);\n  };\n  render() {\n    const columns = this.columns;\n    const { waitingList, waitingTotal } = this.state;\n    const paginationObj = {\n      pageSize: 3,\n      total: waitingTotal,\n      onChange: this.handleChangePage\n    };\n    return (\n      <div style={{ padding: '5px' }}>\n        <Table\n          rowKey={(record, index) => index}\n          columns={columns}\n          dataSource={waitingList}\n          pagination={paginationObj}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Table, Button, message, Tooltip } from 'antd';\n\nimport fetch from '../../../utils/axios.config';\n\nexport default class ProjectApproval extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectApprovalList: [],\n      projectApprovalTotal: 0\n    };\n    this.columns = [\n      {\n        title: '项目',\n        dataIndex: 'projectName',\n        width: '40%',\n        onCell: () => {\n          return {\n            style: {\n              maxWidth: 100,\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n              textOverflow: 'ellipsis',\n              cursor: 'pointer'\n            }\n          };\n        },\n        render: text => (\n          <Tooltip placement=\"topLeft\" title={text}>\n            {text}\n          </Tooltip>\n        )\n      },\n      {\n        title: '人数',\n        dataIndex: 'interviewPassTotal',\n        width: '40%'\n      }\n      // {\n      //   title: '操作',\n      //   dataIndex: 'action',\n      //   width: '20%',\n      //   render: (text, render) => {\n      //     return <Button>查看</Button>;\n      //   }\n      // }\n    ];\n  }\n\n  componentDidMount() {\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 3\n    };\n    this.queryProjectInterviewPassCount(arg0);\n  }\n\n  //获取资源经理待分配的面试简历\n  queryProjectInterviewPassCount = arg0 => {\n    fetch\n      .get('/api/audition/home/queryProjectInterviewPassCount.json', {\n        params: arg0\n      })\n      .then(res => {\n        if (res && res.success) {\n          const { total, data = [] } = res.data;\n          this.setState({\n            projectApprovalList: data,\n            projectApprovalTotal: total\n          });\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      })\n      .catch(err => {\n        if (err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n\n  handleChangePage = page => {\n    const arg0 = {\n      pageSize: 3,\n      currentPage: page\n    };\n    this.queryProjectInterviewPassCount(arg0);\n  };\n  render() {\n    const columns = this.columns;\n    const { projectApprovalList, projectApprovalTotal } = this.state;\n    const paginationObj = {\n      pageSize: 3,\n      total: projectApprovalTotal,\n      onChange: this.handleChangePage\n    };\n    return (\n      <div style={{ padding: '5px' }}>\n        <Table\n          rowKey={(record, index) => index}\n          columns={columns}\n          dataSource={projectApprovalList}\n          pagination={paginationObj}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport Reminder from './components/Reminder.jsx';\nimport BirthdayReminder from './components/BirthdayReminder.jsx';\nimport FieldNumber from './components/FieldNumber.jsx';\nimport Rejular from './components/Rejular.jsx';\nimport InterviewReminder from './interviewComponents/InterviewReminder.jsx';\nimport InterviewRejular from './interviewComponents/InterviewRejular.jsx';\nimport WaitingDistribution from './interviewComponents/WaitingDistribution.jsx';\nimport ProjectApproval from './interviewComponents/ProjectApproval.jsx';\nimport fetch from '../../utils/axios.config';\nimport './index.less';\nlet homeList = [];\nconst interViewHomeList = [\n  '提醒事项',\n  '面试提醒',\n  '待分配简历',\n  '项目通过人数'\n];\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permission: ''\n    };\n  }\n  componentDidMount() {\n    const { pathname } = this.props.location;\n    if (pathname === '/home') {\n      fetch.get('/api/user/queryUserPermission.json').then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          const permission = data[0].permission;\n          this.setState({\n            permission\n          });\n        }\n      });\n    }\n  }\n  render() {\n    const { pathname } = this.props.location;\n\n    //根据路由判断是进入人员管理还是内面系统\n    if (pathname === '/home') {\n      const { permission } = this.state;\n      if (permission && permission === 'recruitmentConsultant') {\n        homeList = ['提醒事项'];\n      }\n\n      if (permission && permission !== 'recruitmentConsultant') {\n        homeList = ['提醒事项', '转正提醒', '场地人数', '生日提醒'];\n      }\n      return (\n        <div className=\"layout-home\">\n          <Row>\n            {homeList.map((item, index) => {\n              return (\n                <Col\n                  key={index}\n                  className=\"layout-home-col\"\n                  span={12}\n                  style={{ height: '400px' }}\n                >\n                  <h2 className=\"layout-home-title\">{item}</h2>\n                  <div className=\"layout-home-info\">\n                    <div>\n                      {(item === '提醒事项' && <Reminder />) ||\n                        (item === '场地人数' && <FieldNumber />) ||\n                        (item === '生日提醒' && <BirthdayReminder />) ||\n                        (item === '转正提醒' && <Rejular />)}\n                    </div>\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"layout-home\">\n          <Row>\n            {interViewHomeList.map((item, index) => {\n              return (\n                <Col\n                  key={index}\n                  className=\"layout-home-col\"\n                  span={12}\n                  style={{ height: '400px' }}\n                >\n                  <h2 className=\"layout-home-title\">{item}</h2>\n                  <div className=\"layout-home-info\">\n                    <div>\n                      {(item === '提醒事项' && <InterviewReminder />) ||\n                        (item === '面试提醒' && <InterviewRejular />) ||\n                        (item === '待分配简历' && <WaitingDistribution />) ||\n                        (item === '项目通过人数' && <ProjectApproval />)}\n                    </div>\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      );\n    }\n  }\n}\n","//所有路由\nexport const allRouterList = [\n  '/',\n  '/home',\n  '/basic',\n  '/project',\n  '/department',\n  '/leave',\n  '/analysis',\n  '/education',\n  '/interview/home',\n  '/interview/personnel'\n];\n\n//在职人员管理路由\nexport const IncumbencyRouterList = [\n  '/home',\n  '/basic',\n  '/project',\n  '/department',\n  '/leave',\n  '/analysis',\n  '/education'\n];\n\n//内面系统路由\nexport const inserviceRouterList = ['/interview/home', '/interview/personnel'];\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport fetch from '../../utils/axios.config';\n\nimport {\n  IncumbencyRouterList,\n  inserviceRouterList\n} from '../../utils/router.config.js';\nimport './index.less';\n\nclass Menus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permission: ''\n    };\n  }\n  selectRouterAactive = () => {\n    const { pathname } = this.props.location;\n    let activeKey = '';\n    activeKey = pathname.substr(1);\n    if (pathname !== '/') {\n      activeKey = pathname.substr(1);\n    }\n\n    if (pathname === '/') {\n      activeKey = 'home';\n    }\n    return activeKey;\n  };\n\n  selectInserviceRouterAactive = () => {\n    const { pathname } = this.props.location;\n    const activeKey = pathname;\n    return activeKey;\n  };\n\n  componentDidMount() {\n    const { pathname } = this.props.location;\n    if (IncumbencyRouterList.includes(pathname)) {\n      fetch.get('/api/user/queryUserPermission.json').then(res => {\n        if (res && res.success) {\n          const { data } = res;\n          const permission = data[0].permission;\n          localStorage.setItem('permission', permission);\n          this.setState({\n            permission\n          });\n        }\n      });\n    }\n  }\n  render() {\n    const { pathname } = this.props.location;\n\n    if (IncumbencyRouterList.includes(pathname)) {\n      const activeKey = this.selectRouterAactive();\n      const { permission } = this.state;\n\n      return (\n        <div className=\"inservice-menu\">\n          <Menu\n            theme=\"dark\"\n            className=\"inservice-menu-antd\"\n            style={{ backgroundColor: '#658ef7', color: '#fff' }}\n            selectedKeys={[activeKey]}\n            mode=\"horizontal\"\n          >\n            <Menu.Item key=\"home\">\n              <Link to=\"/home\">首页</Link>\n            </Menu.Item>\n            {permission && permission !== 'recruitmentConsultant' && (\n              <Menu.Item key=\"basic\">\n                <Link to=\"/basic\">基础信息</Link>\n              </Menu.Item>\n            )}\n            <Menu.Item key=\"education\">\n              <Link to=\"/education\">学历信息</Link>\n            </Menu.Item>\n            {permission && permission !== 'recruitmentConsultant' && (\n              <Menu.Item key=\"project\">\n                <Link to=\"/project\">项目信息</Link>\n              </Menu.Item>\n            )}\n            {/* {permission && permission !== 'recruitmentConsultant' && (\n              <Menu.Item key=\"department\">\n                <Link to=\"/department\">人事调整</Link>\n              </Menu.Item>\n            )}\n            {permission && permission !== 'recruitmentConsultant' && (\n              <Menu.Item key=\"leave\">\n                <Link to=\"/leave\">离职信息</Link>\n              </Menu.Item>\n            )}*/}\n            {permission && permission !== 'recruitmentConsultant' && (\n              <Menu.Item key=\"analysis\">\n                <Link to=\"/analysis\">数据分析</Link>\n              </Menu.Item>\n            )}\n          </Menu>\n        </div>\n      );\n    } else if (inserviceRouterList.includes(pathname)) {\n      const activeKey = this.selectInserviceRouterAactive();\n      return (\n        <div className=\"inservice-menu\">\n          <Menu\n            theme=\"dark\"\n            selectedKeys={[activeKey]}\n            className=\"inservice-menu-antd\"\n            style={{ backgroundColor: '#658ef7', color: '#fff' }}\n            mode=\"horizontal\"\n          >\n            <Menu.Item key=\"/interview/home\">\n              <Link to=\"/interview/home\">首页</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/interview/personnel\">\n              <Link to=\"/interview/personnel\">面试管理</Link>\n            </Menu.Item>\n          </Menu>\n        </div>\n      );\n    }\n  }\n}\nexport default withRouter(Menus);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Row, Col } from 'antd';\nimport Menus from '../../components/Menu';\nimport {\n  IncumbencyRouterList,\n  inserviceRouterList\n} from '../../utils/router.config.js';\nimport './index.less';\n\nclass Header extends Component {\n  handleCancleLogin = () => {\n    localStorage.setItem('flag', false);\n    localStorage.setItem('token', '');\n    const { pathname } = this.props.location;\n    if (IncumbencyRouterList.includes(pathname)) {\n      this.props.history.push('/login');\n    }\n    if (inserviceRouterList.includes(pathname)) {\n      this.props.history.push('/interview/login');\n    }\n  };\n  render() {\n    const { pathname } = this.props.location;\n    return (\n      <div className=\"inservice-header\">\n        <Row style={{ height: '100%', display: 'flex' }}>\n          <Col span={5}>\n            <div className=\"inservice-header-logo\"></div>\n          </Col>\n          <Col span={16} className=\"inservice-header-menu\">\n            <Menus />\n          </Col>\n          <Col span={3} style={{ display: 'flex', justifyContent: 'center' }}>\n            {pathname !== '/login' && (\n              <Button onClick={this.handleCancleLogin.bind(this)}>\n                退出登录\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Icon, Input, Button, Checkbox, Col, Row, message } from 'antd';\nimport './index.less';\nclass Login extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        axios\n          .post('/api/user/login.json', {\n            username: values.username,\n            password: values.password\n          })\n          .then(res => {\n            if (res.data.success) {\n              localStorage.setItem('token', res.data.data.token);\n              localStorage.setItem('flag', true);\n              const { pathname } = this.props.location;\n              if (pathname === '/login') {\n                this.props.history.push('/home');\n              }\n              if (pathname === '/interview/login') {\n                this.props.history.push('/interview/home');\n              }\n            } else {\n              message.error('登录失败:' + res.data.message);\n            }\n          })\n          .catch(err => {\n            message.error('登录失败：' + err);\n          });\n      }\n    });\n  };\n\n  handleGoToRegister = () => {\n    this.props.history.push('/register');\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { pathname } = this.props.location;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    return (\n      <div>\n        <div className=\"login-form-layout\">\n          <Row style={{ backgroundColor: '#fff' }}>\n            <Col span={15}>\n              <div className=\"login-left-img\">\n                <img width=\"100%\" src={require('../../images/login.jpg')} />\n              </div>\n            </Col>\n            <Col span={9}>\n              <div className=\"login-rigiht-img\">\n                <Row>\n                  <Col span={4}>\n                    <h2 style={{ fontSize: '30px' }}>登录</h2>\n                  </Col>\n                  {pathname === '/interview/login' && (\n                    <Col className=\"login-click-to-login\" span={12}>\n                      没有账号？\n                      <span\n                        className=\"login-click-login-btn\"\n                        onClick={this.handleGoToRegister.bind(this)}\n                      >\n                        点此注册 >\n                      </span>\n                    </Col>\n                  )}\n\n                  <Col span={24}>\n                    <Form {...formItemLayout} className=\"login-form\">\n                      <Form.Item>\n                        {getFieldDecorator('username', {\n                          rules: [\n                            {\n                              required: true,\n                              message: '用户名不能为空'\n                            }\n                          ]\n                        })(\n                          <Input\n                            prefix={\n                              <Icon\n                                type=\"user\"\n                                style={{ color: 'rgba(0,0,0,.25)' }}\n                              />\n                            }\n                            placeholder=\"请输入账号\"\n                          />\n                        )}\n                      </Form.Item>\n                      <Form.Item>\n                        {getFieldDecorator('password', {\n                          rules: [\n                            {\n                              required: true,\n                              message: '密码不能为空'\n                            }\n                          ]\n                        })(\n                          <Input\n                            prefix={\n                              <Icon\n                                type=\"lock\"\n                                style={{ color: 'rgba(0,0,0,.25)' }}\n                              />\n                            }\n                            type=\"password\"\n                            placeholder=\"请输入密码\"\n                          />\n                        )}\n                      </Form.Item>\n                      <Form.Item>\n                        {getFieldDecorator('remember', {\n                          valuePropName: 'checked',\n                          initialValue: true\n                        })(<Checkbox>记住密码</Checkbox>)}\n                      </Form.Item>\n                      <Form.Item>\n                        <Button\n                          type=\"primary\"\n                          htmlType=\"submit\"\n                          className=\"login-form-button\"\n                          onClick={this.handleSubmit}\n                        >\n                          登录\n                        </Button>\n                      </Form.Item>\n                    </Form>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Login = Form.create()(Login);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Icon, Input, Button, Checkbox, Col, Row, message } from 'antd';\nimport './index.less';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      passwordType: 'text'\n    };\n  }\n\n  //切换密码框input的type类型\n  handleFocusPasswordType = () => {\n    this.setState({\n      passwordType: 'password'\n    });\n  };\n\n  //跳转至登录页\n  handleGoToLogin = () => {\n    this.props.history.push('/interview/login');\n  };\n\n  //提交注册信息\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        axios\n          .post('/api/user/register.json', {\n            ...values\n          })\n          .then(res => {\n            if (res.data.success) {\n              message.success('注册成功');\n              this.props.history.push('/interview/login');\n            } else {\n              message.error('注册失败:' + res.data.message);\n            }\n          })\n          .catch(err => {\n            message.error('注册失败：' + err);\n          });\n      }\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { passwordType } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    return (\n      <div>\n        <div className=\"register-form-layout\">\n          <Row style={{ backgroundColor: '#fff' }}>\n            <Col span={15}>\n              <div className=\"register-left-img\">\n                <img width=\"100%\" src={require('../../images/login.jpg')} />\n              </div>\n            </Col>\n            <Col span={9}>\n              <div className=\"register-rigiht-img\">\n                <Row>\n                  <Col span={4}>\n                    <h2 style={{ fontSize: '30px' }}>注册</h2>\n                  </Col>\n                  <Col span={12} className=\"register-click-to-login\">\n                    已有账号？\n                    <span\n                      className=\"register-click-login-btn\"\n                      onClick={this.handleGoToLogin.bind(this)}\n                    >\n                      点此登录 >\n                    </span>\n                  </Col>\n                  <Col span={24}>\n                    <Form\n                      {...formItemLayout}\n                      onSubmit={this.handleSubmit}\n                      className=\"register-form\"\n                    >\n                      <Form.Item>\n                        {getFieldDecorator('userName', {\n                          rules: [\n                            {\n                              required: true,\n                              message: '用户名为必填项'\n                            }\n                          ]\n                        })(\n                          <Input\n                            placeholder=\"请输入用户名\"\n                            autocomplete=\"off\"\n                          />\n                        )}\n                      </Form.Item>\n                      <Form.Item>\n                        {getFieldDecorator('password', {\n                          rules: [\n                            {\n                              required: true,\n                              message: '密码为必填项'\n                            }\n                          ]\n                        })(\n                          <Input\n                            type={passwordType}\n                            onFocus={this.handleFocusPasswordType.bind(this)}\n                            placeholder=\"请输入密码\"\n                            autocomplete=\"off\"\n                          />\n                        )}\n                      </Form.Item>\n                      <Form.Item>\n                        {getFieldDecorator('email', {\n                          rules: [\n                            {\n                              required: true,\n                              message: '邮箱为必填项'\n                            },\n                            {\n                              type: 'email',\n                              message: '邮箱格式为xxxx@xxx.com'\n                            }\n                          ]\n                        })(\n                          <Input placeholder=\"请输入邮箱\" autocomplete=\"off\" />\n                        )}\n                      </Form.Item>\n                      <Form.Item>\n                        {getFieldDecorator('phone', {\n                          rules: [\n                            {\n                              required: true,\n                              message: '电话为必填项'\n                            },\n                            {\n                              pattern: new RegExp(/^[1-9]\\d*$/, 'g'),\n                              message: '请输入正确的电话'\n                            }\n                          ]\n                        })(\n                          <Input placeholder=\"请输入电话\" autocomplete=\"off\" />\n                        )}\n                      </Form.Item>\n                      <Form.Item>\n                        {getFieldDecorator('empNo', {\n                          rules: [\n                            {\n                              required: true,\n                              message: '软通工号为必填项'\n                            },\n                            {\n                              pattern: new RegExp(/^[1-9]\\d*$/, 'g'),\n                              message: '工号格式有误，请输入数字'\n                            }\n                          ]\n                        })(\n                          <Input\n                            placeholder=\"请输入软通工号\"\n                            autocomplete=\"off\"\n                          />\n                        )}\n                      </Form.Item>\n                      <Form.Item>\n                        {getFieldDecorator('empName', {\n                          rules: [\n                            {\n                              required: true,\n                              message: '软通员工姓名为必填项'\n                            }\n                          ]\n                        })(\n                          <Input\n                            placeholder=\"请输入软通员工姓名\"\n                            autocomplete=\"off\"\n                          />\n                        )}\n                      </Form.Item>\n                      <Form.Item>\n                        <Button\n                          type=\"primary\"\n                          htmlType=\"submit\"\n                          className=\"register-form-button\"\n                          onClick={this.handleSubmit}\n                        >\n                          注册\n                        </Button>\n                      </Form.Item>\n                    </Form>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Register);\n","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\n\nimport './index.less';\n\nexport default class Error extends Component {\n  render() {\n    return (\n      <div className=\"error\">\n        <Row>\n          <Col span={24}>\n            <div className=\"error-img\">\n              <img src={require('../../images/404.png')} />\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","export const httAddress = 'http://47.92.48.141';\nexport const genderEunm = [\n  {\n    value: 1,\n    label: '男'\n  },\n  {\n    value: 0,\n    label: '女'\n  }\n];\n\nexport const uniformFlagEnum = [\n  {\n    key: 0,\n    label: '非'\n  },\n  {\n    key: 1,\n    label: '是'\n  }\n];\n\nexport const educationCodeEnum = [\n  {\n    key: 0,\n    label: '高中'\n  },\n  {\n    key: 1,\n    label: '中专'\n  },\n  {\n    key: 2,\n    label: '大专'\n  },\n  {\n    key: 3,\n    label: '本科'\n  },\n  {\n    key: 4,\n    label: '硕士'\n  },\n  {\n    key: 5,\n    label: '博士'\n  },\n  {\n    key: 6,\n    label: '博士后'\n  },\n  {\n    key: 7,\n    label: '院士'\n  }\n];\n\nexport const empPropertyEumn = [\n  {\n    id: 0,\n    name: '正式员工'\n  },\n  {\n    id: 1,\n    name: '试用期'\n  },\n  {\n    id: 2,\n    name: '实习期'\n  },\n  {\n    id: 3,\n    name: '兼职员工'\n  }\n];\nexport const onJobEnum = [\n  {\n    id: 0,\n    name: '离职'\n  },\n  {\n    id: 1,\n    name: '在职'\n  }\n];\n\nexport const reminderColumnsForm = [\n  {\n    title: 'BU',\n    dataIndex: 'ipsaBuDeptId',\n    width: '150px'\n  },\n  {\n    title: '部门',\n    dataIndex: 'ipsaDeptId',\n    width: '150px'\n  },\n  {\n    title: '姓名',\n    dataIndex: 'empName',\n    width: '150px',\n    fixed: 'left'\n  },\n  {\n    title: '软通工号',\n    dataIndex: 'empNo',\n    width: '150px'\n  },\n  {\n    title: '性别',\n    dataIndex: 'gender',\n    width: '150px'\n  },\n  {\n    title: '出生日期',\n    dataIndex: 'birthday',\n    width: '150px'\n  },\n  {\n    title: '入职日期',\n    dataIndex: 'joiningDay',\n    width: '150px'\n  },\n  {\n    title: '转正日期',\n    dataIndex: 'correctionTime',\n    width: '150px'\n  },\n  {\n    title: '通用职位',\n    dataIndex: 'ipsaPostNo',\n    width: '150px'\n  },\n  {\n    title: 'Grade代码',\n    dataIndex: 'ipsaGradeCode',\n    width: '150px'\n  },\n  {\n    title: '是否在职',\n    dataIndex: 'onJob',\n    width: '150px'\n  },\n  {\n    title: '人员性质',\n    dataIndex: 'empProperty',\n    width: '150px'\n  },\n  {\n    title: '直属上级',\n    dataIndex: 'directSuperiorName',\n    width: '150px'\n  },\n  {\n    title: '交付经理',\n    dataIndex: 'deliveryManagerName',\n    width: '150px'\n  },\n  {\n    title: '招聘顾问',\n    dataIndex: 'recruitmentUserId'\n  }\n];\n\nexport const resumeStatusList = [\n  {\n    value: 1,\n    label: '待分配'\n  },\n  {\n    value: 2,\n    label: '已分配'\n  },\n  {\n    value: 3,\n    label: '待面试'\n  },\n  {\n    value: 4,\n    label: '已面试'\n  }\n];\n\nexport const initialInterviewResultList = [\n  {\n    value: 1,\n    label: '通过'\n  },\n  {\n    value: 2,\n    label: '不通过'\n  }\n];\n\nexport const finalInterviewResultList = [\n  {\n    value: 1,\n    label: '通过'\n  },\n  {\n    value: 2,\n    label: '不通过'\n  }\n];\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Select, Modal, Form, DatePicker, Input } from 'antd';\nimport './basicModal.less';\nimport { actionCreators } from '../store';\nimport {\n  genderEunm,\n  empPropertyEumn,\n  onJobEnum,\n  reminderColumnsForm\n} from '../../../utils/optionEnum';\nconst { Option } = Select;\n\nconst inputList = ['empName', 'empNo'];\nconst dateList = ['birthday', 'joiningDay', 'correctionTime'];\nconst managedisabled = ['directSuperiorName'];\n\n@connect(state => state.basic, actionCreators)\nclass BasicModal extends Component {\n  handleCancel = () => {\n    const { changeBasicVisible } = this.props;\n    this.props.form.resetFields();\n    changeBasicVisible({\n      basicVisible: false,\n      record: {}\n    });\n  };\n\n  // 对输入框进行校验\n  basicFormRules = key => {\n    if (key === 'deliveryManagerName') {\n      return [];\n    }\n    if (key === 'correctionTime') {\n      return [];\n    }\n    return [\n      { required: true, message: '不能为空' },\n      {\n        validator: this.validFunction\n      }\n    ];\n  };\n\n  validFunction = (rule, value, callback) => {\n    if (rule && rule.field === 'ipsaDeptId')\n      if (value instanceof Object && Object.keys(value).length === 0) {\n        callback('不能为空');\n      }\n    callback();\n  };\n\n  componentDidMount() {\n    const { queryUserListInfoByRolePermission, dictInfo } = this.props;\n    dictInfo('general_position');\n    dictInfo('position_grade_code');\n    queryUserListInfoByRolePermission('recruitmentConsultant');\n    queryUserListInfoByRolePermission('projectManage');\n  }\n\n  // 根据不同的信息渲染不同的输入框\n  baseFormInput = (key, disabled) => {\n    const {\n      rsData,\n      dmData,\n      buList,\n      dicList,\n      dicModalList,\n      manageList,\n      gradeList\n    } = this.props;\n\n    if (inputList.indexOf(key) !== -1) {\n      return <Input />;\n    }\n    if (dateList.indexOf(key) !== -1) {\n      return (\n        <DatePicker\n          placeholder=\"请选择日期\"\n          style={{ width: '100%' }}\n          onChange={this.handleChangeDate.bind(this, key)}\n        />\n      );\n    }\n    return (\n      <Select\n        onChange={this.handleGetOption.bind(this, key)}\n        disabled={disabled}\n        labelInValue={true}\n        className=\"basic-select\"\n        style={{ width: '100%' }}\n        allowClear={key === 'deliveryManagerName' ? true : false}\n      >\n        {key === 'ipsaBuDeptId' &&\n          buList.map(item => {\n            //BU下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        {key === 'ipsaDeptId' &&\n          dicModalList.map(item => {\n            //部门下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        {key === 'gender' &&\n          genderEunm.map(item => {\n            //性别下拉列表\n            return (\n              <Option key={item.value} value={item.value}>\n                {item.label}\n              </Option>\n            );\n          })}\n        {key === 'ipsaPostNo' &&\n          dicList.map(item => {\n            //通用职位下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.label}\n              </Option>\n            );\n          })}\n        {key === 'ipsaGradeCode' &&\n          gradeList.map(item => {\n            //Grade代码下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.label}\n              </Option>\n            );\n          })}\n        {key === 'empProperty' &&\n          empPropertyEumn.map(item => {\n            //员工性质下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        {key === 'directSuperiorName' &&\n          manageList.map(item => {\n            //上级主管列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.empName}\n              </Option>\n            );\n          })}\n        {key === 'deliveryManagerName' &&\n          dmData.map(item => {\n            //交付下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.empName}\n              </Option>\n            );\n          })}\n        {key === 'onJob' &&\n          onJobEnum.map(item => {\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        {key === 'recruitmentUserId' &&\n          rsData.map(item => {\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.empName}\n              </Option>\n            );\n          })}\n      </Select>\n    );\n  };\n\n  //切换BU获取部门\n  handleGetOption = (key, value) => {\n    const { deptInfo, basicRecord, changeBasicVisible } = this.props;\n\n    if (key === 'ipsaBuDeptId') {\n      if (value && value.key) {\n        const newBasicRecord = JSON.parse(JSON.stringify(basicRecord));\n        newBasicRecord.ipsaDeptId = {};\n        changeBasicVisible({\n          basicVisible: true,\n          record: newBasicRecord\n        });\n        deptInfo({ id: value.key, tab: 'ipsaPostNo' });\n        this.props.form.resetFields();\n      }\n    }\n  };\n\n  handleChangeDate = (key, date, dateString) => {\n    console.log('date', date, 'dateString', dateString, 'key', key);\n  };\n\n  handleProjectSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const {\n          saveEmployeeBaseInfo,\n          basicRecord,\n          updateEmployeeBaseInfo\n        } = this.props;\n        const arg0 = {\n          empName: values.empName,\n          ipsaBuDeptId: values.ipsaBuDeptId ? values.ipsaBuDeptId.key : '',\n          ipsaDeptId: values.ipsaDeptId ? values.ipsaDeptId.key : '',\n          empNo: values.empNo,\n          gender: values.gender ? values.gender.key : '',\n          birthdayFormat: moment(values.birthday).format('YYYY-MM-DD'),\n          joiningDayFormat: moment(values.joiningDay).format('YYYY-MM-DD'),\n          correctionTimeFormat: basicRecord.id\n            ? values.correctionTime\n              ? moment(values.correctionTime).format('YYYY-MM-DD')\n              : ''\n            : '',\n          ipsaPostNo: values.ipsaPostNo ? values.ipsaPostNo.key : '',\n          ipsaGradeCode: values.ipsaGradeCode ? values.ipsaGradeCode.key : '',\n          empProperty: values.empProperty ? values.empProperty.key : '',\n          directSuperiorId: values.directSuperiorName\n            ? values.directSuperiorName.key\n            : '',\n          directSuperiorName: values.directSuperiorName\n            ? values.directSuperiorName.label\n            : '',\n          deliveryManagerId: values.deliveryManagerName\n            ? values.deliveryManagerName.key\n            : '',\n          deliveryManagerName: values.deliveryManagerName\n            ? values.deliveryManagerName.label\n            : '',\n          onJob: values.onJob ? values.onJob.key : '',\n          recruitmentUserId: values.recruitmentUserId\n            ? values.recruitmentUserId.key\n            : '',\n          recruitmentUserName: values.recruitmentUserId\n            ? values.recruitmentUserId.label\n            : ''\n        };\n        if (basicRecord.id) {\n          arg0.id = basicRecord.id;\n          updateEmployeeBaseInfo(arg0);\n        } else {\n          saveEmployeeBaseInfo(arg0);\n        }\n      }\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.basicVisible) {\n      this.props.form.resetFields();\n    }\n  }\n\n  render() {\n    const { basicVisible, basicRecord } = this.props;\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    return (\n      <div className=\"basic-modal\">\n        <Modal\n          title={basicRecord.id ? '修改信息' : '添加新员工'}\n          visible={basicVisible}\n          onOk={this.handleProjectSubmit}\n          onCancel={this.handleCancel}\n          className=\"basic-add-modal\"\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Form {...formItemLayout} className=\"basic-form\">\n            {reminderColumnsForm.map((item, index) => {\n              if (item.dataIndex === 'recruitmentUserId' && basicRecord.id) {\n                //编辑状态不显示招聘顾问\n                return '';\n              }\n              //直属上级在编辑时不能修改\n              let disabled = false;\n              if (managedisabled.includes(item.dataIndex) && basicRecord.id) {\n                disabled = true;\n              }\n              return (\n                <Form.Item label={item.title} key={item.dataIndex}>\n                  {getFieldDecorator(item.dataIndex, {\n                    initialValue:\n                      item.dataIndex === 'birthday' ||\n                      item.dataIndex === 'joiningDay' ||\n                      item.dataIndex === 'correctionTime'\n                        ? basicRecord[item.dataIndex]\n                          ? moment(basicRecord[item.dataIndex])\n                          : null\n                        : basicRecord[item.dataIndex],\n                    rules: this.basicFormRules(item.dataIndex)\n                  })(this.baseFormInput(item.dataIndex, disabled))}\n                </Form.Item>\n              );\n            })}\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(BasicModal);\n","import React from 'react';\nimport { Button } from 'antd';\nexport const basicColumnsFunction = (that, permission) => {\n  const basicTableList = [\n    {\n      title: 'BU',\n      dataIndex: 'ipsaBuDeptName',\n      width: '100px'\n    },\n    {\n      title: '部门',\n      dataIndex: 'ipsaDeptName',\n      width: '150px'\n    },\n    {\n      title: '姓名',\n      dataIndex: 'empName',\n      width: '80px'\n    },\n    {\n      title: '软通工号',\n      dataIndex: 'empNo',\n      width: '100px'\n    },\n    {\n      title: '性别',\n      dataIndex: 'gender',\n      width: '50px',\n      render: (text, record) => {\n        switch (text) {\n          case 1:\n            return <span>男</span>;\n          case 0:\n            return <span>女</span>;\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '出生日期',\n      dataIndex: 'birthday',\n      width: '150px'\n    },\n    {\n      title: '入职日期',\n      dataIndex: 'joiningDay',\n      width: '150px'\n    },\n    {\n      title: '转正日期',\n      dataIndex: 'correctionTime',\n      width: '150px'\n    },\n    {\n      title: '通用职位',\n      dataIndex: 'ipsaPostName',\n      width: '150px'\n    },\n    {\n      title: 'Grade代码',\n      dataIndex: 'ipsaGradeName',\n      width: '90px'\n    },\n    {\n      title: '是否在职',\n      dataIndex: 'onJob',\n      width: '90px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>离职</span>;\n          case 1:\n            return <span>在职</span>;\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '人员性质',\n      dataIndex: 'empProperty',\n      width: '100px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>正式员工</span>;\n          case 1:\n            return <span>试用期</span>;\n          case 2:\n            return <span>实习期</span>;\n          case 3:\n            return <span>兼职员工</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '直属上级',\n      dataIndex: 'directSuperiorName',\n      width: '100px'\n    },\n    {\n      title: '交付经理',\n      dataIndex: 'deliveryManagerName',\n      width: '100px'\n    },\n    {\n      title: '操作',\n      dataIndex: 'action',\n      width: '90px',\n      render: (text, record) => {\n        return (\n          <Button\n            disabled={\n              (permission && permission === 'hr') ||\n              permission === 'admin' ||\n              permission === 'hr'\n                ? false\n                : true\n            }\n            onClick={() => {\n              const { changeBasicVisible, deptInfo } = that.props;\n              let onjobKey = '',\n                onJobLabel = '';\n              if (record.onJob === 0) {\n                onjobKey = record.onJob;\n                onJobLabel = '离职';\n              } else if (record.onJob === 1) {\n                onjobKey = record.onJob;\n                onJobLabel = '在职';\n              }\n              const newRecord = {\n                id: record.id,\n                empNo: record.empNo,\n                empName: record.empName,\n                ipsaBuDeptId: {\n                  key: record.ipsaBuDeptId,\n                  label: record.ipsaBuDeptName\n                },\n                ipsaDeptId: {\n                  key: record.ipsaDeptId,\n                  label: record.ipsaDeptName\n                },\n                gender: {\n                  key: record.gender,\n                  label: record.gender === 1 ? '男' : '女'\n                },\n                birthday: record.birthday,\n                joiningDay: record.joiningDay,\n                ipsaPostNo: {\n                  key: record.ipsaPostNo,\n                  label: record.ipsaPostName\n                },\n                ipsaGradeCode: {\n                  key: record.ipsaGradeCode,\n                  label: record.ipsaGradeName\n                },\n                correctionTime: record.correctionTime\n                  ? record.correctionTime\n                  : '',\n                empProperty: {\n                  key: record.empProperty,\n                  label: record.empProperty\n                },\n                directSuperiorName: {\n                  key: record.directSuperiorId,\n                  label: record.directSuperiorName\n                },\n                deliveryManagerName: {\n                  key: record.deliveryManagerId,\n                  label: record.deliveryManagerName\n                },\n                onJob: {\n                  key: onjobKey,\n                  label: onJobLabel\n                }\n              };\n              changeBasicVisible({\n                basicVisible: true,\n                record: newRecord\n              });\n              if (record.ipsaBuDeptId) {\n                deptInfo({ id: record.ipsaBuDeptId });\n              }\n            }}\n          >\n            编辑\n          </Button>\n        );\n      }\n    }\n  ];\n  return basicTableList;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  DatePicker,\n  Upload,\n  Row,\n  Col,\n  Button,\n  Table,\n  Form,\n  Select,\n  Input,\n  Pagination,\n  message,\n  Tooltip\n} from 'antd';\nimport axios from 'axios';\nimport BasicModal from './components/BasicModal.jsx';\nimport { empPropertyEumn } from '../../utils/optionEnum';\nimport { actionCreators } from './store';\nimport { basicColumnsFunction } from './basicColumns';\nimport fetch from '../../utils/axios.config';\nimport './index.less';\nconst { Search } = Input;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n@connect(state => state.basic, actionCreators)\nclass BasicInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permission: ''\n    };\n  }\n  componentDidMount() {\n    fetch.get('/api/user/queryUserPermission.json').then(res => {\n      if (res && res.success) {\n        const { data } = res;\n        const permission = data[0].permission;\n        this.setState({\n          permission\n        });\n      }\n    });\n    const {\n      queryEmployeeBaseInfoList,\n      deptInfoBu,\n      queryUserListInfoByRolePermission,\n      changeCurrentPageData\n    } = this.props;\n    const entmonth = localStorage.getItem('entmonth');\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      gender: '',\n      keyword: '',\n      joiningDayStartTime: '',\n      joiningDayEndTime: '',\n      empProperty: '',\n      directSuperiorId: '',\n      employeeStatus: entmonth\n    };\n    changeCurrentPageData(arg0);\n    queryEmployeeBaseInfoList(arg0);\n    queryUserListInfoByRolePermission('deliveryManager');\n    deptInfoBu();\n  }\n\n  //打开对话框\n  handleShowModel = () => {\n    const { changeBasicVisible } = this.props;\n    this.props.form.resetFields();\n    changeBasicVisible({\n      basicVisible: true,\n      record: {}\n    });\n  };\n\n  //导入数据提醒\n  handleChangeFile = ({ file, fileList }) => {\n    const { queryEmployeeBaseInfoList } = this.props;\n\n    if (file && file.status === 'done' && file.response.success) {\n      message.success(\n        file.response.message + '，共导入' + file.response.data + '条数据'\n      );\n      queryEmployeeBaseInfoList({\n        currentPage: 1,\n        pageSize: 20\n      });\n    } else {\n      if (file && file.status === 'done' && !file.response.success) {\n        message.error('导入失败:' + file.response.message);\n      }\n      if (file && file.status === 'error') {\n        if (file.error.status === 401) {\n          message.error('导入失败，请重新登录');\n        } else {\n          message.error('导入失败:' + file.response.message);\n        }\n      }\n    }\n  };\n\n  //上传前的文件校验\n  handleBeforeUpload = (file, fileList) => {\n    if (\n      file &&\n      file.type !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      message.error('请上传以.xlsx为后缀的Excel文件');\n      return;\n    }\n  };\n  //搜索框调用查询列表\n  handleSearchInput = value => {\n    const { queryEmployeeBaseInfoList, changeCurrentPageData } = this.props;\n    this.props.form.validateFields((err, values) => {\n      const arg0 = {\n        currentPage: 1,\n        pageSize: 10,\n        ipsaBuDeptId: '',\n        ipsaDeptId: '',\n        gender: '',\n        keyword: value,\n        joiningDayStartTime: '',\n        joiningDayEndTime: '',\n        empProperty: '',\n        directSuperiorId: '',\n        employeeStatus: ''\n      };\n      changeCurrentPageData(arg0);\n      localStorage.setItem('entmonth', '');\n      queryEmployeeBaseInfoList(arg0);\n      this.props.form.resetFields();\n    });\n  };\n\n  //修改搜索框的值\n  handleChangeSearchInput = value => {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      gender: '',\n      keyword: value.target.value,\n      joiningDayStartTime: '',\n      joiningDayEndTime: '',\n      empProperty: '',\n      directSuperiorId: '',\n      employeeStatus: ''\n    };\n    changeCurrentPageData(arg0);\n  };\n\n  handleChangeBuDeptId = value => {\n    const {\n      deptInfo,\n      changeDepList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    if (value) {\n      const newCurrentPageData = JSON.parse(JSON.stringify(currentPageData));\n      newCurrentPageData.ipsaDeptId = '';\n      changeCurrentPageData(newCurrentPageData);\n      this.props.form.resetFields();\n      deptInfo(value);\n    } else {\n      changeDepList([]);\n    }\n    this.props.form.resetFields();\n  };\n\n  //查询按钮\n  handleSearchList = event => {\n    event.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      const { queryEmployeeBaseInfoList, changeCurrentPageData } = this.props;\n      const dateStart =\n        values.joiningDay && values.joiningDay.length\n          ? moment(values.joiningDay[0]).format('YYYY-MM-DD')\n          : '';\n      const dateEnd =\n        values.joiningDay && values.joiningDay.length\n          ? moment(values.joiningDay[1]).format('YYYY-MM-DD')\n          : '';\n      const arg0 = {\n        currentPage: 1,\n        pageSize: 10,\n        ipsaBuDeptId: values.ipsaBuDeptId,\n        ipsaDeptId: values.ipsaDeptId,\n        gender: values.gender,\n        keyword: '',\n        joiningDayStartTime: dateStart,\n        joiningDayEndTime: dateEnd,\n        empProperty: values.empProperty,\n        directSuperiorId: values.directSuperiorId,\n        employeeStatus: ''\n      };\n      changeCurrentPageData(arg0);\n      localStorage.setItem('entmonth', '');\n      queryEmployeeBaseInfoList(arg0);\n    });\n  };\n\n  //分页查询\n  handleTableChange = page => {\n    const {\n      queryEmployeeBaseInfoList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    const entmonth = localStorage.getItem('entmonth');\n    const arg0 = {\n      currentPage: page,\n      pageSize: 10,\n      keyword: currentPageData.keyword,\n      ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n      ipsaDeptId: currentPageData.ipsaDeptId,\n      directSuperiorId: currentPageData.directSuperiorId,\n      gender: currentPageData.gender,\n      joiningDayEndTime: currentPageData.joiningDayEndTime,\n      joiningDayStartTime: currentPageData.joiningDayStartTime,\n      empProperty: currentPageData.empProperty,\n      employeeStatus: entmonth\n    };\n    changeCurrentPageData(arg0);\n    queryEmployeeBaseInfoList(arg0);\n  };\n\n  //导出excel\n  handleDownload = () => {\n    const token = localStorage.getItem('token');\n    const entmonth = localStorage.getItem('entmonth');\n    const { currentPageData } = this.props;\n\n    axios({\n      method: 'get',\n      url: '/api/base/download',\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      params: {\n        keyword: currentPageData.keyword,\n        ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n        ipsaDeptId: currentPageData.ipsaDeptId,\n        directSuperiorId: currentPageData.directSuperiorId,\n        gender: currentPageData.gender,\n        joiningDayEndTime: currentPageData.joiningDayEndTime,\n        joiningDayStartTime: currentPageData.joiningDayStartTime,\n        empProperty: currentPageData.empProperty,\n        employeeStatus: entmonth\n      },\n      responseType: 'blob'\n    })\n      .then(res => {\n        if (res.status === 200) {\n          const blob = new Blob([res.data], {\n            type:\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'\n          });\n          const url = window.URL.createObjectURL(blob);\n          const aLink = document.createElement('a');\n          aLink.style.display = 'none';\n          aLink.href = url;\n          aLink.setAttribute('download', 'excel.xlsx');\n          document.body.appendChild(aLink);\n          aLink.click();\n          document.body.removeChild(aLink); //下载完成移除元素\n          window.URL.revokeObjectURL(url);\n          message.success('导出成功');\n        } else {\n          message.error('导出失败');\n        }\n      })\n      .catch(err => {\n        message.error('导出失败');\n      });\n  };\n\n  //表格列表\n  handleGetColumns = () => {\n    const that = this;\n    const { permission } = this.state;\n    const projectList = basicColumnsFunction(that, permission);\n    return projectList;\n  };\n\n  //组件销毁清空搜索\n  componentWillUnmount() {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      gender: '',\n      keyword: '',\n      joiningDayStartTime: '',\n      joiningDayEndTime: '',\n      empProperty: '',\n      directSuperiorId: '',\n      employeeStatus: ''\n    };\n    changeCurrentPageData(arg0);\n    localStorage.setItem('entmonth', '');\n  }\n  render() {\n    const {\n      basicList = [],\n      buList = [],\n      depList = [],\n      total,\n      currentPageData,\n      manageList = []\n    } = this.props;\n    const { permission } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    const token = localStorage.getItem('token');\n    return (\n      <div className=\"basic-information\">\n        <Row style={{ padding: '20px' }}>\n          <Col span={24}>\n            <Row className=\"basic-operator-set\">\n              <Col span={8}>\n                <Search\n                  style={{ width: '50%', marginLeft: '20px' }}\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => this.handleSearchInput(value)}\n                  onChange={value => this.handleChangeSearchInput(value)}\n                  enterButton\n                  value={currentPageData.keyword}\n                />\n              </Col>\n              <Col span={16} style={{ textAlign: 'right' }}>\n                <Button\n                  disabled={\n                    (permission && permission === 'hr') ||\n                    permission === 'admin'\n                      ? false\n                      : true\n                  }\n                  type=\"primary\"\n                  onClick={this.handleShowModel.bind(this)}\n                  style={{ marginRight: '7%' }}\n                >\n                  + 新增\n                </Button>\n                <div\n                  style={{\n                    width: '64px',\n                    display: 'inline-block',\n                    marginRight: '7%'\n                  }}\n                >\n                  <Upload\n                    disabled={\n                      (permission && permission === 'hr') ||\n                      permission === 'admin' ||\n                      permission === 'hr'\n                        ? false\n                        : true\n                    }\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    action=\"/api/base/import/employeeBaseInfo.json\"\n                    method=\"post\"\n                    headers={{\n                      Authorization: 'Bearer ' + token\n                    }}\n                    showUploadList={false}\n                    onChange={this.handleChangeFile.bind(this)}\n                    beforeUpload={this.handleBeforeUpload.bind(this)}\n                  >\n                    <Tooltip title=\"支持导入.xlsx文件\">\n                      <Button\n                        disabled={\n                          (permission && permission === 'hr') ||\n                          permission === 'admin' ||\n                          permission === 'hr'\n                            ? false\n                            : true\n                        }\n                        type=\"primary\"\n                      >\n                        导入\n                      </Button>\n                    </Tooltip>\n                  </Upload>\n                </div>\n                <div\n                  style={{\n                    width: '64px',\n                    display: 'inline-block',\n                    marginRight: '2%'\n                  }}\n                >\n                  <Button\n                    disabled={\n                      (permission && permission === 'hr') ||\n                      permission === 'admin' ||\n                      permission === 'hr'\n                        ? false\n                        : true\n                    }\n                    type=\"primary\"\n                    onClick={this.handleDownload.bind(this)}\n                  >\n                    导出\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '5px' }} span={24}>\n            <Row>\n              <Col span={22}>\n                <Form>\n                  <Col span={6} className=\"basic-from-search-btn\">\n                    <Form.Item\n                      labelCol={{ span: 5 }}\n                      wrapperCol={{ span: 18 }}\n                      label=\"BU\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('ipsaBuDeptId', {\n                        initialValue: currentPageData.ipsaBuDeptId\n                      })(\n                        <Select\n                          allowClear\n                          onChange={this.handleChangeBuDeptId.bind(this)}\n                        >\n                          {buList.length &&\n                            buList.map((item, index) => {\n                              return (\n                                <Option key={item.id} value={item.id}>\n                                  {item.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={6}>\n                    <Form.Item\n                      labelCol={{ span: 6 }}\n                      wrapperCol={{ span: 16 }}\n                      label=\"部门\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('ipsaDeptId', {\n                        initialValue: currentPageData.ipsaDeptId\n                      })(\n                        <Select allowClear>\n                          {depList.length &&\n                            depList.map(item => {\n                              return (\n                                <Option key={item.id} value={item.id}>\n                                  {item.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={4}>\n                    <Form.Item\n                      labelCol={{ span: 6 }}\n                      wrapperCol={{ span: 14 }}\n                      label=\"性别\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('gender', {\n                        initialValue: currentPageData.gender\n                      })(\n                        <Select allowClear>\n                          <Option value=\"1\">男</Option>\n                          <Option value=\"0\">女</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={8}>\n                    <Form.Item\n                      labelCol={{ span: 5 }}\n                      wrapperCol={{ span: 18 }}\n                      label=\"入职日期\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('joiningDay', {\n                        initialValue: currentPageData.joiningDay\n                      })(\n                        <RangePicker\n                          placeholder={['起始日期', '结束日期']}\n                          ranges={{\n                            当天: [moment(), moment()],\n                            本月: [\n                              moment().startOf('month'),\n                              moment().endOf('month')\n                            ]\n                          }}\n                        />\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={4}>\n                    <Form.Item\n                      labelCol={{ span: 8 }}\n                      wrapperCol={{ span: 15 }}\n                      label=\"人员性质\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('empProperty', {\n                        initialValue: currentPageData.empProperty\n                      })(\n                        <Select allowClear>\n                          {empPropertyEumn.map(item => {\n                            return (\n                              <Option key={item.id} value={item.id}>\n                                {item.name}\n                              </Option>\n                            );\n                          })}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                  <Col span={6}>\n                    <Form.Item\n                      labelCol={{ span: 14 }}\n                      wrapperCol={{ span: 10 }}\n                      label=\"直属上级\"\n                      hasFeedback\n                    >\n                      {getFieldDecorator('directSuperiorId', {\n                        initialValue: currentPageData.deliveryManagerName\n                      })(\n                        <Select allowClear>\n                          {manageList.map(item => {\n                            return (\n                              <Option key={item.id} value={item.id}>\n                                {item.empName}\n                              </Option>\n                            );\n                          })}\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                </Form>\n              </Col>\n              <Col span={2} style={{ textAlign: 'right' }}>\n                <Button\n                  type=\"primary\"\n                  style={{\n                    marginTop: '3px',\n                    marginRight: '15%'\n                  }}\n                  onClick={this.handleSearchList.bind(this)}\n                >\n                  查询\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col\n            className=\"basic-content-table\"\n            style={{ marginTop: '5px' }}\n            span={24}\n            ref={el => {\n              this.tableHeight = el;\n            }}\n          >\n            <Table\n              rowKey={(record, index) => index}\n              columns={this.handleGetColumns()}\n              dataSource={basicList}\n              pagination={false}\n            />\n          </Col>\n          <Col className=\"basic-paging\" span={24}>\n            <Pagination\n              total={total}\n              showTotal={total => `共 ${total} 条数据`}\n              current={currentPageData.currentPage}\n              onChange={page => {\n                this.handleTableChange(page);\n              }}\n            />\n          </Col>\n        </Row>\n\n        <BasicModal />\n      </div>\n    );\n  }\n}\nexport default Form.create()(BasicInformation);\n","import React from 'react';\nimport moment from 'moment';\nimport { Tooltip } from 'antd';\nexport const reminderColumns = [\n  {\n    title: '姓名',\n    dataIndex: 'empName',\n    width: '150px',\n    fixed: 'left'\n  },\n  {\n    title: 'BU',\n    dataIndex: 'ipsaBuDeptId',\n    width: '150px'\n  },\n  {\n    title: '部门',\n    dataIndex: 'ipsaDeptId',\n    width: '150px'\n  },\n  {\n    title: '软通工号',\n    dataIndex: 'empNo',\n    width: '150px'\n  },\n  {\n    title: '性别',\n    dataIndex: 'gender',\n    width: '150px'\n  },\n  {\n    title: '出生日期',\n    dataIndex: 'birthday',\n    width: '150px'\n  },\n  {\n    title: '入职日期',\n    dataIndex: 'joiningDay',\n    width: '150px'\n  },\n  {\n    title: '转正日期',\n    dataIndex: 'correctionTime',\n    width: '150px'\n  },\n  {\n    title: '通用职位',\n    dataIndex: 'ipsaPostNo',\n    width: '150px'\n  },\n  {\n    title: 'Grade代码',\n    dataIndex: 'ipsaGradeCode',\n    width: '150px'\n  },\n  {\n    title: '是否在职',\n    dataIndex: 'onJob',\n    width: '150px',\n    render: (text, record) => {\n      return <span>{text === 0 ? '离职' : '在职'} </span>;\n    }\n  },\n  {\n    title: '人员性质',\n    dataIndex: 'empProperty',\n    width: '150px'\n  },\n  {\n    title: '直属上级',\n    dataIndex: 'directSuperiorName',\n    width: '150px'\n  },\n  {\n    title: '交付经理',\n    dataIndex: 'deliveryManagerName',\n    width: '150px'\n  }\n];\n\nexport const educationList = [\n  {\n    title: '毕业学校',\n    dataIndex: 'graduatedUniversities',\n    width: '150px'\n  },\n  {\n    title: '专业',\n    dataIndex: 'majorCode',\n    width: '150px'\n  },\n  {\n    title: '学历',\n    dataIndex: 'educationCode',\n    width: '150px'\n  },\n  {\n    title: '是否统招',\n    dataIndex: 'uniformFlag',\n    width: '150px'\n  }\n];\n\nexport const leaveFormList = [\n  {\n    title: '姓名',\n    dataIndex: 'name',\n    width: '150px'\n  },\n  {\n    title: 'BU',\n    dataIndex: 'bu',\n    width: '150px'\n  },\n  {\n    title: '部门',\n    dataIndex: 'bumen',\n    width: '150px'\n  },\n  {\n    title: '软通工号',\n    dataIndex: 'empNo',\n    width: '150px'\n  },\n  {\n    title: '阿里离项时间',\n    dataIndex: 'alworkId',\n    width: '150px'\n  },\n  {\n    title: '阿里离项原因',\n    dataIndex: 'entryp',\n    width: '150px'\n  },\n  {\n    title: '阿里离项类型',\n    dataIndex: 'onepost',\n    width: '150px'\n  },\n  {\n    title: '业务线反馈离职原因',\n    dataIndex: 'twopost',\n    width: '150px'\n  },\n  {\n    title: '业务线反馈离职类型',\n    dataIndex: 'threepost',\n    width: '150px'\n  },\n  {\n    title: '业务线反馈离职分类',\n    dataIndex: 'hierarchy',\n    width: '150px'\n  },\n  {\n    title: '离职提出时间',\n    dataIndex: 'direction',\n    width: '150px'\n  },\n  {\n    title: '离职生效日',\n    dataIndex: 'frame',\n    width: '150px'\n  },\n  {\n    title: '离职时状态',\n    dataIndex: 'careergroup',\n    width: '150px'\n  },\n  {\n    title: 'IPSA离职原因',\n    dataIndex: 'businessunit',\n    width: '150px'\n  },\n  {\n    title: 'HR三月后离职分类',\n    dataIndex: 'entryname',\n    width: '150px'\n  },\n  {\n    title: 'HR一月后离职类型',\n    dataIndex: 'business',\n    width: '150px'\n  },\n  {\n    title: 'HR一月后沟通离职原因',\n    dataIndex: 'projecttype',\n    width: '150px'\n  }\n];\n\nexport const weekAnalysisColumns = [\n  {\n    title: '统计周期',\n    dataIndex: 'statisticsPeriod',\n    align: 'center'\n  },\n  {\n    title: '集团',\n    dataIndex: 'groupName',\n    align: 'center'\n  },\n  {\n    title: '入职',\n    children: [\n      {\n        title: '人数',\n        dataIndex: 'joinTotal',\n        align: 'center'\n      },\n      {\n        title: '本科',\n        dataIndex: 'undergradJoinTotal',\n        align: 'center'\n      }\n    ]\n  },\n  {\n    title: '离职',\n    children: [\n      {\n        title: '人数',\n        dataIndex: 'leaveTotal',\n        align: 'center'\n      },\n      {\n        title: '本科',\n        dataIndex: 'undergradLeaveTotal',\n        align: 'center'\n      },\n      {\n        title: '主动离职',\n        dataIndex: 'initiativeLeaveTotal',\n        align: 'center'\n      },\n      {\n        title: '被动离职',\n        dataIndex: 'passiveLeaveTotal',\n        align: 'center'\n      }\n    ]\n  }\n];\n\nexport const generalTableColumns = [\n  {\n    title: 'BU',\n    dataIndex: 'ipsaBuDeptName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '部门',\n    dataIndex: 'ipsaDeptName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '姓名',\n    dataIndex: 'empName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '软通工号',\n    dataIndex: 'empNo',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '阿里工号',\n    dataIndex: 'aliNo',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '性别',\n    dataIndex: 'gender',\n    width: '50px',\n    render: (text, record) => {\n      switch (text) {\n        case 1:\n          return <span>男</span>;\n        case 0:\n          return <span>女</span>;\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '出生日期',\n    dataIndex: 'birthday',\n    width: '150px',\n    render: (text, record) => {\n      return <span>{text ? moment(text).format('YYYY-MM-DD') : ''}</span>;\n    }\n  },\n  {\n    title: '入职日期',\n    dataIndex: 'joiningDay',\n    width: '150px',\n    render: (text, record) => {\n      return <span>{text ? moment(text).format('YYYY-MM-DD') : ''}</span>;\n    }\n  },\n  {\n    title: '转正日期',\n    dataIndex: 'correctionTime',\n    width: '150px',\n    render: (text, record) => {\n      return <span>{text ? moment(text).format('YYYY-MM-DD') : ''}</span>;\n    }\n  },\n  {\n    title: '通用职位',\n    dataIndex: 'ipsaPostName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: 'Grade代码',\n    dataIndex: 'ipsaGradeName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '是否在职',\n    dataIndex: 'onJob',\n    width: '90px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>离职</span>;\n        case 1:\n          return <span>在职</span>;\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '人员性质',\n    dataIndex: 'empProperty',\n    width: '100px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>正式员工</span>;\n        case 1:\n          return <span>试用期</span>;\n        case 2:\n          return <span>实习期</span>;\n        case 3:\n          return <span>兼职员工</span>;\n\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '直属上级',\n    dataIndex: 'directSuperiorName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '交付经理',\n    dataIndex: 'deliveryManagerName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '毕业学校',\n    dataIndex: 'graduatedUniversities',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '专业',\n    dataIndex: 'majorName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '学历',\n    dataIndex: 'educationCode',\n    width: '100px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>高中</span>;\n        case 1:\n          return <span>中专</span>;\n        case 2:\n          return <span>大专</span>;\n        case 3:\n          return <span>本科</span>;\n        case 4:\n          return <span>硕士</span>;\n        case 5:\n          return <span>博士</span>;\n        case 6:\n          return <span>博士后</span>;\n        case 7:\n          return <span>院士</span>;\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '是否统招',\n    dataIndex: 'uniformFlag',\n    width: '100px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>非</span>;\n        case 1:\n          return <span>是</span>;\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '入项时间',\n    dataIndex: 'joiningProjTime',\n    width: '100px',\n    render: (text, record) => {\n      return <span>{text ? moment(text).format('YYYY-MM-DD') : ''}</span>;\n    }\n  },\n  {\n    title: '一类岗位',\n    dataIndex: 'firstCategoryName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '二类岗位',\n    dataIndex: 'secondCategoryName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '三类岗位',\n    dataIndex: 'thirdJobName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '层级',\n    dataIndex: 'aliGradeCodeName',\n    width: '80px'\n  },\n  {\n    title: '技术方向',\n    dataIndex: 'techDirection',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '框架',\n    dataIndex: 'aliFrameName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '事业群',\n    dataIndex: 'careerGroupName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '事业群本部',\n    dataIndex: 'groupDeptName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '事业部',\n    dataIndex: 'careerDeptName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '阿里部门',\n    dataIndex: 'deptName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '项目名称',\n    dataIndex: 'projectName',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '业务线名称',\n    dataIndex: 'businessLine',\n    width: '100px',\n    onCell: () => {\n      return {\n        style: {\n          maxWidth: 100,\n          overflow: 'hidden',\n          whiteSpace: 'nowrap',\n          textOverflow: 'ellipsis',\n          cursor: 'pointer'\n        }\n      };\n    },\n    render: text => (\n      <Tooltip placement=\"topLeft\" title={text}>\n        {text}\n      </Tooltip>\n    )\n  },\n  {\n    title: '项目类型',\n    dataIndex: 'projetType',\n    width: '80px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>FP</span>;\n\n        case 1:\n          return <span>TM</span>;\n\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '项目时长',\n    dataIndex: 'projetDurationType',\n    width: '80px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>短期</span>;\n\n        case 1:\n          return <span>长期</span>;\n\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '是否IDU',\n    dataIndex: 'iduFlag',\n    width: '70px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>否</span>;\n\n        case 1:\n          return <span>是</span>;\n\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '是否TL',\n    dataIndex: 'tlFlag',\n    width: '70px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>否</span>;\n\n        case 1:\n          return <span>是</span>;\n\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '工作城市',\n    dataIndex: 'workCityName',\n    width: '100px'\n  },\n  {\n    title: '办公场地',\n    dataIndex: 'workAddress',\n    width: '100px'\n  },\n  {\n    title: '资源状态',\n    dataIndex: 'resourceStatus',\n    width: '80px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>闲置</span>;\n\n        case 1:\n          return <span>在岗</span>;\n\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '是否骨干',\n    dataIndex: 'backboneFlag',\n    width: '70px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>否</span>;\n\n        case 1:\n          return <span>是</span>;\n\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '是否收费',\n    dataIndex: 'chargeFlag',\n    width: '70px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>否</span>;\n\n        case 1:\n          return <span>是</span>;\n\n        default:\n          break;\n      }\n    }\n  },\n  {\n    title: '备注',\n    dataIndex: 'projectRemark',\n    width: '150px'\n  },\n  {\n    title: '离项时间',\n    dataIndex: 'leaveProjTime',\n    width: '100px',\n    render: (text, record) => {\n      return <span>{text ? moment(text).format('YYYY-MM-DD') : ''}</span>;\n    }\n  },\n  {\n    title: '离项原因',\n    dataIndex: 'leaveProjReasonName',\n    width: '100px'\n  },\n  {\n    title: '离项类型',\n    dataIndex: 'leaveProjType',\n    width: '100px',\n    render: (text, record) => {\n      switch (text) {\n        case 0:\n          return <span>被动</span>;\n\n        case 1:\n          return <span>主动</span>;\n\n        default:\n          break;\n      }\n    }\n  }\n];\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Upload,\n  Modal,\n  Form,\n  Icon,\n  Input,\n  Select,\n  message\n} from 'antd';\nimport './educModal.less';\nimport { actionCreators } from '../store';\nimport { educationList } from '../../../utils/tableTitle.config.js';\nimport {\n  educationCodeEnum,\n  uniformFlagEnum,\n  httAddress\n} from '../../../utils/optionEnum';\nconst { Option } = Select;\n\n@connect(state => state.educ, actionCreators)\nclass EducationModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      previewVisible: false,\n      previewImage: ''\n    };\n  }\n  handleCancel = () => {\n    const { changeEducationVisible } = this.props;\n    changeEducationVisible({\n      educVisible: false,\n      record: {},\n      imageUrl: []\n    });\n  };\n\n  // 对输入框进行校验\n  basicFormRules = key => {\n    return [{ required: true, message: '不能为空' }];\n  };\n\n  // 根据不同的信息渲染不同的输入框\n  baseFormInput = key => {\n    const { majorList } = this.props;\n    if (key === 'majorCode') {\n      return (\n        <Select>\n          {majorList.map(item => {\n            //专业下拉列表\n            return (\n              <Option key={item.id} value={item.id}>\n                {item.label}\n              </Option>\n            );\n          })}\n        </Select>\n      );\n    }\n\n    if (key === 'educationCode') {\n      return (\n        <Select>\n          {educationCodeEnum.map(item => {\n            //学位下拉列表\n            return (\n              <Option key={item.key} value={item.key}>\n                {item.label}\n              </Option>\n            );\n          })}\n        </Select>\n      );\n    }\n\n    if (key === 'uniformFlag') {\n      return (\n        <Select>\n          {uniformFlagEnum.map(item => {\n            //统招列表\n            return (\n              <Option key={item.key} value={item.key}>\n                {item.label}\n              </Option>\n            );\n          })}\n        </Select>\n      );\n    }\n    return <Input />;\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.educVisible) {\n      this.props.form.resetFields();\n    }\n  }\n\n  handleEducationSubmit = () => {\n    this.props.form.validateFields((err, values) => {\n      const {\n        educRecord,\n        updateEducationRecordInfoById,\n        imageUrl\n      } = this.props;\n      let newfiledID = '';\n      for (let i = 0, len = imageUrl.length; i < len; i++) {\n        newfiledID += imageUrl[i].fileId\n          ? imageUrl[i].fileId + '$'\n          : imageUrl[i].response.data.fileId + '$';\n      }\n      if (newfiledID.substring(newfiledID.length - 1) === '$') {\n        newfiledID = newfiledID.substring(0, newfiledID.length - 1);\n      }\n      if (!err) {\n        if (!newfiledID) {\n          message.error('证据必须上传');\n          return;\n        }\n        const arg0 = {\n          recruitmentUserId: educRecord.recruitmentUserId,\n          majorCode: values.majorCode,\n          recruitmentUserName: educRecord.recruitmentUserName,\n          graduatedUniversities: values.graduatedUniversities,\n          educationCode: values.educationCode,\n          uniformFlag: values.uniformFlag,\n          avatarIdPath: newfiledID,\n          id: educRecord.id\n        };\n        updateEducationRecordInfoById(arg0);\n      }\n    });\n  };\n\n  //上传图片\n  handleChangeFile = ({ file, fileList }) => {\n    const { changeEducationVisible, educRecord, imageUrl } = this.props;\n\n    if (file && file.status === 'done' && file.response.success) {\n      if (file.response.data) {\n        const newImageUrl = [];\n        imageUrl.forEach(item => {\n          if (item.response) {\n            newImageUrl.push({\n              uid: item.response.data.fileId,\n              name: 'image.png',\n              status: 'done',\n              url: httAddress + item.response.data.url\n            });\n          }\n          newImageUrl.push(item);\n        });\n        changeEducationVisible({\n          educVisible: true,\n          imageUrl,\n          record: educRecord,\n          fileId: newImageUrl\n        });\n      } else {\n        message.error(\n          '上传图片失败' + file.response.message && file.response.message\n        );\n      }\n    }\n    if (file && file.status === 'done' && !file.response.success) {\n      message.error(\n        '上传图片失败' + file.response.message && file.response.message\n      );\n    }\n    if (file && file.status === 'error' && file.error.status === 401) {\n      message.error('上传失败，请重新登录');\n    }\n\n    changeEducationVisible({\n      educVisible: true,\n      imageUrl: fileList,\n      record: educRecord\n      // fileId: file.response.data.fileId\n    });\n  };\n\n  handlePreview = file => {\n    console.log('handlePreviewfile', file);\n  };\n\n  render() {\n    const { educVisible, educRecord, imageUrl } = this.props;\n    const { getFieldDecorator } = this.props.form;\n    const token = localStorage.getItem('token');\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    return (\n      <div className=\"basic-modal\">\n        <Modal\n          title=\"修改学历信息\"\n          visible={educVisible}\n          onOk={this.handleEducationSubmit}\n          onCancel={this.handleCancel}\n          className=\"basic-add-modal\"\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Form\n            {...formItemLayout}\n            onSubmit={this.handleEducationSubmit}\n            className=\"basic-form\"\n          >\n            {educationList.map((item, index) => {\n              return (\n                <Form.Item label={item.title} key={item.dataIndex}>\n                  {getFieldDecorator(item.dataIndex, {\n                    initialValue: educRecord[item.dataIndex],\n                    rules: this.basicFormRules(item.dataIndex)\n                  })(this.baseFormInput(item.dataIndex))}\n                </Form.Item>\n              );\n            })}\n            <Row>\n              <Col style={{ marginRight: '10px', textAlign: 'right' }} span={6}>\n                证据：\n              </Col>\n              <Col span={16}>\n                <Upload\n                  accept=\"image/png,image/jpeg\"\n                  method=\"post\"\n                  headers={{\n                    Authorization: 'Bearer ' + token\n                  }}\n                  listType=\"picture-card\"\n                  className=\"avatar-uploader\"\n                  // showUploadList={false}\n                  fileList={imageUrl}\n                  action=\"/api/file/uploadFile.json\"\n                  onChange={this.handleChangeFile.bind(this)}\n                  onPreview={this.handlePreview.bind(this)}\n                >\n                  {imageUrl.length >= 3 ? null : uploadButton}\n                </Upload>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(EducationModal);\n","import React, { Component } from 'react';\nimport {\n  Row,\n  Col,\n  Button,\n  Table,\n  Form,\n  Select,\n  Input,\n  Pagination,\n  Upload,\n  message,\n  Tooltip\n} from 'antd';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { actionCreators } from './store';\nimport EducationModal from './components/EducationModal.jsx';\nimport {\n  uniformFlagEnum,\n  educationCodeEnum,\n  httAddress\n} from '../../utils/optionEnum';\nimport fetch from '../../utils/axios.config';\nimport './index.less';\nconst { Search } = Input;\nconst { Option } = Select;\n\n@connect(state => state.educ, actionCreators)\nclass EducationInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permission: ''\n    };\n    this.columns = [\n      {\n        title: 'BU',\n        dataIndex: 'ipsaBuDeptName',\n        width: '15%'\n      },\n      {\n        title: '部门',\n        dataIndex: 'ipsaDeptName',\n        width: '15%'\n      },\n      {\n        title: '姓名',\n        dataIndex: 'empName',\n        width: '10%'\n      },\n      {\n        title: '软通工号',\n        dataIndex: 'empNo',\n        width: '10%'\n      },\n      {\n        title: '毕业学校',\n        dataIndex: 'graduatedUniversities',\n        width: '15%'\n      },\n      {\n        title: '专业',\n        dataIndex: 'majorName',\n        width: '15%'\n      },\n      {\n        title: '学历',\n        dataIndex: 'educationCode',\n        width: '6%',\n        render: (text, record) => {\n          switch (text) {\n            case 0:\n              return <span>高中</span>;\n            case 1:\n              return <span>中专</span>;\n            case 2:\n              return <span>大专</span>;\n            case 3:\n              return <span>本科</span>;\n            case 4:\n              return <span>硕士</span>;\n            case 5:\n              return <span>博士</span>;\n            case 6:\n              return <span>博士后</span>;\n            case 7:\n              return <span>院士</span>;\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '是否统招',\n        dataIndex: 'uniformFlag',\n        width: '9%',\n        render: (text, record) => {\n          switch (text) {\n            case 0:\n              return <span>非</span>;\n            case 1:\n              return <span>是</span>;\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '操作',\n        dataIndex: 'action',\n        width: '5%',\n        render: (text, record) => {\n          const { permission } = this.state;\n          return (\n            <Button\n              disabled={\n                (permission && permission === 'recruitmentConsultant') ||\n                permission === 'admin' ||\n                permission === 'hr'\n                  ? false\n                  : true\n              }\n              onClick={this.handleShowModal.bind(this, record)}\n            >\n              编辑\n            </Button>\n          );\n        }\n      }\n    ];\n  }\n\n  //打开编辑框\n  handleShowModal = record => {\n    const { changeEducationVisible, dictInfo } = this.props;\n    const imgUrl = [];\n    record.avatar &&\n      record.avatar.length &&\n      record.avatar.forEach(item => {\n        if (item) {\n          imgUrl.push({\n            fileId: item.id,\n            uid: item.id,\n            name: 'image.png',\n            status: 'done',\n            url: httAddress + item.url\n          });\n        }\n      });\n    changeEducationVisible({\n      educVisible: true,\n      record,\n      imageUrl: imgUrl,\n      fileId: ''\n    });\n    dictInfo();\n  };\n\n  componentDidMount() {\n    fetch.get('/api/user/queryUserPermission.json').then(res => {\n      if (res && res.success) {\n        const { data } = res;\n        const permission = data[0].permission;\n        this.setState({\n          permission\n        });\n      }\n    });\n    const { deptInfoBu, queryEducationRecordInfoList } = this.props;\n    const educStatusFlag = localStorage.getItem('educStatusFlag');\n    queryEducationRecordInfoList({\n      currentPage: 1,\n      pageSize: 10,\n      statusFlag: educStatusFlag\n    });\n    deptInfoBu();\n  }\n\n  //BU列表\n  handleChangeBuDeptId = value => {\n    const {\n      deptInfo,\n      changeDepList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    if (value) {\n      const newCurrentPageData = JSON.parse(JSON.stringify(currentPageData));\n      newCurrentPageData.ipsaDeptId = '';\n      changeCurrentPageData(newCurrentPageData);\n      deptInfo(value);\n      this.props.form.resetFields();\n    } else {\n      changeDepList([]);\n    }\n  };\n\n  //分页查询\n  handleTableChange = page => {\n    const {\n      queryEducationRecordInfoList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    const educStatusFlag = localStorage.getItem('educStatusFlag');\n    const arg0 = {\n      currentPage: page,\n      pageSize: 10,\n      educationCode: currentPageData.educationCode,\n      uniformFlag: currentPageData.uniformFlag,\n      ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n      ipsaDeptId: currentPageData.ipsaDeptId,\n      keyword: currentPageData.keyword,\n      statusFlag: educStatusFlag\n    };\n    changeCurrentPageData(arg0);\n    queryEducationRecordInfoList(arg0);\n  };\n\n  //导入数据提醒\n  handleChangeFile = ({ file, fileList }) => {\n    const { queryEducationRecordInfoList } = this.props;\n    if (file && file.status === 'done' && file.response.success) {\n      message.success(\n        file.response.message + '，共导入' + file.response.data + '条数据'\n      );\n      queryEducationRecordInfoList({\n        currentPage: 1,\n        pageSize: 20\n      });\n    } else {\n      if (file && file.status === 'done' && !file.response.success) {\n        message.error('导入失败:' + file.response.message);\n      }\n      if (file && file.status === 'error') {\n        if (file.error.status === 401) {\n          message.error('导入失败，请重新登录');\n        } else {\n          message.error('导入失败:' + file.response.message);\n        }\n      }\n    }\n  };\n\n  //上传前的文件校验\n  handleBeforeUpload = (file, fileList) => {\n    if (\n      file &&\n      file.type !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      message.error('请上传以.xlsx为后缀的Excel文件');\n      return;\n    }\n  };\n\n  //导出excel\n  handleDownload = () => {\n    const token = localStorage.getItem('token');\n    const { currentPageData } = this.props;\n    const educStatusFlag = localStorage.getItem('educStatusFlag');\n    axios({\n      method: 'get',\n      url: '/api/education/download',\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      params: {\n        educationCode: currentPageData.educationCode,\n        uniformFlag: currentPageData.uniformFlag,\n        ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n        ipsaDeptId: currentPageData.ipsaDeptId,\n        keyword: currentPageData.keyword,\n        statusFlag: educStatusFlag\n      },\n      responseType: 'blob'\n    })\n      .then(res => {\n        if (res.status === 200) {\n          const blob = new Blob([res.data], {\n            type:\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'\n          });\n          const url = window.URL.createObjectURL(blob);\n          const aLink = document.createElement('a');\n          aLink.style.display = 'none';\n          aLink.href = url;\n          aLink.setAttribute('download', 'excel.xlsx');\n          document.body.appendChild(aLink);\n          aLink.click();\n          document.body.removeChild(aLink); //下载完成移除元素\n          window.URL.revokeObjectURL(url);\n          message.success('导出成功');\n        } else {\n          message.error('导出失败');\n        }\n      })\n      .catch(err => {\n        message.error('导出失败');\n      });\n  };\n\n  //搜索框调用查询列表\n  handleSearchInput = value => {\n    const { queryEducationRecordInfoList, changeCurrentPageData } = this.props;\n    this.props.form.validateFields((err, values) => {\n      const arg0 = {\n        educationCode: '',\n        uniformFlag: '',\n        ipsaBuDeptId: '',\n        ipsaDeptId: '',\n        keyword: value,\n        currentPage: 1,\n        pageSize: 10\n      };\n      changeCurrentPageData(arg0);\n      localStorage.setItem('educStatusFlag', '');\n      queryEducationRecordInfoList(arg0);\n      this.props.form.resetFields();\n    });\n  };\n\n  //修改搜索框的值\n  handleChangeSearchInput = value => {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      keyword: value.target.value,\n      educationCode: '',\n      uniformFlag: '',\n      ipsaBuDeptId: '',\n      ipsaDeptId: ''\n    };\n    changeCurrentPageData(arg0);\n  };\n\n  //查询按钮\n  handleSearchList = event => {\n    event.preventDefault();\n    const { queryEducationRecordInfoList, changeCurrentPageData } = this.props;\n    this.props.form.validateFields((err, values) => {\n      const arg0 = {\n        educationCode: values.educationCode,\n        uniformFlag: values.uniformFlag,\n        ipsaBuDeptId: values.ipsaBuDeptId,\n        ipsaDeptId: values.ipsaDeptId,\n        keyword: '',\n        currentPage: 1,\n        pageSize: 10\n      };\n      changeCurrentPageData(arg0);\n      localStorage.setItem('educStatusFlag', '');\n      queryEducationRecordInfoList(arg0);\n    });\n  };\n\n  //组件销毁清空搜索\n  componentWillUnmount() {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      keyword: '',\n      educationCode: '',\n      uniformFlag: '',\n      ipsaBuDeptId: '',\n      ipsaDeptId: ''\n    };\n    changeCurrentPageData(arg0);\n    localStorage.setItem('educStatusFlag', '');\n  }\n  render() {\n    const columns = this.columns;\n    const { buList, depList, educList, total, currentPageData } = this.props;\n    const { permission } = this.state;\n    const token = localStorage.getItem('token');\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"education-info\">\n        <Row style={{ padding: '20px' }}>\n          <Col className=\"educ-operator-set\" span={24}>\n            <Row>\n              <Col span={8}>\n                <Search\n                  className=\"educ-seatch-input\"\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => this.handleSearchInput(value)}\n                  onChange={value => this.handleChangeSearchInput(value)}\n                  enterButton\n                  value={currentPageData.keyword}\n                />\n              </Col>\n              <Col span={16} style={{ textAlign: 'right' }}>\n                <div className=\"educ-upload-btn\" style={{ marginRight: '7%' }}>\n                  <Upload\n                    disabled={\n                      (permission && permission === 'recruitmentConsultant') ||\n                      permission === 'admin' ||\n                      permission === 'hr'\n                        ? false\n                        : true\n                    }\n                    style={{ marginRight: '7%' }}\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    action=\"/api/education/import/education.json\"\n                    method=\"post\"\n                    headers={{\n                      Authorization: 'Bearer ' + token\n                    }}\n                    showUploadList={false}\n                    onChange={this.handleChangeFile.bind(this)}\n                    beforeUpload={this.handleBeforeUpload.bind(this)}\n                  >\n                    <Tooltip title=\"支持导入.xlsx文件\">\n                      <Button\n                        disabled={\n                          (permission &&\n                            permission === 'recruitmentConsultant') ||\n                          permission === 'admin' ||\n                          permission === 'hr'\n                            ? false\n                            : true\n                        }\n                        type=\"primary\"\n                      >\n                        导入\n                      </Button>\n                    </Tooltip>\n                  </Upload>\n                </div>\n                <div className=\"educ-upload-btn\">\n                  <Button\n                    disabled={\n                      (permission && permission === 'recruitmentConsultant') ||\n                      permission === 'admin' ||\n                      permission === 'hr'\n                        ? false\n                        : true\n                    }\n                    onClick={this.handleDownload.bind(this)}\n                    type=\"primary\"\n                  >\n                    导出\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '30px' }} span={24}>\n            <Row>\n              <Form>\n                <Col span={5}>\n                  <Form.Item\n                    labelCol={{ span: 3 }}\n                    wrapperCol={{ span: 16 }}\n                    label=\"BU\"\n                    hasFeedback\n                  >\n                    {getFieldDecorator('ipsaBuDeptId', {\n                      initialValue: currentPageData.ipsaBuDeptId\n                    })(\n                      <Select\n                        allowClear\n                        onChange={this.handleChangeBuDeptId.bind(this)}\n                      >\n                        {buList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={6}>\n                  <Form.Item\n                    labelCol={{ span: 4 }}\n                    wrapperCol={{ span: 14 }}\n                    label=\"部门\"\n                    hasFeedback\n                  >\n                    {getFieldDecorator('ipsaDeptId', {\n                      initialValue: currentPageData.ipsaDeptId\n                    })(\n                      <Select allowClear>\n                        {depList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item\n                    labelCol={{ span: 4 }}\n                    wrapperCol={{ span: 12 }}\n                    label=\"学历\"\n                    hasFeedback\n                  >\n                    {getFieldDecorator('educationCode', {\n                      initialValue: currentPageData.educationCode\n                    })(\n                      <Select allowClear>\n                        {educationCodeEnum.map(item => {\n                          return (\n                            <Option key={item.key} value={item.key}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={7}>\n                  <Form.Item\n                    labelCol={{ span: 7 }}\n                    wrapperCol={{ span: 9 }}\n                    label=\"是否统招\"\n                    hasFeedback\n                  >\n                    {getFieldDecorator('uniformFlag', {\n                      initialValue: currentPageData.uniformFlag\n                    })(\n                      <Select allowClear>\n                        {uniformFlagEnum.map(item => {\n                          return (\n                            <Option key={item.key} value={item.key}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={2} style={{ textAlign: 'right' }}>\n                  <Button\n                    type=\"primary\"\n                    style={{\n                      marginTop: '3px',\n                      marginRight: '15%'\n                    }}\n                    onClick={this.handleSearchList.bind(this)}\n                  >\n                    查询\n                  </Button>\n                </Col>\n              </Form>\n            </Row>\n          </Col>\n          <Col span={24} className=\"educ-content-table\">\n            <Table\n              rowKey={(record, index) => index}\n              columns={columns}\n              dataSource={educList}\n              pagination={false}\n            />\n          </Col>\n          <Col className=\"educ-paging\" span={24}>\n            <Pagination\n              total={total}\n              showTotal={total => `共 ${total} 条数据`}\n              current={currentPageData.currentPage}\n              onChange={page => {\n                this.handleTableChange(page);\n              }}\n            />\n          </Col>\n        </Row>\n        <EducationModal />\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(EducationInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Row, Col, Button, Select, Modal, Form, DatePicker, Input } from 'antd';\nimport './projectModal.less';\nimport { actionCreators } from '../store';\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n@connect(state => state.project, actionCreators)\nclass ProjectModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shortTime: null\n    };\n  }\n  //获取一类岗位\n  handleFocusFirstCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_1');\n  };\n\n  //获取二类岗位\n  handleFocusSecondCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_2');\n  };\n\n  //获取三类岗位\n  handleFocusThirdCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_3');\n  };\n\n  //获取层级\n  handleFocusaliGradeCode = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_level');\n  };\n\n  //获取工作城市\n  handleFocusWorkCity = () => {\n    const { dictInfo } = this.props;\n    dictInfo('work_city');\n  };\n\n  //获取项目名称\n  handleFocusProjectList = () => {\n    const { dictInfo } = this.props;\n    dictInfo('project_list');\n  };\n\n  //获取框架\n  handleFocusIframe = () => {\n    const { deptInfoIframe } = this.props;\n    const arg0 = {\n      value: '',\n      flag: 'zero'\n    };\n    deptInfoIframe(arg0);\n  };\n\n  handleChangeIftame = (value, key) => {\n    if (key) {\n      const { deptInfo } = this.props;\n      const arg0 = {\n        value: key.key,\n        flag: value\n      };\n      deptInfo(arg0);\n    }\n    if (!key) {\n      const {\n        changeCareerGroupId,\n        changeCareerDeptId,\n        changeGroupDeptId,\n        changeDeptId\n      } = this.props;\n      changeCareerGroupId([]);\n      changeCareerDeptId([]);\n      changeGroupDeptId([]);\n      changeDeptId([]);\n      this.props.form.resetFields();\n    }\n  };\n\n  handleCancel = () => {\n    const { changeProjectVisible } = this.props;\n    changeProjectVisible({\n      projectVisible: false,\n      record: {}\n    });\n    this.props.form.resetFields();\n  };\n\n  updateProjectRecordInfoById = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { projectRecord, updateProjectRecordInfoById } = this.props;\n        const projectStartTimeFormat = values.shortTime\n          ? moment(values.shortTime[0]).format('YYYY-MM-DD')\n          : '';\n        const projectEndTimeFormat = values.shortTime\n          ? moment(values.shortTime[1]).format('YYYY-MM-DD')\n          : '';\n\n        const reg = /[\\u4e00-\\u9fa5]/g;\n        const level =\n          values.aliGradeCode.label && values.aliGradeCode.label.match(reg)\n            ? values.aliGradeCode.label.match(reg).join('')\n            : '';\n        const arg0 = {\n          id: projectRecord.id,\n          aliNo: values.aliNo,\n          projectName: values.projectId.label,\n          projectId: values.projectId.key,\n          joiningProjTimeFormat: values.joiningProjTimeFormat\n            ? moment(values.joiningProjTimeFormat).format('YYYY-MM-DD')\n            : '',\n          managerId: projectRecord.managerId,\n          managerName: projectRecord.managerName,\n          firstCategoryId: values.firstCategoryId.key,\n          secondCategoryId: values.secondCategoryId.key,\n          thirdJobId: values.thirdJobId.key,\n          aliGradeCode: values.aliGradeCode.key,\n          techDirection: values.techDirection,\n          aliFrameId: values.aliFrameId.key,\n          careerGroupId: values.careerGroupId.key,\n          groupDeptId: values.groupDeptId.key,\n          careerDeptId: values.careerDeptId.key,\n          deptId: values.deptId.key,\n          businessLine:\n            values.iduFlag === 1\n              ? 'IDU-' + values.careerDeptId.label\n              : values.careerDeptId.label,\n          projetDurationType: values.projetDurationType,\n          projetType: values.projetType,\n          iduFlag: values.iduFlag,\n          tlFlag: values.tlFlag,\n          workCity: values.workCity,\n          workAddress: values.workAddress,\n          resourceStatus: values.resourceStatus,\n          backboneFlag: level === '资深' || level === '专家' ? 1 : 0,\n          chargeFlag: values.chargeFlag,\n          leaveProjReasonId: values.leaveProjReasonId,\n          leaveProjType: values.leaveProjType,\n          projectStartTimeFormat,\n          projectEndTimeFormat,\n          remark: values.remark\n        };\n        updateProjectRecordInfoById(arg0);\n      }\n    });\n  };\n\n  //选择项目时长\n  handleChangeprojetType = value => {\n    const { changeProjectVisible, projectRecord } = this.props;\n    const newRecord = JSON.parse(JSON.stringify(projectRecord));\n    newRecord.shortDate = value === 0 ? true : false;\n    changeProjectVisible({\n      projectVisible: true,\n      record: newRecord\n    });\n  };\n\n  //关闭弹框刷新表单\n  handleAfterClose = () => {\n    this.props.form.resetFields();\n  };\n\n  render() {\n    const {\n      projectVisible,\n      firstCategoryidList,\n      secondCategoryidList,\n      thirdCategoryidList,\n      aliGradeCodeList,\n      workCityList,\n      newProjectList = [],\n      iframeList = [],\n      careerGroupList = [],\n      groupdeptList = [],\n      careerdepList = [],\n      deptIdList = [],\n      projectRecord\n    } = this.props;\n    const {\n      projectId,\n      firstCategoryId,\n      secondCategoryId,\n      thirdJobId,\n      aliGradeCode,\n      aliFrameId,\n      groupDeptId,\n      careerDeptId,\n      deptId,\n      careerGroupId\n    } = projectRecord;\n\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    return (\n      <div className=\"project-modal\">\n        <Modal\n          title=\"编辑项目信息\"\n          visible={projectVisible}\n          onOk={this.updateProjectRecordInfoById}\n          onCancel={this.handleCancel}\n          afterClose={this.handleAfterClose}\n          className=\"project-add-modal\"\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Row>\n            <Form\n              {...formItemLayout}\n              onSubmit={this.handleSubmit}\n              className=\"project-form\"\n            >\n              <Col>\n                <Form.Item label=\"阿里工号\" hasFeedback>\n                  {getFieldDecorator('aliNo', {\n                    initialValue: projectRecord.aliNo\n                      ? projectRecord.aliNo\n                      : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(<Input />)}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"入项时间\" hasFeedback>\n                  {getFieldDecorator('joiningProjTimeFormat', {\n                    initialValue: projectRecord.joiningProjTime\n                      ? moment(projectRecord.joiningProjTime)\n                      : null,\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <DatePicker\n                      showToday={false}\n                      placeholder=\"请选择入项时间\"\n                      // onChange={this.onChange.bind(this)}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"一类岗位\" hasFeedback>\n                  {getFieldDecorator('firstCategoryId', {\n                    initialValue:\n                      firstCategoryId && firstCategoryId.key\n                        ? firstCategoryId\n                        : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select\n                      allowClear\n                      labelInValue\n                      onFocus={this.handleFocusFirstCategoryId.bind(this)}\n                    >\n                      {firstCategoryidList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"二类岗位\" hasFeedback>\n                  {getFieldDecorator('secondCategoryId', {\n                    initialValue:\n                      secondCategoryId && secondCategoryId.key\n                        ? secondCategoryId\n                        : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select\n                      allowClear\n                      labelInValue\n                      onFocus={this.handleFocusSecondCategoryId.bind(this)}\n                    >\n                      {secondCategoryidList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"三类岗位\" hasFeedback>\n                  {getFieldDecorator('thirdJobId', {\n                    initialValue:\n                      thirdJobId && thirdJobId.key ? thirdJobId : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select\n                      allowClear\n                      labelInValue\n                      onFocus={this.handleFocusThirdCategoryId.bind(this)}\n                    >\n                      {thirdCategoryidList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"层级\" hasFeedback>\n                  {getFieldDecorator('aliGradeCode', {\n                    initialValue:\n                      aliGradeCode && aliGradeCode.key ? aliGradeCode : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select\n                      allowClear\n                      labelInValue\n                      onFocus={this.handleFocusaliGradeCode.bind(this)}\n                    >\n                      {aliGradeCodeList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"技术方向\" hasFeedback>\n                  {getFieldDecorator('techDirection', {\n                    initialValue: projectRecord.techDirection\n                      ? projectRecord.techDirection\n                      : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(<Input />)}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"框架\" hasFeedback>\n                  {getFieldDecorator('aliFrameId', {\n                    initialValue:\n                      aliFrameId && aliFrameId.key ? aliFrameId : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select\n                      labelInValue\n                      onFocus={this.handleFocusIframe.bind(this)}\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'aliFrameId'\n                      )}\n                    >\n                      {Array.isArray(iframeList) &&\n                        iframeList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"事业群\" hasFeedback>\n                  {getFieldDecorator('careerGroupId', {\n                    initialValue:\n                      careerGroupId && careerGroupId.key ? careerGroupId : ''\n                  })(\n                    <Select\n                      labelInValue\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'careerGroupId'\n                      )}\n                    >\n                      {Array.isArray(careerGroupList) &&\n                        careerGroupList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"事业群本部\" hasFeedback>\n                  {getFieldDecorator('groupDeptId', {\n                    initialValue:\n                      groupDeptId && groupDeptId.key ? groupDeptId : ''\n                  })(\n                    <Select\n                      labelInValue\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'groupDeptId'\n                      )}\n                    >\n                      {Array.isArray(groupdeptList) &&\n                        groupdeptList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"事业部\" hasFeedback>\n                  {getFieldDecorator('careerDeptId', {\n                    initialValue:\n                      careerDeptId && careerDeptId.key ? careerDeptId : ''\n                  })(\n                    <Select\n                      labelInValue\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'careerDeptId'\n                      )}\n                    >\n                      {Array.isArray(careerdepList) &&\n                        careerdepList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"阿里部门\" hasFeedback>\n                  {getFieldDecorator('deptId', {\n                    initialValue: deptId && deptId.key ? deptId : ''\n                  })(\n                    <Select labelInValue>\n                      {Array.isArray(deptIdList) &&\n                        deptIdList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"项目名称\" hasFeedback>\n                  {getFieldDecorator('projectId', {\n                    initialValue: projectId && projectId.key ? projectId : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select\n                      labelInValue\n                      onFocus={this.handleFocusProjectList.bind(this)}\n                    >\n                      {Array.isArray(newProjectList) &&\n                        newProjectList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item label=\"项目类型\" hasFeedback>\n                  {getFieldDecorator('projetType', {\n                    initialValue:\n                      projectRecord.projetType || projectRecord.projetType === 0\n                        ? projectRecord.projetType\n                        : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>FP</Option>\n                      <Option value={1}>TM</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n\n              <Col>\n                <Form.Item label=\"项目时长\" hasFeedback>\n                  {getFieldDecorator('projetDurationType', {\n                    initialValue:\n                      projectRecord.projetDurationType ||\n                      projectRecord.projetDurationType === 0\n                        ? projectRecord.projetDurationType\n                        : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select allowClear onChange={this.handleChangeprojetType}>\n                      <Option value={0}>短期</Option>\n                      <Option value={1}>长期</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              {projectRecord.shortDate ? (\n                <Col>\n                  <Form.Item label=\"短期起始\" hasFeedback>\n                    {getFieldDecorator('shortTime', {\n                      initialValue:\n                        projectRecord.startTime && projectRecord.endTime\n                          ? [\n                              moment(projectRecord.startTime),\n                              moment(projectRecord.endTime)\n                            ]\n                          : null\n                    })(\n                      <RangePicker\n                        placeholder={['起始日期', '结束日期']}\n                        ranges={{\n                          当天: [moment(), moment()],\n                          本月: [\n                            moment().startOf('month'),\n                            moment().endOf('month')\n                          ]\n                        }}\n                      />\n                    )}\n                  </Form.Item>\n                </Col>\n              ) : (\n                ''\n              )}\n              <Col>\n                <Form.Item label=\"是否IDU\" hasFeedback>\n                  {getFieldDecorator('iduFlag', {\n                    initialValue:\n                      projectRecord.iduFlag || projectRecord.iduFlag === 0\n                        ? projectRecord.iduFlag\n                        : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>否</Option>\n                      <Option value={1}>是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"是否TL\" hasFeedback>\n                  {getFieldDecorator('tlFlag', {\n                    initialValue:\n                      projectRecord.tlFlag || projectRecord.tlFlag === 0\n                        ? projectRecord.tlFlag\n                        : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>否</Option>\n                      <Option value={1}>是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item\n                  label=\"工作城市\"\n                  hasFeedback\n                  onFocus={this.handleFocusWorkCity.bind(this)}\n                >\n                  {getFieldDecorator('workCity', {\n                    initialValue: projectRecord.workCity\n                      ? projectRecord.workCity\n                      : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select allowClear>\n                      {workCityList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"办公场地\" hasFeedback>\n                  {getFieldDecorator('workAddress', {\n                    initialValue: projectRecord.workAddress\n                      ? projectRecord.workAddress\n                      : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(<Input />)}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"资源状态\" hasFeedback>\n                  {getFieldDecorator('resourceStatus', {\n                    initialValue:\n                      projectRecord.resourceStatus ||\n                      projectRecord.resourceStatus === 0\n                        ? projectRecord.resourceStatus\n                        : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>闲置</Option>\n                      <Option value={1}>在岗</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"是否收费\" hasFeedback>\n                  {getFieldDecorator('chargeFlag', {\n                    initialValue:\n                      projectRecord.chargeFlag || projectRecord.chargeFlag === 0\n                        ? projectRecord.chargeFlag\n                        : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>否</Option>\n                      <Option value={1}>是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col>\n                <Form.Item label=\"备注\" hasFeedback>\n                  {getFieldDecorator('remark', {\n                    initialValue: projectRecord.remark\n                      ? projectRecord.remark\n                      : ''\n                  })(<Input />)}\n                </Form.Item>\n              </Col>\n            </Form>\n          </Row>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ProjectModal);\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Select, Modal, Form, DatePicker, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { actionCreators } from '../store';\n\nconst { Option } = Select;\n\n@connect(state => state.project, actionCreators)\nclass ProjectLeaveModal extends Component {\n  //获取离项原因\n  handleFocusLeaveProj = () => {\n    const { dictInfo } = this.props;\n    dictInfo('leave_proj_reason');\n  };\n\n  handleCancel = () => {\n    const { changeLeaveProjVisible } = this.props;\n    changeLeaveProjVisible({\n      leaveProjVisible: false,\n      record: {}\n    });\n  };\n\n  handleOk = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { leaveProjRecord, updateProjectRecordInfoById } = this.props;\n        const arg0 = {\n          id: leaveProjRecord.id,\n          leaveProjTimeFormat: values.leaveProjTimeFormat\n            ? moment(values.leaveProjTimeFormat).format('YYYY-MM-DD')\n            : '',\n          leaveProjReasonId: values.leaveProjReasonId.key,\n          leaveProjType: values.leaveProjType\n        };\n        updateProjectRecordInfoById(arg0);\n      }\n    });\n  };\n\n  //关闭弹框刷新表单\n  handleAfterClose = () => {\n    this.props.form.resetFields();\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const {\n      leaveProjList = [],\n      leaveProjVisible,\n      leaveProjRecord\n    } = this.props;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const { leaveProjTime, leaveProjReasonId, leaveProjType } = leaveProjRecord;\n    return (\n      <div>\n        <Modal\n          title=\"填写离项信息\"\n          visible={leaveProjVisible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          afterClose={this.handleAfterClose}\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Row>\n            <Col>\n              <Form\n                {...formItemLayout}\n                onSubmit={this.handleSubmit}\n                className=\"project-form\"\n              >\n                <Form.Item label=\"阿里离项时间\" hasFeedback>\n                  {getFieldDecorator('leaveProjTimeFormat', {\n                    initialValue: leaveProjTime ? moment(leaveProjTime) : null,\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <DatePicker\n                      showToday={false}\n                      placeholder=\"请选择离项时间\"\n                    />\n                  )}\n                </Form.Item>\n                <Form.Item label=\"阿里离项原因\" hasFeedback>\n                  {getFieldDecorator('leaveProjReasonId', {\n                    initialValue:\n                      leaveProjReasonId && leaveProjReasonId.key\n                        ? leaveProjReasonId\n                        : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select\n                      labelInValue\n                      onFocus={this.handleFocusLeaveProj.bind(this)}\n                    >\n                      {leaveProjList.map(item => {\n                        return (\n                          <Option key={item.value} value={item.value}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n                <Form.Item label=\"阿里离项类型\" hasFeedback>\n                  {getFieldDecorator('leaveProjType', {\n                    initialValue:\n                      leaveProjType || leaveProjType === 0 ? leaveProjType : '',\n                    rules: [{ required: true, message: '不能为空' }]\n                  })(\n                    <Select allowClear>\n                      <Option value={0}>被动</Option>\n                      <Option value={1}>主动</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Form>\n            </Col>\n          </Row>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default Form.create()(ProjectLeaveModal);\n","import React from 'react';\nimport { Button, Tooltip } from 'antd';\nimport moment from 'moment';\nexport const projectColumnsFunction = (that, permission) => {\n  const projectList = [\n    {\n      title: 'BU',\n      dataIndex: 'ipsaBuDeptName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '部门',\n      dataIndex: 'ipsaDeptName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '姓名',\n      dataIndex: 'empName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '软通工号',\n      dataIndex: 'empNo',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '阿里工号',\n      dataIndex: 'aliNo',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '入项时间',\n      dataIndex: 'joiningProjTime',\n      width: '130px',\n      render: (text, record) => {\n        return <span>{text ? moment(text).format('YYYY-MM-DD') : ''}</span>;\n      }\n    },\n    {\n      title: '一类岗位',\n      dataIndex: 'firstCategoryName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '二类岗位',\n      dataIndex: 'secondCategoryName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '三类岗位',\n      dataIndex: 'thirdJobName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '层级',\n      dataIndex: 'aliGradeCodeName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '技术方向',\n      dataIndex: 'techDirection',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '框架',\n      dataIndex: 'aliFrameName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '事业群',\n      dataIndex: 'careerGroupName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '事业群本部',\n      dataIndex: 'groupDeptName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '事业部',\n      dataIndex: 'careerDeptName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '阿里部门',\n      dataIndex: 'deptName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '项目名称',\n      dataIndex: 'projectName',\n      width: '150px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 150,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '业务线名称',\n      dataIndex: 'businessLine',\n      width: '150px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 150,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '项目类型',\n      dataIndex: 'projetType',\n      width: '80px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>FP</span>;\n\n          case 1:\n            return <span>TM</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '项目时长',\n      dataIndex: 'projetDurationType',\n      width: '80px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>短期</span>;\n\n          case 1:\n            return <span>长期</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '是否IDU',\n      dataIndex: 'iduFlag',\n      width: '70px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>否</span>;\n\n          case 1:\n            return <span>是</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '是否TL',\n      dataIndex: 'tlFlag',\n      width: '70px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>否</span>;\n\n          case 1:\n            return <span>是</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '工作城市',\n      dataIndex: 'workCityName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '办公场地',\n      dataIndex: 'workAddress',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '资源状态',\n      dataIndex: 'resourceStatus',\n      width: '80px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>闲置</span>;\n\n          case 1:\n            return <span>在岗</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '是否骨干',\n      dataIndex: 'backboneFlag',\n      width: '70px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>否</span>;\n\n          case 1:\n            return <span>是</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '是否收费',\n      dataIndex: 'chargeFlag',\n      width: '70px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>否</span>;\n\n          case 1:\n            return <span>是</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '备注',\n      dataIndex: 'remark',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '离项时间',\n      dataIndex: 'leaveProjTime',\n      width: '100px',\n      render: (text, record) => {\n        return <span>{text ? moment(text).format('YYYY-MM-DD') : ''}</span>;\n      }\n    },\n    {\n      title: '离项原因',\n      dataIndex: 'leaveProjReasonName',\n      width: '100px',\n      onCell: () => {\n        return {\n          style: {\n            maxWidth: 100,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n            cursor: 'pointer'\n          }\n        };\n      },\n      render: text => (\n        <Tooltip placement=\"topLeft\" title={text}>\n          {text}\n        </Tooltip>\n      )\n    },\n    {\n      title: '离项类型',\n      dataIndex: 'leaveProjType',\n      width: '100px',\n      render: (text, record) => {\n        switch (text) {\n          case 0:\n            return <span>被动</span>;\n\n          case 1:\n            return <span>主动</span>;\n\n          default:\n            break;\n        }\n      }\n    },\n    {\n      title: '操作',\n      dataIndex: 'action',\n      width: '200px',\n      fixed: 'right',\n      render: (text, record) => {\n        const {\n          changeProjectVisible,\n          changeLeaveProjVisible,\n          deptInfo,\n          changeCareerGroupId,\n          changeCareerDeptId,\n          changeGroupDeptId,\n          changeDeptId\n        } = that.props;\n\n        return (\n          <div>\n            <Button\n              disabled={\n                (permission && permission === 'projectManage') ||\n                permission === 'admin' ||\n                permission === 'hr'\n                  ? false\n                  : true\n              }\n              onClick={() => {\n                const newRecord = JSON.parse(JSON.stringify(record));\n                newRecord.projectId = {\n                  key: record.projectId ? record.projectId : '',\n                  label: record.projectName ? record.projectName : ''\n                };\n                newRecord.firstCategoryId = {\n                  key: record.firstCategoryId ? record.firstCategoryId : '',\n                  label: record.firstCategoryName\n                    ? record.firstCategoryName\n                    : ''\n                };\n                newRecord.secondCategoryId = {\n                  key: record.secondCategoryId ? record.secondCategoryId : '',\n                  label: record.secondCategoryName\n                    ? record.secondCategoryName\n                    : ''\n                };\n                newRecord.thirdJobId = {\n                  key: record.thirdJobId ? record.thirdJobId : '',\n                  label: record.thirdJobName ? record.thirdJobName : ''\n                };\n                newRecord.aliGradeCode = {\n                  key: record.aliGradeCode ? record.aliGradeCode : '',\n                  label: record.aliGradeCodeName ? record.aliGradeCodeName : ''\n                };\n                newRecord.aliFrameId = {\n                  key: record.aliFrameId ? record.aliFrameId : '',\n                  label: record.aliFrameName ? record.aliFrameName : ''\n                };\n                newRecord.careerGroupId = {\n                  key: record.careerGroupId ? record.careerGroupId : '',\n                  label: record.careerGroupName ? record.careerGroupName : ''\n                };\n                newRecord.groupDeptId = {\n                  key: record.groupDeptId ? record.groupDeptId : '',\n                  label: record.groupDeptName ? record.groupDeptName : ''\n                };\n                newRecord.careerDeptId = {\n                  key: record.careerDeptId ? record.careerDeptId : '',\n                  label: record.careerDeptName ? record.careerDeptName : ''\n                };\n                newRecord.deptId = {\n                  key: record.deptId ? record.deptId : '',\n                  label: record.deptName ? record.deptName : ''\n                };\n\n                //打开弹框获取事业群\n                if (record.aliFrameName && record.aliFrameId) {\n                  const arg0 = {\n                    value: record.aliFrameId,\n                    flag: 'aliFrameId'\n                  };\n                  deptInfo(arg0);\n                } else {\n                  changeCareerGroupId([]);\n                }\n\n                //打开弹框获取事业群本部\n                if (record.careerGroupName && record.careerGroupId) {\n                  const arg0 = {\n                    value: record.careerGroupId,\n                    flag: 'careerGroupId'\n                  };\n                  deptInfo(arg0);\n                } else {\n                  changeGroupDeptId([]);\n                }\n\n                //打开弹框获取事业部\n                if (record.groupDeptName && record.groupDeptId) {\n                  const arg0 = {\n                    value: record.groupDeptId,\n                    flag: 'groupDeptId'\n                  };\n                  deptInfo(arg0);\n                } else {\n                  changeCareerDeptId([]);\n                }\n\n                //打开弹框获取阿里部门\n                if (record.careerDeptName && record.careerDeptId) {\n                  const arg0 = {\n                    value: record.careerDeptId,\n                    flag: 'careerDeptId'\n                  };\n                  deptInfo(arg0);\n                } else {\n                  changeDeptId([]);\n                }\n                newRecord.shortDate =\n                  record.projetDurationType === 0 ? true : false;\n\n                changeProjectVisible({\n                  projectVisible: true,\n                  record: newRecord\n                });\n              }}\n            >\n              编辑项目\n            </Button>\n            <Button\n              style={{ marginLeft: '5px' }}\n              disabled={\n                (permission && permission === 'projectManage') ||\n                permission === 'admin' ||\n                permission === 'hr'\n                  ? false\n                  : true\n              }\n              onClick={() => {\n                const newRecord = JSON.parse(JSON.stringify(record));\n                newRecord.leaveProjReasonId = {\n                  key: record.leaveProjReasonId,\n                  label: record.leaveProjReasonName\n                };\n                changeLeaveProjVisible({\n                  leaveProjVisible: true,\n                  record: newRecord\n                });\n              }}\n            >\n              编辑离项\n            </Button>\n          </div>\n        );\n      }\n    }\n  ];\n  return projectList;\n};\n","import React, { Component } from 'react';\nimport { Row, Input, Col, Button, Form, Select, DatePicker } from 'antd';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { actionCreators } from '../store';\nimport './searchForm.less';\n\nconst { Option } = Select;\n\n@connect(state => state.project, actionCreators)\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aliFrameIdValue: '',\n      careerGroupIdValue: '',\n      groupDeptIdValue: '',\n      careerDeptIdValue: '',\n      deptIdValue: '',\n      ipsaBuDeptIdValue: '',\n      ipsaDeptIdValue: '',\n      aliNoValue: '',\n      firstCategoryIdValue: '',\n      secondCategoryIdValue: '',\n      thirdJobIdValue: '',\n      aliGradeCodeValue: '',\n      projectIdValue: '',\n      projetTypeValue: '',\n      projetDurationTypeValue: '',\n      iduFlagValue: '',\n      tlFlagValue: '',\n      workCityValue: '',\n      workAddressValue: '',\n      resourceStatusValue: '',\n      backboneFlagValue: '',\n      chargeFlagValue: '',\n      joiningProjTimeFormatValue: '',\n      businessLineValue: ''\n    };\n  }\n\n  //切换BU列表\n  handleChangeBuDeptId = value => {\n    const { deptInfo, changeDepList } = this.props;\n    if (value) {\n      this.setState({\n        ipsaBuDeptIdValue: value,\n        ipsaDeptIdValue: ''\n      });\n      const arg0 = {\n        flag: 'bu',\n        value\n      };\n      deptInfo(arg0);\n    } else {\n      this.setState({\n        ipsaDeptIdValue: ''\n      });\n      changeDepList([]);\n    }\n    this.props.form.resetFields();\n  };\n\n  handleChangeBuMenDeptId = value => {\n    this.setState({\n      ipsaDeptIdValue: value\n    });\n  };\n\n  //获取一类岗位\n  handleFocusFirstCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_1');\n  };\n\n  //获取二类岗位\n  handleFocusSecondCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_2');\n  };\n\n  //获取三类岗位\n  handleFocusThirdCategoryId = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_3');\n  };\n\n  //获取层级\n  handleFocusaliGradeCode = () => {\n    const { dictInfo } = this.props;\n    dictInfo('job_class_level');\n  };\n\n  //获取工作城市\n  handleFocusWorkCity = () => {\n    const { dictInfo } = this.props;\n    dictInfo('work_city');\n  };\n\n  //获取项目名称\n  handleFocusProjectList = () => {\n    const { dictInfo } = this.props;\n    dictInfo('project_list');\n  };\n\n  //获取框架\n  handleFocusIframe = () => {\n    const { deptInfoIframe } = this.props;\n    const arg0 = {\n      value: '',\n      flag: 'zero'\n    };\n    deptInfoIframe(arg0);\n  };\n\n  handleChangeIftame = (value, key) => {\n    const {\n      changeCareerGroupId,\n      changeCareerDeptId,\n      changeGroupDeptId,\n      changeDeptId\n    } = this.props;\n\n    //保存查询条件选择的值，在做联动操作时逐级清空操作\n    if (key) {\n      const { deptInfo } = this.props;\n      const arg0 = {\n        value: key,\n        flag: value\n      };\n      if (value === 'aliFrameId') {\n        this.setState({\n          aliFrameIdValue: key,\n          careerGroupIdValue: '',\n          groupDeptIdValue: '',\n          careerDeptIdValue: '',\n          deptIdValue: ''\n        });\n        changeCareerDeptId([]);\n        changeGroupDeptId([]);\n        changeDeptId([]);\n      }\n\n      if (value === 'careerGroupId') {\n        this.setState({\n          careerGroupIdValue: key,\n          groupDeptIdValue: '',\n          careerDeptIdValue: '',\n          deptIdValue: ''\n        });\n        changeGroupDeptId([]);\n        changeDeptId([]);\n      }\n\n      if (value === 'groupDeptId') {\n        this.setState({\n          groupDeptIdValue: key,\n          careerDeptIdValue: '',\n          deptIdValue: ''\n        });\n        changeDeptId([]);\n      }\n\n      if (value === 'careerDeptId') {\n        this.setState({\n          careerDeptIdValue: key,\n          deptIdValue: ''\n        });\n      }\n\n      if (value === 'deptId') {\n        this.setState({\n          deptIdValue: key\n        });\n      }\n      deptInfo(arg0);\n    }\n    if (!key) {\n      if (value === 'aliFrameId') {\n        this.setState({\n          careerGroupIdValue: '',\n          groupDeptIdValue: '',\n          careerDeptIdValue: '',\n          deptIdValue: ''\n        });\n        changeCareerGroupId([]);\n        changeCareerDeptId([]);\n        changeGroupDeptId([]);\n        changeDeptId([]);\n      }\n\n      if (value === 'careerGroupId') {\n        this.setState({\n          groupDeptIdValue: '',\n          careerDeptIdValue: '',\n          deptIdValue: ''\n        });\n        changeCareerDeptId([]);\n        changeGroupDeptId([]);\n        changeDeptId([]);\n      }\n\n      if (value === 'groupDeptId') {\n        this.setState({\n          careerDeptIdValue: '',\n          deptIdValue: ''\n        });\n        changeCareerDeptId([]);\n        changeDeptId([]);\n      }\n\n      if (value === 'careerDeptId') {\n        this.setState({\n          deptIdValue: ''\n        });\n        changeDeptId([]);\n      }\n    }\n    this.props.form.resetFields();\n  };\n\n  handleSearchSubmit = () => {\n    this.props.form.validateFields((err, values) => {\n      const {\n        changeSaveSearchSubmit,\n        queryProjectRecordInfoList,\n        changeCurrentPageData\n      } = this.props;\n      const arg0 = {\n        currentPage: 1,\n        pageSize: 10,\n        aliNo: values.aliNo,\n        ipsaBuDeptId: values.ipsaBuDeptId,\n        ipsaDeptId: values.ipsaDeptId,\n        projectId: values.projectId,\n        joiningProjTimeFormat: values.joiningProjTimeFormat\n          ? moment(values.joiningProjTimeFormat).format('YYYY-MM-DD')\n          : '',\n        firstCategoryId: values.firstCategoryId,\n        secondCategoryId: values.secondCategoryId,\n        thirdJobId: values.thirdJobId,\n        aliGradeCode: values.aliGradeCode,\n        techDirection: values.techDirection,\n        aliFrameId: values.aliFrameId,\n        careerGroupId: values.careerGroupId,\n        groupDeptId: values.groupDeptId,\n        careerDeptId: values.careerDeptId,\n        deptId: values.deptId,\n        projetDurationType: values.projetDurationType,\n        projetType: values.projetType,\n        iduFlag: values.iduFlag,\n        tlFlag: values.tlFlag,\n        workCity: values.workCity,\n        workAddress: values.workAddress,\n        resourceStatus: values.resourceStatus,\n        backboneFlag: values.backboneFlag,\n        chargeFlag: values.chargeFlag,\n        businessLine: values.businessLine\n      };\n      changeSaveSearchSubmit(values);\n      changeCurrentPageData(arg0);\n      queryProjectRecordInfoList(arg0);\n      localStorage.setItem('statusFlag', '');\n    });\n  };\n\n  //保存查询框输入值\n  handleAllInputChange = (value, key) => {\n    if (value === 'aliNo') {\n      this.setState({\n        aliNoValue: key.target.value\n      });\n    }\n\n    if (value === 'joiningProjTimeFormat') {\n      console.log('value', moment(key).format('YYYY-MM-DD'));\n\n      this.setState({\n        joiningProjTimeFormatValue: key ? moment(key).format('YYYY-MM-DD') : ''\n      });\n    }\n\n    if (value === 'firstCategoryId') {\n      this.setState({\n        firstCategoryIdValue: key\n      });\n    }\n\n    if (value === 'secondCategoryId') {\n      this.setState({\n        secondCategoryIdValue: key\n      });\n    }\n\n    if (value === 'thirdJobId') {\n      this.setState({\n        thirdJobIdValue: key\n      });\n    }\n\n    if (value === 'aliGradeCode') {\n      this.setState({\n        aliGradeCodeValue: key\n      });\n    }\n\n    if (value === 'projectId') {\n      this.setState({\n        projectIdValue: key\n      });\n    }\n\n    if (value === 'projetType') {\n      this.setState({\n        projetTypeValue: key\n      });\n    }\n\n    if (value === 'projetDurationType') {\n      this.setState({\n        projetDurationTypeValue: key\n      });\n    }\n\n    if (value === 'iduFlag') {\n      this.setState({\n        iduFlagValue: key\n      });\n    }\n\n    if (value === 'tlFlag') {\n      this.setState({\n        tlFlagValue: key\n      });\n    }\n\n    if (value === 'workCity') {\n      this.setState({\n        workCityValue: key\n      });\n    }\n\n    if (value === 'workAddress') {\n      this.setState({\n        workAddressValue: key.target.value\n      });\n    }\n\n    if (value === 'resourceStatus') {\n      this.setState({\n        resourceStatusValue: key\n      });\n    }\n\n    if (value === 'backboneFlag') {\n      this.setState({\n        backboneFlagValue: key\n      });\n    }\n\n    if (value === 'chargeFlag') {\n      this.setState({\n        chargeFlagValue: key\n      });\n    }\n\n    if (value === 'businessLine') {\n      this.setState({\n        businessLineValue: key.target.value\n      });\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentPageData && nextProps.currentPageData.keyword) {\n      this.setState({\n        aliFrameIdValue: '',\n        careerGroupIdValue: '',\n        groupDeptIdValue: '',\n        careerDeptIdValue: '',\n        deptIdValue: '',\n        ipsaBuDeptIdValue: '',\n        ipsaDeptIdValue: '',\n        aliNoValue: '',\n        firstCategoryIdValue: '',\n        secondCategoryIdValue: '',\n        thirdJobIdValue: '',\n        aliGradeCodeValue: '',\n        projectIdValue: '',\n        projetTypeValue: '',\n        projetDurationTypeValue: '',\n        iduFlagValue: '',\n        tlFlagValue: '',\n        workCityValue: '',\n        workAddressValue: '',\n        resourceStatusValue: '',\n        backboneFlagValue: '',\n        chargeFlagValue: '',\n        joiningProjTimeFormatValue: '',\n        businessLineValue: ''\n      });\n    }\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const {\n      aliFrameIdValue,\n      careerGroupIdValue,\n      groupDeptIdValue,\n      careerDeptIdValue,\n      deptIdValue,\n      ipsaBuDeptIdValue,\n      ipsaDeptIdValue,\n      aliNoValue = '',\n      joiningProjTimeFormatValue,\n      firstCategoryIdValue = '',\n      secondCategoryIdValue = '',\n      thirdJobIdValue = '',\n      aliGradeCodeValue = '',\n      projectIdValue = '',\n      projetTypeValue = '',\n      projetDurationTypeValue = '',\n      iduFlagValue = '',\n      tlFlagValue = '',\n      workCityValue = '',\n      workAddressValue = '',\n      resourceStatusValue = '',\n      backboneFlagValue = '',\n      chargeFlagValue = '',\n      businessLineValue = ''\n    } = this.state;\n    const that = this;\n    const {\n      buList,\n      depList,\n      firstCategoryidList,\n      secondCategoryidList,\n      thirdCategoryidList,\n      aliGradeCodeList,\n      workCityList,\n      newProjectList,\n      iframeList = [],\n      careerGroupList = [],\n      groupdeptList = [],\n      careerdepList = [],\n      deptIdList = [],\n      handleSaveSearchThis\n    } = this.props;\n\n    handleSaveSearchThis(that);\n    return (\n      <div className=\"project-search-from\">\n        <Row>\n          <Col span={22}>\n            <Form>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"BU\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('ipsaBuDeptId', {\n                    initialValue: ipsaBuDeptIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleChangeBuDeptId.bind(this)}\n                    >\n                      {buList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.name}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"部门\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('ipsaDeptId', {\n                    initialValue: ipsaDeptIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleChangeBuMenDeptId.bind(this)}\n                    >\n                      {depList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.name}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"阿里工号\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('aliNo', {\n                    initialValue: aliNoValue\n                  })(\n                    <Input\n                      onChange={this.handleAllInputChange.bind(this, 'aliNo')}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"入项时间\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('joiningProjTimeFormat', {\n                    initialValue: joiningProjTimeFormatValue\n                      ? moment(joiningProjTimeFormatValue)\n                      : null\n                  })(\n                    <DatePicker\n                      showToday={false}\n                      placeholder=\"请选择入项时间\"\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'joiningProjTimeFormat'\n                      )}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 9 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"一类岗位\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('firstCategoryId', {\n                    initialValue: firstCategoryIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusFirstCategoryId.bind(this)}\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'firstCategoryId'\n                      )}\n                    >\n                      {firstCategoryidList &&\n                        firstCategoryidList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"二类岗位\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('secondCategoryId', {\n                    initialValue: secondCategoryIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusSecondCategoryId.bind(this)}\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'secondCategoryId'\n                      )}\n                    >\n                      {secondCategoryidList &&\n                        secondCategoryidList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"三类岗位\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('thirdJobId', {\n                    initialValue: thirdJobIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusThirdCategoryId.bind(this)}\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'thirdJobId'\n                      )}\n                    >\n                      {thirdCategoryidList &&\n                        thirdCategoryidList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"层级\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('aliGradeCode', {\n                    initialValue: aliGradeCodeValue\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusaliGradeCode.bind(this)}\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'aliGradeCode'\n                      )}\n                    >\n                      {aliGradeCodeList &&\n                        aliGradeCodeList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"框架\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('aliFrameId', {\n                    initialValue: aliFrameIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusIframe.bind(this)}\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'aliFrameId'\n                      )}\n                    >\n                      {Array.isArray(iframeList) &&\n                        iframeList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.name}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 9 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"事业群\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('careerGroupId', {\n                    initialValue: careerGroupIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'careerGroupId'\n                      )}\n                    >\n                      {Array.isArray(careerGroupList) &&\n                        careerGroupList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"事业群本部\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('groupDeptId', {\n                    initialValue: groupDeptIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'groupDeptId'\n                      )}\n                    >\n                      {Array.isArray(groupdeptList) &&\n                        groupdeptList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 16 }}\n                  label=\"事业部\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('careerDeptId', {\n                    initialValue: careerDeptIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleChangeIftame.bind(\n                        this,\n                        'careerDeptId'\n                      )}\n                    >\n                      {Array.isArray(careerdepList) &&\n                        careerdepList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 14 }}\n                  label=\"阿里部门\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('deptId', {\n                    initialValue: deptIdValue\n                  })(\n                    <Select allowClear>\n                      {Array.isArray(deptIdList) &&\n                        deptIdList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"项目名称\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('projectId', {\n                    initialValue: projectIdValue\n                  })(\n                    <Select\n                      allowClear\n                      onFocus={this.handleFocusProjectList.bind(this)}\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'projectId'\n                      )}\n                    >\n                      {Array.isArray(newProjectList) &&\n                        newProjectList.map(item => {\n                          return (\n                            <Option key={item.id} value={item.id}>\n                              {item.label}\n                            </Option>\n                          );\n                        })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 9 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"项目类型\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('projetType', {\n                    initialValue: projetTypeValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'projetType'\n                      )}\n                    >\n                      <Option value=\"0\">FP</Option>\n                      <Option value=\"1\">TM</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"项目时长\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('projetDurationType', {\n                    initialValue: projetDurationTypeValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'projetDurationType'\n                      )}\n                    >\n                      <Option value=\"0\">短期</Option>\n                      <Option value=\"1\">长期</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 10 }}\n                  label=\"是否IDU\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('iduFlag', {\n                    initialValue: iduFlagValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleAllInputChange.bind(this, 'iduFlag')}\n                    >\n                      <Option value=\"0\">否</Option>\n                      <Option value=\"1\">是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 14 }}\n                  label=\"是否TL\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('tlFlag', {\n                    initialValue: tlFlagValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleAllInputChange.bind(this, 'tlFlag')}\n                    >\n                      <Option value=\"0\">否</Option>\n                      <Option value=\"1\">是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"工作城市\"\n                  hasFeedback\n                  onFocus={this.handleFocusWorkCity.bind(this)}\n                >\n                  {getFieldDecorator('workCity', {\n                    initialValue: workCityValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'workCity'\n                      )}\n                    >\n                      {workCityList.map(item => {\n                        return (\n                          <Option key={item.id} value={item.id}>\n                            {item.label}\n                          </Option>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 9 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"办公场地\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('workAddress', {\n                    initialValue: workAddressValue\n                  })(\n                    <Input\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'workAddress'\n                      )}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"资源状态\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('resourceStatus', {\n                    initialValue: resourceStatusValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'resourceStatus'\n                      )}\n                    >\n                      <Option value=\"0\">闲置</Option>\n                      <Option value=\"1\">在岗</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 6 }}\n                  wrapperCol={{ span: 10 }}\n                  label=\"是否骨干\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('backboneFlag', {\n                    initialValue: backboneFlagValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'backboneFlag'\n                      )}\n                    >\n                      <Option value=\"0\">否</Option>\n                      <Option value=\"1\">是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={4}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 10 }}\n                  label=\"是否收费\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('chargeFlag', {\n                    initialValue: chargeFlagValue\n                  })(\n                    <Select\n                      allowClear\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'chargeFlag'\n                      )}\n                    >\n                      <Option value=\"0\">否</Option>\n                      <Option value=\"1\">是</Option>\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col span={5}>\n                <Form.Item\n                  labelCol={{ span: 7 }}\n                  wrapperCol={{ span: 15 }}\n                  label=\"业务线名称\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('businessLine', {\n                    initialValue: businessLineValue\n                  })(\n                    <Input\n                      onChange={this.handleAllInputChange.bind(\n                        this,\n                        'businessLine'\n                      )}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n            </Form>\n          </Col>\n          <Col span={2} style={{ textAlign: 'right' }}>\n            <Button\n              type=\"primary\"\n              style={{\n                marginTop: '3px',\n                marginRight: '15%'\n              }}\n              onClick={this.handleSearchSubmit.bind(this)}\n            >\n              查询\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(SearchForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Button,\n  Table,\n  Pagination,\n  Input,\n  message,\n  Upload,\n  Tooltip\n} from 'antd';\nimport axios from 'axios';\nimport ProjectModal from './components/ProjectModal.jsx';\nimport ProjectLeaveModal from './components/ProjectLeaveModal';\nimport { actionCreators } from './store';\nimport { projectColumnsFunction } from './projectColumns';\nimport SearchForm from './components/searchForm.jsx';\nimport fetch from '../../utils/axios.config';\nimport './index.less';\nconst { Search } = Input;\n\n@connect(state => state.project, actionCreators)\nclass ProjectInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      permission: ''\n    };\n  }\n\n  //table表格\n  handleGetColumns = () => {\n    const that = this;\n    const { permission } = this.state;\n    const projectList = projectColumnsFunction(that, permission);\n    return projectList;\n  };\n\n  componentDidMount() {\n    fetch.get('/api/user/queryUserPermission.json').then(res => {\n      if (res && res.success) {\n        const { data } = res;\n        const permission = data[0].permission;\n        this.setState({\n          permission\n        });\n      }\n    });\n    const { deptInfoBu, queryProjectRecordInfoList } = this.props;\n    const statusFlag = localStorage.getItem('statusFlag');\n    deptInfoBu();\n    queryProjectRecordInfoList({\n      currentPage: 1,\n      pageSize: 10,\n      statusFlag\n    });\n  }\n\n  //分页查询\n  handleTableChange = page => {\n    const {\n      queryProjectRecordInfoList,\n      changeCurrentPageData,\n      currentPageData\n    } = this.props;\n    const statusFlag = localStorage.getItem('statusFlag');\n    const arg0 = {\n      currentPage: page,\n      pageSize: 10,\n      aliNo: currentPageData.aliNo,\n      ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n      ipsaDeptId: currentPageData.ipsaDeptId,\n      projectId: currentPageData.projectId,\n      joiningProjTimeFormat: currentPageData.joiningProjTimeFormat,\n      firstCategoryId: currentPageData.firstCategoryId,\n      secondCategoryId: currentPageData.secondCategoryId,\n      thirdJobId: currentPageData.thirdJobId,\n      aliGradeCode: currentPageData.aliGradeCode,\n      techDirection: currentPageData.techDirection,\n      aliFrameId: currentPageData.aliFrameId,\n      careerGroupId: currentPageData.careerGroupId,\n      groupDeptId: currentPageData.groupDeptId,\n      careerDeptId: currentPageData.careerDeptId,\n      deptId: currentPageData.deptId,\n      projetDurationType: currentPageData.projetDurationType,\n      projetType: currentPageData.projetType,\n      iduFlag: currentPageData.iduFlag,\n      tlFlag: currentPageData.tlFlag,\n      workCity: currentPageData.workCity,\n      workAddress: currentPageData.workAddress,\n      resourceStatus: currentPageData.resourceStatus,\n      backboneFlag: currentPageData.backboneFlag,\n      chargeFlag: currentPageData.chargeFlag,\n      keyword: currentPageData.keyword,\n      statusFlag,\n      businessLine: currentPageData.businessLine\n    };\n    changeCurrentPageData(arg0);\n    queryProjectRecordInfoList(arg0);\n  };\n\n  //导出excel\n  handleDownload = () => {\n    const token = localStorage.getItem('token');\n    const { currentPageData } = this.props;\n    const statusFlag = localStorage.getItem('statusFlag');\n    axios({\n      method: 'get',\n      url: '/api/project/download',\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      params: {\n        aliNo: currentPageData.aliNo,\n        ipsaBuDeptId: currentPageData.ipsaBuDeptId,\n        ipsaDeptId: currentPageData.ipsaDeptId,\n        projectId: currentPageData.projectId,\n        joiningProjTimeFormat: currentPageData.joiningProjTimeFormat,\n        firstCategoryId: currentPageData.firstCategoryId,\n        secondCategoryId: currentPageData.secondCategoryId,\n        thirdJobId: currentPageData.thirdJobId,\n        aliGradeCode: currentPageData.aliGradeCode,\n        techDirection: currentPageData.techDirection,\n        aliFrameId: currentPageData.aliFrameId,\n        careerGroupId: currentPageData.careerGroupId,\n        groupDeptId: currentPageData.groupDeptId,\n        careerDeptId: currentPageData.careerDeptId,\n        deptId: currentPageData.deptId,\n        projetDurationType: currentPageData.projetDurationType,\n        projetType: currentPageData.projetType,\n        iduFlag: currentPageData.iduFlag,\n        tlFlag: currentPageData.tlFlag,\n        workCity: currentPageData.workCity,\n        workAddress: currentPageData.workAddress,\n        resourceStatus: currentPageData.resourceStatus,\n        backboneFlag: currentPageData.backboneFlag,\n        chargeFlag: currentPageData.chargeFlag,\n        keyword: currentPageData.keyword,\n        statusFlag,\n        businessLine: currentPageData.businessLine\n      },\n      responseType: 'blob'\n    })\n      .then(res => {\n        if (res.status === 200) {\n          const blob = new Blob([res.data], {\n            type:\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'\n          });\n          const url = window.URL.createObjectURL(blob);\n          const aLink = document.createElement('a');\n          aLink.style.display = 'none';\n          aLink.href = url;\n          aLink.setAttribute('download', 'excel.xlsx');\n          document.body.appendChild(aLink);\n          aLink.click();\n          document.body.removeChild(aLink); //下载完成移除元素\n          window.URL.revokeObjectURL(url);\n          message.success('导出成功');\n        } else {\n          message.error('导出失败');\n        }\n      })\n      .catch(err => {\n        message.error('导出失败');\n      });\n  };\n\n  //导入数据提醒\n  handleChangeFile = ({ file, fileList }) => {\n    const { queryProjectRecordInfoList } = this.props;\n\n    if (file && file.status === 'done' && file.response.success) {\n      message.success(\n        file.response.message + '，共导入' + file.response.data + '条数据'\n      );\n      queryProjectRecordInfoList({\n        currentPage: 1,\n        pageSize: 20\n      });\n    } else {\n      if (file && file.status === 'done' && !file.response.success) {\n        message.error('导入失败:' + file.response.message);\n      }\n      if (file && file.status === 'error') {\n        if (file.error.status === 401) {\n          message.error('导入失败，请重新登录');\n        } else {\n          message.error('导入失败:' + file.response.message);\n        }\n      }\n    }\n  };\n\n  //上传前的文件校验\n  handleBeforeUpload = (file, fileList) => {\n    if (\n      file &&\n      file.type !==\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    ) {\n      message.error('请上传以.xlsx为后缀的Excel文件');\n      return;\n    }\n  };\n\n  //搜索框调用查询列表\n  handleSearchInput = value => {\n    const {\n      queryProjectRecordInfoList,\n      changeCurrentPageData,\n      thats\n    } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      aliNo: '',\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      projectId: '',\n      joiningProjTimeFormat: '',\n      firstCategoryId: '',\n      secondCategoryId: '',\n      thirdJobId: '',\n      aliGradeCode: '',\n      techDirection: '',\n      aliFrameId: '',\n      careerGroupId: '',\n      groupDeptId: '',\n      careerDeptId: '',\n      deptId: '',\n      projetDurationType: '',\n      projetType: '',\n      iduFlag: '',\n      tlFlag: '',\n      workCity: '',\n      workAddress: '',\n      resourceStatus: '',\n      backboneFlag: '',\n      chargeFlag: '',\n      keyword: value\n    };\n    changeCurrentPageData(arg0);\n    queryProjectRecordInfoList(arg0);\n    localStorage.setItem('statusFlag', '');\n    thats.props.form.resetFields();\n  };\n\n  //修改搜索框的值\n  handleChangeSearchInput = value => {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      aliNo: '',\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      projectId: '',\n      joiningProjTimeFormat: '',\n      firstCategoryId: '',\n      secondCategoryId: '',\n      thirdJobId: '',\n      aliGradeCode: '',\n      techDirection: '',\n      aliFrameId: '',\n      careerGroupId: '',\n      groupDeptId: '',\n      careerDeptId: '',\n      deptId: '',\n      projetDurationType: '',\n      projetType: '',\n      iduFlag: '',\n      tlFlag: '',\n      workCity: '',\n      workAddress: '',\n      resourceStatus: '',\n      backboneFlag: '',\n      chargeFlag: '',\n      keyword: value.target.value,\n      businessLine: ''\n    };\n    changeCurrentPageData(arg0);\n  };\n\n  //组件销毁清空搜索\n  componentWillUnmount() {\n    const { changeCurrentPageData } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10,\n      aliNo: '',\n      ipsaBuDeptId: '',\n      ipsaDeptId: '',\n      projectId: '',\n      joiningProjTimeFormat: '',\n      firstCategoryId: '',\n      secondCategoryId: '',\n      thirdJobId: '',\n      aliGradeCode: '',\n      techDirection: '',\n      aliFrameId: '',\n      careerGroupId: '',\n      groupDeptId: '',\n      careerDeptId: '',\n      deptId: '',\n      projetDurationType: '',\n      projetType: '',\n      iduFlag: '',\n      tlFlag: '',\n      workCity: '',\n      workAddress: '',\n      resourceStatus: '',\n      backboneFlag: '',\n      chargeFlag: '',\n      keyword: '',\n      businessLine: ''\n    };\n    changeCurrentPageData(arg0);\n    localStorage.setItem('statusFlag', '');\n  }\n\n  render() {\n    const {\n      projectDataList,\n      total,\n      currentPageData,\n      saveSearchData\n    } = this.props;\n    const { permission } = this.state;\n    const token = localStorage.getItem('token');\n    return (\n      <div className=\"project-information\">\n        <Row style={{ padding: '20px' }}>\n          <Col span={24}>\n            <Row className=\"project-operator-set\">\n              <Col span={8}>\n                <Search\n                  style={{ width: '50%', marginLeft: '20px' }}\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => this.handleSearchInput(value)}\n                  onChange={value => this.handleChangeSearchInput(value)}\n                  value={currentPageData.keyword}\n                  enterButton\n                />\n              </Col>\n              <Col span={16} style={{ textAlign: 'right' }}>\n                <div\n                  style={{\n                    width: '64px',\n                    display: 'inline-block',\n                    marginRight: '7%'\n                  }}\n                >\n                  <Upload\n                    disabled={\n                      (permission && permission === 'projectManage') ||\n                      permission === 'admin' ||\n                      permission === 'hr'\n                        ? false\n                        : true\n                    }\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    action=\"/api/project/import/projectRecordInfo.json\"\n                    method=\"post\"\n                    headers={{\n                      Authorization: 'Bearer ' + token\n                    }}\n                    showUploadList={false}\n                    onChange={this.handleChangeFile.bind(this)}\n                    beforeUpload={this.handleBeforeUpload.bind(this)}\n                  >\n                    <Tooltip title=\"支持导入.xlsx文件\">\n                      <Button\n                        disabled={\n                          (permission && permission === 'projectManage') ||\n                          permission === 'admin' ||\n                          permission === 'hr'\n                            ? false\n                            : true\n                        }\n                        type=\"primary\"\n                      >\n                        导入\n                      </Button>\n                    </Tooltip>\n                  </Upload>\n                </div>\n                <div\n                  style={{\n                    width: '64px',\n                    display: 'inline-block',\n                    marginRight: '2%'\n                  }}\n                >\n                  <Button\n                    disabled={\n                      (permission && permission === 'projectManage') ||\n                      permission === 'admin' ||\n                      permission === 'hr'\n                        ? false\n                        : true\n                    }\n                    type=\"primary\"\n                    onClick={this.handleDownload.bind(this)}\n                  >\n                    导出\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '5px' }} span={24}>\n            <SearchForm />\n          </Col>\n          <Col className=\"project-content-table\" span={24}>\n            <Table\n              rowKey={(record, index) => index}\n              columns={this.handleGetColumns()}\n              dataSource={projectDataList}\n              scroll={{ x: '100%' }}\n              pagination={false}\n            />\n          </Col>\n          <Col className=\"project-paging\" span={24}>\n            <Pagination\n              total={total}\n              showTotal={total => `共 ${total} 条数据`}\n              current={currentPageData.currentPage}\n              onChange={page => {\n                this.handleTableChange(page);\n              }}\n            />\n          </Col>\n        </Row>\n        <ProjectModal />\n        <ProjectLeaveModal />\n      </div>\n    );\n  }\n}\nexport default ProjectInformation;\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Table, Form, Select, Input } from 'antd';\nimport { connect } from 'react-redux';\n// import { actionCreators } from '../BasicInformation/store';\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst data = [\n  {\n    key: '1',\n    empName: 'John Brown',\n    ipsaBuDeptId: 32,\n    ipsaDeptId: 'New York No. 1 Lake Park',\n    empNo: 111\n  }\n];\n// @connect(state => state.basic, actionCreators)\nclass Department extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: '姓名',\n        dataIndex: 'empName',\n        width: '150px'\n      },\n      {\n        title: 'BU',\n        dataIndex: 'ipsaBuDeptId',\n        width: '150px'\n      },\n      {\n        title: '部门',\n        dataIndex: 'ipsaDeptId',\n        width: '150px'\n      },\n      {\n        title: '软通工号',\n        dataIndex: 'empNo',\n        width: '150px'\n      },\n      {\n        title: '调整后一类岗位',\n        dataIndex: 'w',\n        width: '150px'\n      },\n      {\n        title: '调整后二类岗位',\n        dataIndex: 'e',\n        width: '150px'\n      },\n      {\n        title: '调整后三类岗位',\n        dataIndex: 'r',\n        width: '150px'\n      },\n      {\n        title: '调岗生效时间',\n        dataIndex: 't',\n        width: '150px'\n      },\n      {\n        title: '调整后层级',\n        dataIndex: 'y',\n        width: '150px'\n      },\n      {\n        title: '调级生效时间',\n        dataIndex: 'u',\n        width: '150px'\n      },\n      {\n        title: '调整后职位',\n        dataIndex: 'i',\n        width: '150px'\n      },\n      {\n        title: '调整后职级',\n        dataIndex: 'o',\n        width: '150px'\n      },\n      {\n        title: '调职调级生效时间',\n        dataIndex: 'p',\n        width: '150px'\n      },\n      {\n        title: '调整后部门',\n        dataIndex: 'a',\n        width: '150px'\n      },\n      {\n        title: '部门调整生效时间',\n        dataIndex: 's',\n        width: '150px'\n      },\n      {\n        title: '操作',\n        dataIndex: 'action',\n        width: '150px',\n        render: (text, record) => {\n          return <Button>编辑</Button>;\n        }\n      }\n    ];\n  }\n  render() {\n    const columns = this.columns;\n    const { basicList } = this.props;\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 12 }\n      }\n    };\n    console.log('basicList', basicList);\n\n    return (\n      <div>\n        <Row style={{ padding: '30px' }}>\n          <Col span={24}>\n            <Row>\n              <Col span={12}>\n                <Search\n                  style={{ width: '50%' }}\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => console.log(value)}\n                  enterButton\n                />\n              </Col>\n              <Col span={12} style={{ textAlign: 'right' }}>\n                <Button style={{ marginRight: '40px' }} type=\"primary\">\n                  导入\n                </Button>\n                <Button style={{ marginRight: '30px' }} type=\"primary\">\n                  导出\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '30px' }} span={24}>\n            <Row>\n              <Form {...formItemLayout}>\n                <Col span={6}>\n                  <Form.Item label=\"BU\" hasFeedback>\n                    {getFieldDecorator('confirm')(\n                      <Select>\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={6}>\n                  <Form.Item label=\"部门\" hasFeedback>\n                    {getFieldDecorator('bumen')(\n                      <Select>\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                <Col span={8}>\n                  <Form.Item label=\"生效时间\" hasFeedback>\n                    {getFieldDecorator('sex')(\n                      <Select>\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col>\n                {/* <Col span={8}>\n                  <Form.Item label=\"是否统招本科\" hasFeedback>\n                    {getFieldDecorator('entry')(\n                      <Select>\n                        <Option value=\"jack\">Jack</Option>\n                        <Option value=\"lucy\">Lucy</Option>\n                        <Option value=\"tom\">Tom</Option>\n                      </Select>\n                    )}\n                  </Form.Item>\n                </Col> */}\n                <Col span={4} style={{ textAlign: 'right' }}>\n                  <Button\n                    type=\"primary\"\n                    style={{\n                      marginTop: '3px',\n                      marginLeft: '5%',\n                      marginRight: '30px'\n                    }}\n                  >\n                    查询\n                  </Button>\n                </Col>\n              </Form>\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Table columns={columns} dataSource={data} scroll={{ x: '100%' }} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Department);\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Form, Select } from 'antd';\nimport { leaveFormList } from '../../../utils/tableTitle.config.js';\nconst { Option } = Select;\nconst searchListNo = [\n  'name',\n  'empNo',\n  'onepost',\n  'twopost',\n  'frame',\n  'businessunit',\n  'projecttype'\n];\nclass SearchForm extends Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 10 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 14 }\n      }\n    };\n    return (\n      <div>\n        <Row style={{ marginRight: '30px' }}>\n          <Form {...formItemLayout}>\n            {leaveFormList.map(item => {\n              if (!searchListNo.includes(item.dataIndex)) {\n                return (\n                  <Col key={item.dataIndex} span={6}>\n                    <Form.Item label={item.title} hasFeedback>\n                      {getFieldDecorator(item.dataIndex)(\n                        <Select>\n                          <Option value=\"jack\">Jack</Option>\n                          <Option value=\"lucy\">Lucy</Option>\n                          <Option value=\"tom\">Tom</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n                  </Col>\n                );\n              }\n            })}\n\n            {/* <Col span={4}>\n              <Form.Item label=\"部门\" hasFeedback>\n                {getFieldDecorator('bumen')(\n                  <Select>\n                    <Option value=\"jack\">Jack</Option>\n                    <Option value=\"lucy\">Lucy</Option>\n                    <Option value=\"tom\">Tom</Option>\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={4}>\n              <Form.Item label=\"学历\" hasFeedback>\n                {getFieldDecorator('sex')(\n                  <Select>\n                    <Option value=\"jack\">Jack</Option>\n                    <Option value=\"lucy\">Lucy</Option>\n                    <Option value=\"tom\">Tom</Option>\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"是否统招本科\" hasFeedback>\n                {getFieldDecorator('entry')(\n                  <Select>\n                    <Option value=\"jack\">Jack</Option>\n                    <Option value=\"lucy\">Lucy</Option>\n                    <Option value=\"tom\">Tom</Option>\n                  </Select>\n                )}\n              </Form.Item>\n            </Col> */}\n            <Col span={4} style={{ textAlign: 'right' }}>\n              <Button\n                type=\"primary\"\n                style={{\n                  marginTop: '3px',\n                  marginLeft: '5%',\n                  marginRight: '30px'\n                }}\n              >\n                查询\n              </Button>\n            </Col>\n          </Form>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(SearchForm);\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Table, Form, Select, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport SearchForm from './components/searchForm.jsx';\n// import { actionCreators } from '../BasicInformation/store';\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst data = [\n  {\n    key: '1',\n    empName: 'John Brown',\n    ipsaBuDeptId: 32,\n    ipsaDeptId: 'New York No. 1 Lake Park',\n    empNo: 111\n  }\n];\n// @connect(state => state.basic, actionCreators)\nclass Department extends Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: '姓名',\n        dataIndex: 'name',\n        width: '150px'\n      },\n      {\n        title: 'BU',\n        dataIndex: 'bu',\n        width: '150px'\n      },\n      {\n        title: '部门',\n        dataIndex: 'bumen',\n        width: '150px'\n      },\n      {\n        title: '软通工号',\n        dataIndex: 'empNo',\n        width: '150px'\n      },\n      {\n        title: '阿里离项时间',\n        dataIndex: 'alworkId',\n        width: '150px'\n      },\n      {\n        title: '阿里离项原因',\n        dataIndex: 'entryp',\n        width: '150px'\n      },\n      {\n        title: '阿里离项类型',\n        dataIndex: 'onepost',\n        width: '150px'\n      },\n      {\n        title: '业务线反馈离职原因',\n        dataIndex: 'twopost',\n        width: '150px'\n      },\n      {\n        title: '业务线反馈离职类型',\n        dataIndex: 'threepost',\n        width: '150px'\n      },\n      {\n        title: '业务线反馈离职分类',\n        dataIndex: 'hierarchy',\n        width: '150px'\n      },\n      {\n        title: '离职提出时间',\n        dataIndex: 'direction',\n        width: '150px'\n      },\n      {\n        title: '离职生效日',\n        dataIndex: 'frame',\n        width: '150px'\n      },\n      {\n        title: '离职时状态',\n        dataIndex: 'careergroup',\n        width: '150px'\n      },\n      {\n        title: 'IPSA离职原因',\n        dataIndex: 'businessunit',\n        width: '150px'\n      },\n      {\n        title: 'HR三月后离职分类',\n        dataIndex: 'entryname',\n        width: '150px'\n      },\n      {\n        title: 'HR一月后离职类型',\n        dataIndex: 'business',\n        width: '150px'\n      },\n      {\n        title: 'HR一月后沟通离职原因',\n        dataIndex: 'projecttype',\n        width: '150px'\n      },\n      {\n        title: '操作',\n        dataIndex: 'action',\n        width: '150px',\n        render: (text, record) => {\n          return <Button>编辑</Button>;\n        }\n      }\n    ];\n  }\n  render() {\n    const columns = this.columns;\n    const { basicList } = this.props;\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div>\n        <Row style={{ padding: '30px' }}>\n          <Col span={24}>\n            <Row>\n              <Col span={12}>\n                <Search\n                  style={{ width: '50%' }}\n                  placeholder=\"输入姓名或软通工号\"\n                  onSearch={value => console.log(value)}\n                  enterButton\n                />\n              </Col>\n              <Col span={12} style={{ textAlign: 'right' }}>\n                <Button style={{ marginRight: '40px' }} type=\"primary\">\n                  导入\n                </Button>\n                <Button style={{ marginRight: '30px' }} type=\"primary\">\n                  导出\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col style={{ marginTop: '30px' }} span={24}>\n            <SearchForm />\n          </Col>\n          <Col span={24}>\n            <Table columns={columns} dataSource={data} scroll={{ x: '100%' }} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(Department);\n","import React, { Component } from 'react';\nimport { Row, Col, DatePicker, Button, Table } from 'antd';\nimport moment from 'moment';\n\nimport { weekAnalysisColumns } from '../../../utils/tableTitle.config';\nimport './weekAnalysis.less';\n\nconst weekOfday = moment().format('E');\nconst last_monday = moment()\n  .subtract(weekOfday - 1, 'days')\n  .format('YYYY-MM-DD');\n\nconst last_sunday = moment()\n  .add(7 - weekOfday, 'days')\n  .format('YYYY-MM-DD');\n\nconst { WeekPicker, RangePicker } = DatePicker;\nexport default class WeekAnalysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showYear: '',\n      showWeek: '',\n      weekTimeFormat: '',\n      startTimeFormat: '',\n      endTimeFormat: ''\n    };\n  }\n\n  //选择日期\n  onChangeWeekAnalysis = (date, dateString) => {\n    this.setState({\n      startTimeFormat: dateString[0] ? dateString[0] : last_monday,\n      endTimeFormat: dateString[1] ? dateString[1] : last_sunday\n    });\n  };\n\n  //查询调用\n  handleSearchWeekAnalysis = () => {\n    const { startTimeFormat, endTimeFormat } = this.state;\n    const { queryEmployeeWeekDataAnalysis } = this.props;\n    const arg0 = {\n      startTimeFormat,\n      endTimeFormat\n    };\n    queryEmployeeWeekDataAnalysis(arg0);\n  };\n  render() {\n    const { weekData } = this.props;\n    return (\n      <div className=\"week-analysis\">\n        <Row>\n          <Col span={24}>\n            <span>自定义日期筛选：</span>\n            <RangePicker\n              onChange={this.onChangeWeekAnalysis}\n              placeholder={['起始日期', '结束日期']}\n            />\n            <Button\n              onClick={this.handleSearchWeekAnalysis.bind(this)}\n              type=\"primary\"\n              className=\"week-analysis-search-btn\"\n            >\n              查询\n            </Button>\n          </Col>\n          <Col span={24} className=\"week-analysis-table-style\">\n            <Table\n              rowKey={(record, index) => index}\n              columns={weekAnalysisColumns}\n              dataSource={weekData ? weekData.dataAnalysisList : []}\n              bordered\n              pagination={false}\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Table, Input, Pagination, message } from 'antd';\nimport axios from 'axios';\n\nimport { generalTableColumns } from '../../../utils/tableTitle.config';\n\nimport './generalTable.less';\nconst { Search } = Input;\nexport default class GeneralTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: '',\n      currentPage: 1\n    };\n  }\n\n  //修改搜索框的值\n  handleChangeSearchInput = e => {\n    this.setState({\n      keyword: e.target.value\n    });\n  };\n\n  //搜索框调用查询列表\n  handleSearchInput = value => {\n    const { queryAllEmployeeInfoList } = this.props;\n    const arg1 = {\n      currentPage: 1,\n      pageSize: 10,\n      keyword: value\n    };\n    queryAllEmployeeInfoList(arg1);\n  };\n\n  //切换分页\n  handleTableChange = page => {\n    const { queryAllEmployeeInfoList } = this.props;\n    this.setState(\n      {\n        currentPage: page\n      },\n      () => {\n        const { currentPage, keyword } = this.state;\n        const arg1 = {\n          currentPage,\n          pageSize: 10,\n          keyword\n        };\n        queryAllEmployeeInfoList(arg1);\n      }\n    );\n  };\n\n  //导出excel\n  handleDownload = () => {\n    const token = localStorage.getItem('token');\n    const { keyword } = this.state;\n    axios({\n      method: 'get',\n      url: '/api/analysis/baseInfo/download',\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      params: {\n        keyword\n      },\n      responseType: 'blob'\n    })\n      .then(res => {\n        if (res.status === 200) {\n          const blob = new Blob([res.data], {\n            type:\n              'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'\n          });\n          const url = window.URL.createObjectURL(blob);\n          const aLink = document.createElement('a');\n          aLink.style.display = 'none';\n          aLink.href = url;\n          aLink.setAttribute('download', 'excel.xlsx');\n          document.body.appendChild(aLink);\n          aLink.click();\n          document.body.removeChild(aLink); //下载完成移除元素\n          window.URL.revokeObjectURL(url);\n          message.success('导出成功');\n        } else {\n          message.error('导出失败');\n        }\n      })\n      .catch(err => {\n        message.error('导出失败');\n      });\n  };\n  render() {\n    const { keyword, currentPage } = this.state;\n    const { generalData = [], generalTotal } = this.props;\n    return (\n      <div className=\"general-analysis\">\n        <Row className=\"general-operator-set\">\n          <Col span={22}>\n            <Search\n              value={keyword}\n              onSearch={value => this.handleSearchInput(value)}\n              onChange={value => this.handleChangeSearchInput(value)}\n              className=\"general-seatch-input\"\n              placeholder=\"输入姓名或软通工号\"\n              enterButton\n            />\n          </Col>\n          <Col span={2} style={{ textAlign: 'right' }}>\n            <Button\n              className=\"general-download-btn\"\n              onClick={this.handleDownload.bind(this)}\n              type=\"primary\"\n            >\n              导出\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"general-content-table\" span={24}>\n            <Table\n              rowKey={(record, index) => index}\n              columns={generalTableColumns}\n              dataSource={generalData}\n              scroll={{ x: '100%' }}\n              pagination={false}\n            />\n          </Col>\n          <Col className=\"general-paging\" span={24}>\n            <Pagination\n              total={generalTotal}\n              showTotal={generalTotal => `共 ${generalTotal} 条数据`}\n              current={currentPage}\n              onChange={page => {\n                this.handleTableChange(page);\n              }}\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Tabs, message } from 'antd';\nimport moment from 'moment';\nimport fetch from '../../utils/axios.config';\nimport WeekAnalysis from './components/WeekAnalysis';\nimport GeneralTable from './components/GeneralTable';\nimport './index.less';\nconst { TabPane } = Tabs;\n\nconst weekOfday = moment().format('E');\nconst last_monday = moment()\n  .subtract(weekOfday - 1, 'days')\n  .format('YYYY-MM-DD');\n\nconst last_sunday = moment()\n  .add(7 - weekOfday, 'days')\n  .format('YYYY-MM-DD');\nconst arg0 = {\n  startTimeFormat: last_monday,\n  endTimeFormat: last_sunday\n};\n\nexport default class Analysis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weekData: null,\n      activeKye: 'week',\n      generalTotal: null,\n      generalData: []\n    };\n  }\n  handleChangeTabs = key => {\n    this.setState(\n      {\n        activeKye: key\n      },\n      () => {\n        const { activeKye } = this.state;\n        switch (activeKye) {\n          case 'week':\n            this.queryEmployeeWeekDataAnalysis(arg0);\n            break;\n          case 'general':\n            this.queryAllEmployeeInfoList();\n            break;\n          default:\n            break;\n        }\n      }\n    );\n  };\n\n  //获取周分析数据\n  queryEmployeeWeekDataAnalysis = arg1 => {\n    fetch\n      .get('/api/analysis/queryEmployeeWeekDataAnalysis.json', {\n        params: arg1\n      })\n      .then(res => {\n        if (res.success && res.data) {\n          this.setState({\n            weekData: res.data\n          });\n        } else {\n          message.error('周分析列表获取失败：' + res.message && res.message);\n        }\n      })\n      .catch(err => {\n        if (err && err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n\n  //获取一览表数据\n  queryAllEmployeeInfoList = arg1 => {\n    fetch\n      .post('/api/analysis/queryAllEmployeeInfoList.json', arg1)\n      .then(res => {\n        if (res.success && res.data) {\n          const { data = [], total } = res.data;\n          this.setState({\n            generalData: data,\n            generalTotal: total\n          });\n        } else {\n          message.error('周分析列表获取失败：' + res.message && res.message);\n        }\n      })\n      .catch(err => {\n        if (err && err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了，请稍后再试');\n        }\n      });\n  };\n\n  componentDidMount() {\n    const { activeKye } = this.state;\n\n    const arg1 = {\n      currentPage: 1,\n      pageSize: 10\n    };\n    switch (activeKye) {\n      case 'week':\n        this.queryEmployeeWeekDataAnalysis(arg0);\n        break;\n      case 'general':\n        this.queryAllEmployeeInfoList(arg1);\n        break;\n\n      default:\n        break;\n    }\n  }\n  render() {\n    const { activeKye, weekData, generalData, generalTotal } = this.state;\n    return (\n      <div className=\"analysis\">\n        <Row className=\"analysis-content\">\n          <Col>\n            <Tabs\n              animated={false}\n              rowKey={(record, index) => index}\n              defaultActiveKey={activeKye}\n              onChange={this.handleChangeTabs}\n              pagination={false}\n            >\n              <TabPane tab=\"周分析\" key=\"week\">\n                <WeekAnalysis\n                  weekData={weekData}\n                  queryEmployeeWeekDataAnalysis={\n                    this.queryEmployeeWeekDataAnalysis\n                  }\n                />\n              </TabPane>\n              <TabPane tab=\"一览表\" key=\"general\">\n                <GeneralTable\n                  generalData={generalData}\n                  generalTotal={generalTotal}\n                  queryAllEmployeeInfoList={this.queryAllEmployeeInfoList}\n                />\n              </TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Modal, Form, Select, DatePicker } from 'antd';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { actionCreators } from '../store';\nconst { Option } = Select;\n\n@connect(state => state.personnel, actionCreators)\nclass AssignModal extends Component {\n  //关闭弹窗\n\n  handleCancel = () => {\n    const { changeAssignModalVisible } = this.props;\n    changeAssignModalVisible({\n      assignModalVisible: false\n    });\n  };\n\n  handleGetDicInfo = key => {\n    const { dictInfo } = this.props;\n    dictInfo(key);\n  };\n\n  //分配提交\n  handleAssignSubmit = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { assignInterview, selectedRowKeys } = this.props;\n        const date = values.interviewEndTimeFormat\n          ? moment(values.interviewEndTimeFormat).format('YYYY-MM-DD')\n          : '';\n        const arg0 = {\n          ids: selectedRowKeys,\n          userIds: values.userIds,\n          projectId: values.projectId,\n          interviewEndTimeFormat: date\n        };\n        assignInterview(arg0);\n      }\n    });\n  };\n\n  //设置禁选日期\n  disabledDate = currentDate => {\n    return currentDate && currentDate < moment().subtract(1, 'days');\n  };\n  render() {\n    const {\n      assignModalVisible,\n      interviewerList = [],\n      projectList = []\n    } = this.props;\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    return (\n      <div>\n        <Modal\n          title=\"简历分配\"\n          visible={assignModalVisible}\n          onOk={this.handleAssignSubmit}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          className=\"basic-add-modal\"\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Form {...formItemLayout}>\n            <Form.Item label=\"项目\" hasFeedback>\n              {getFieldDecorator(\n                'projectId',\n                {}\n              )(\n                <Select\n                  onFocus={this.handleGetDicInfo.bind(this, 'project_list')}\n                  placeholder=\"请选择项目\"\n                  showSearch\n                  optionFilterProp=\"children\"\n                >\n                  {projectList.map(item => {\n                    return (\n                      <Option key={item.id} value={item.id}>\n                        {item.label}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"面试官\" hasFeedback>\n              {getFieldDecorator(\n                'userIds',\n                {}\n              )(\n                <Select\n                  mode=\"multiple\"\n                  tokenSeparators={[',']}\n                  placeholder=\"请选择面试官\"\n                >\n                  {interviewerList.length &&\n                    interviewerList.map(item => {\n                      return (\n                        <Option key={item.id} value={item.id}>\n                          {item.empName}\n                        </Option>\n                      );\n                    })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"面试截止时间\" hasFeedback>\n              {getFieldDecorator(\n                'interviewEndTimeFormat',\n                {}\n              )(\n                <DatePicker\n                  showToday={false}\n                  disabledDate={this.disabledDate}\n                  placeholder=\"请选择截止时间\"\n                />\n              )}\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default Form.create()(AssignModal);\n","import React, { Component } from 'react';\nimport { Modal, Form, Select, Input, message } from 'antd';\nimport { connect } from 'react-redux';\n\nimport fetch from '../../../utils/axios.config';\nimport { actionCreators } from '../store';\nconst { Option } = Select;\nconst { TextArea } = Input;\n\n@connect(state => state.personnel, actionCreators)\nclass EditModal extends Component {\n  //关闭弹窗\n\n  handleCancel = () => {\n    const { changeEditModalVisible } = this.props;\n    changeEditModalVisible({\n      editModalVisible: false\n    });\n  };\n\n  handleEditSubmit = () => {\n    const { updataId, queryInterviewList, changeEditModalVisible } = this.props;\n    this.props.form.validateFields((err, values) => {\n      values.id = updataId;\n      fetch\n        .post('/api/interview/updateInterviewResultById.json', values)\n        .then(res => {\n          if (res && res.success) {\n            const arg1 = {\n              currentPage: 1,\n              pageSize: 10\n            };\n            message.success('编辑成功');\n            queryInterviewList(arg1);\n            changeEditModalVisible({\n              editModalVisible: false\n            });\n          } else {\n            message.error('编辑失败：' + res.message);\n          }\n        })\n        .catch(err => {\n          if (err && err.data && err.data.message) {\n            message.error('编辑失败：' + err.data.message);\n          } else {\n            message.error('编辑失败');\n          }\n        });\n    });\n  };\n  render() {\n    const { editModalVisible, leveList = [], editRecord } = this.props;\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    return (\n      <div>\n        <Modal\n          title=\"更新面试结果\"\n          visible={editModalVisible}\n          onOk={this.handleEditSubmit}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          className=\"basic-add-modal\"\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Form {...formItemLayout}>\n            <Form.Item label=\"建议级别\" hasFeedback>\n              {getFieldDecorator('interviewLevel', {\n                initialValue:\n                  editRecord && editRecord.interviewLevel\n                    ? editRecord.interviewLevel\n                    : ''\n              })(\n                <Select allowClear placeholder=\"请选择\">\n                  {leveList.map(item => {\n                    return (\n                      <Option key={item.id} value={item.label}>\n                        {item.label}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"是否通过\" hasFeedback>\n              {getFieldDecorator('initialInterviewResult', {\n                initialValue:\n                  editRecord && editRecord.initialInterviewResult\n                    ? editRecord.initialInterviewResult\n                    : ''\n              })(\n                <Select placeholder=\"请选择\">\n                  <Option value={1}>通过</Option>\n                  <Option value={2}>不通过</Option>\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"面试评价\" hasFeedback>\n              {getFieldDecorator('interviewComment', {\n                initialValue:\n                  editRecord && editRecord.interviewComment\n                    ? editRecord.interviewComment\n                    : ''\n              })(<TextArea placeholder=\"请输入评价\" />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default Form.create()(EditModal);\n","import React, { Component } from 'react';\nimport { Modal, Form, Input, Row, Col, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { actionCreators } from '../store';\nimport {\n  resumeStatusList,\n  initialInterviewResultList,\n  finalInterviewResultList\n} from '../../../utils/optionEnum';\nimport './detailsModal.less';\nconst { TextArea } = Input;\n\n@connect(state => state.personnel, actionCreators)\nclass DetailsModal extends Component {\n  handleCancel = () => {\n    const { changeDetailsModalVisible } = this.props;\n    changeDetailsModalVisible({\n      detailsVisible: false\n    });\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { detailsVisible, detailsList } = this.props;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    return (\n      <div>\n        <Row>\n          <Modal\n            title=\"详情\"\n            visible={detailsVisible}\n            onOk={this.handleEducationSubmit}\n            destroyOnClose={true}\n            className=\"personnel-details-modal\"\n            width=\"55%\"\n            onCancel={this.handleCancel}\n            footer={<Button onClick={this.handleCancel}>取消</Button>}\n          >\n            <Form {...formItemLayout}>\n              <h3 className=\"personnel-details-title\">简历信息</h3>\n              <Col span={12}>\n                <Form.Item label=\"姓名\" hasFeedback>\n                  {getFieldDecorator('resumeUserName', {\n                    initialValue: detailsList.resumeUserName\n                      ? detailsList.resumeUserName\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"手机号\" hasFeedback>\n                  {getFieldDecorator('resumeUserPhone', {\n                    initialValue: detailsList.resumeUserPhone\n                      ? detailsList.resumeUserPhone\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <h3 className=\"personnel-details-title\">面试基本信息</h3>\n              <Col span={12}>\n                <Form.Item label=\"资源经理\" hasFeedback>\n                  {getFieldDecorator('resourceManagerUserName', {\n                    initialValue: detailsList.resourceManagerUserName\n                      ? detailsList.resourceManagerUserName\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"简历状态\" hasFeedback>\n                  {getFieldDecorator('resumeStatus', {\n                    initialValue: detailsList.resumeStatus\n                      ? resumeStatusList[detailsList.resumeStatus - 1].label\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"招聘级别\" hasFeedback>\n                  {getFieldDecorator('recruitmentLevel', {\n                    initialValue: detailsList.recruitmentLevel\n                      ? detailsList.recruitmentLevel\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"简历来源\" hasFeedback>\n                  {getFieldDecorator('resumeSource', {\n                    initialValue: detailsList.resumeSource\n                      ? detailsList.resumeSource\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"工作地点\" hasFeedback>\n                  {getFieldDecorator('workAddress', {\n                    initialValue: detailsList.workAddress\n                      ? detailsList.workAddress\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"简历分配时间\" hasFeedback>\n                  {getFieldDecorator('distributionTime', {\n                    initialValue: detailsList.distributionTime\n                      ? moment(detailsList.distributionTime).format(\n                          'YYYY-MM-DD'\n                        )\n                      : null\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"面试完成时间 \" hasFeedback>\n                  {getFieldDecorator('interviewCompleteTime', {\n                    initialValue: detailsList.interviewCompleteTime\n                      ? moment(detailsList.interviewCompleteTime).format(\n                          'YYYY-MM-DD'\n                        )\n                      : null\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"建议级别\" hasFeedback>\n                  {getFieldDecorator('interviewLevel', {\n                    initialValue: detailsList.interviewLevel\n                      ? detailsList.interviewLevel\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"初面结果\" hasFeedback>\n                  {getFieldDecorator('initialInterviewResult', {\n                    initialValue: detailsList.initialInterviewResult\n                      ? initialInterviewResultList[\n                          detailsList.initialInterviewResult - 1\n                        ].label\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"终面结果\" hasFeedback>\n                  {getFieldDecorator('finalInterviewResult', {\n                    initialValue: detailsList.finalInterviewResult\n                      ? finalInterviewResultList[\n                          detailsList.finalInterviewResult - 1\n                        ].label\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"职位类型\" hasFeedback>\n                  {getFieldDecorator('positionType', {\n                    initialValue: detailsList.positionType\n                      ? detailsList.positionType\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"项目名称\" hasFeedback>\n                  {getFieldDecorator('projectName', {\n                    initialValue: detailsList.projectName\n                      ? detailsList.projectName\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"面试官名字\" hasFeedback>\n                  {getFieldDecorator('interviewUserName', {\n                    initialValue: detailsList.interviewUserName\n                      ? detailsList.interviewUserName\n                      : ''\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"简历过期时间\" hasFeedback>\n                  {getFieldDecorator('expireTime', {\n                    initialValue: detailsList.expireTime\n                      ? moment(detailsList.expireTime).format('YYYY-MM-DD')\n                      : null\n                  })(<Input disabled={true} />)}\n                </Form.Item>\n              </Col>\n              <h3 className=\"personnel-details-title\">面试评价信息</h3>\n              <Col span={24}>\n                <Form.Item\n                  labelCol={{ span: 3 }}\n                  wrapperCol={{ span: 20 }}\n                  label=\"面试评价\"\n                  hasFeedback\n                >\n                  {getFieldDecorator('interviewComment', {\n                    initialValue: detailsList.interviewComment\n                      ? detailsList.interviewComment\n                      : ''\n                  })(\n                    <TextArea\n                      autoSize={{ minRows: 3, maxRows: 6 }}\n                      disabled={true}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n            </Form>\n          </Modal>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(DetailsModal);\n","import React, { Component } from 'react';\nimport {\n  Row,\n  Col,\n  Button,\n  Table,\n  Input,\n  Pagination,\n  message,\n  Tooltip\n} from 'antd';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { actionCreators } from '../store';\nimport fetch from '../../../utils/axios.config';\n\nimport AssignModal from './AssignModal.jsx';\nimport EditModal from './EidtModal.jsx';\nimport DetailsModal from './DetailsModal.jsx';\nimport './distributionTable.less';\n@connect(state => state.personnel, actionCreators)\nclass DistributionTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRowKeys: [],\n      currentPage: 1\n    };\n    this.columns = [\n      {\n        title: '姓名',\n        dataIndex: 'resumeUserName',\n        width: '7%'\n      },\n      {\n        title: '电话',\n        dataIndex: 'resumeUserPhone',\n        width: '10%'\n      },\n      {\n        title: '项目名称',\n        dataIndex: 'projectName',\n        width: '10%',\n        onCell: () => {\n          return {\n            style: {\n              maxWidth: 100,\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n              textOverflow: 'ellipsis',\n              cursor: 'pointer'\n            }\n          };\n        },\n        render: text => (\n          <Tooltip placement=\"topLeft\" title={text}>\n            {text}\n          </Tooltip>\n        )\n      },\n      {\n        title: '截止时间',\n        dataIndex: 'interviewEndTime',\n        width: '10%',\n        render: (text, render) => {\n          return text ? moment(text).format('YYYY-MM-DD') : '';\n        }\n      },\n      {\n        title: '职位类型',\n        dataIndex: 'positionType',\n        width: '10%'\n      },\n      {\n        title: '招聘级别',\n        dataIndex: 'recruitmentLevel',\n        width: '8%'\n      },\n      {\n        title: '简历状态',\n        dataIndex: 'resumeStatus',\n        width: '8%',\n        render: (text, render) => {\n          switch (text) {\n            case 1:\n              return <span>待分配</span>;\n\n            case 2:\n              return <span>已分配</span>;\n            case 3:\n              return <span>待面试</span>;\n            case 4:\n              return <span>已面试</span>;\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '初面结果',\n        dataIndex: 'initialInterviewResult',\n        width: '8%',\n        render: (text, render) => {\n          switch (text) {\n            case 1:\n              return <span>通过</span>;\n\n            case 2:\n              return <span>不通过</span>;\n\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '终面结果',\n        dataIndex: 'finalInterviewResult',\n        width: '8%',\n        render: (text, render) => {\n          switch (text) {\n            case 1:\n              return <span>通过</span>;\n\n            case 2:\n              return <span>不通过</span>;\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '建议级别',\n        dataIndex: 'interviewLevel',\n        width: '8%'\n      },\n      {\n        title: '操作',\n        dataIndex: 'buttons',\n        width: '27%',\n        render: (text, record) => {\n          const buttonsArr =\n            text &&\n            text.length &&\n            text.map(item => {\n              if (item === 'detail') {\n                return (\n                  <Button\n                    key={item}\n                    onClick={this.handleOpenDetailsModal.bind(this, record)}\n                    className=\"action-buttons\"\n                  >\n                    详情\n                  </Button>\n                );\n              }\n            });\n          return buttonsArr;\n        }\n      }\n    ];\n  }\n\n  //打开分配简历弹窗\n  handleOpenAssignModal = () => {\n    const {\n      changeAssignModalVisible,\n      queryUserListInfoByRolePermission\n    } = this.props;\n    changeAssignModalVisible({\n      assignModalVisible: true\n    });\n    queryUserListInfoByRolePermission({\n      key: 'assign',\n      value: 'interviewPerson'\n    });\n  };\n\n  //打开详情弹窗\n  handleOpenDetailsModal = record => {\n    const id = record.id;\n    const { changeDetailsModalVisible, queryInterviewInfoById } = this.props;\n    changeDetailsModalVisible({\n      detailsVisible: true\n    });\n    queryInterviewInfoById(id);\n  };\n\n  //多选项\n  onSelectChange = (selectedRowKeys, a) => {\n    const { changeSelectedRowKeys } = this.props;\n    changeSelectedRowKeys(selectedRowKeys);\n  };\n\n  //分页查询\n  handleTableChange = page => {\n    const {\n      queryAssignInterviewList,\n      distriSearchValue,\n      changeCurrentPage\n    } = this.props;\n\n    const arg0 = {\n      currentPage: page,\n      pageSize: 10,\n      ...distriSearchValue\n    };\n    changeCurrentPage({\n      interCurrentPage: 1,\n      dispCurrentPage: page\n    });\n    queryAssignInterviewList(arg0);\n  };\n\n  componentWillUnmount() {\n    const { changeAssignInterviewList } = this.props;\n    changeAssignInterviewList([]);\n  }\n\n  //设置多选的禁用\n  getCheckboxPropsStatus = record => {\n    if (record.resumeStatus === 1) {\n      return null;\n    } else {\n      return { disabled: true };\n    }\n  };\n\n  render() {\n    const columns = this.columns;\n    const {\n      assignList = [],\n      selectedRowKeys,\n      assignTotal,\n      dispCurrentPage\n    } = this.props;\n\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n      getCheckboxProps: this.getCheckboxPropsStatus\n    };\n    return (\n      <div>\n        <Row className=\"distribution-table\">\n          <Col style={{ marginBottom: '20px' }}>\n            <Tooltip\n              title={\n                selectedRowKeys && selectedRowKeys.length\n                  ? ''\n                  : '请先选择分配项'\n              }\n            >\n              <Button\n                style={{ marginRight: '20px' }}\n                disabled={\n                  selectedRowKeys && selectedRowKeys.length ? false : true\n                }\n                onClick={this.handleOpenAssignModal}\n                type=\"primary\"\n              >\n                分配简历\n              </Button>\n            </Tooltip>\n          </Col>\n          <Col className=\"distribution-table-data\">\n            <Table\n              rowKey={(record, index) => record.id}\n              columns={columns}\n              rowSelection={rowSelection}\n              dataSource={assignList}\n              pagination={false}\n            />\n          </Col>\n          <Col className=\"distribution-paging\">\n            <Pagination\n              total={assignTotal}\n              showTotal={assignTotal => `共 ${assignTotal} 条数据`}\n              current={dispCurrentPage}\n              onChange={page => {\n                this.handleTableChange(page);\n              }}\n            />\n          </Col>\n          <AssignModal selectedRowKeys={selectedRowKeys} />\n          <DetailsModal />\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default DistributionTable;\n","import React, { Component } from 'react';\nimport { Row, Col, Button, Table, message, Tooltip, Pagination } from 'antd';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { actionCreators } from '../store';\nimport fetch from '../../../utils/axios.config';\n\nimport EditModal from './EidtModal.jsx';\nimport DetailsModal from './DetailsModal.jsx';\nimport './interviewTable.less';\n@connect(state => state.personnel, actionCreators)\nclass InterviewTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRowKeys: [],\n      updataId: '',\n      currentPage: 1\n    };\n    this.columns = [\n      {\n        title: '姓名',\n        dataIndex: 'resumeUserName',\n        width: '7%'\n      },\n\n      {\n        title: '电话',\n        dataIndex: 'resumeUserPhone',\n        width: '10%'\n      },\n      {\n        title: '项目名称',\n        dataIndex: 'projectName',\n        width: '7%',\n        onCell: () => {\n          return {\n            style: {\n              maxWidth: 100,\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n              textOverflow: 'ellipsis',\n              cursor: 'pointer'\n            }\n          };\n        },\n        render: text => (\n          <Tooltip placement=\"topLeft\" title={text}>\n            {text}\n          </Tooltip>\n        )\n      },\n      {\n        title: '截止时间',\n        dataIndex: 'interviewEndTime',\n        width: '10%',\n        render: (text, render) => {\n          return text ? moment(text).format('YYYY-MM-DD') : '';\n        }\n      },\n      {\n        title: '职位类型',\n        dataIndex: 'positionType',\n        width: '10%'\n      },\n      {\n        title: '招聘级别',\n        dataIndex: 'recruitmentLevel',\n        width: '8%'\n      },\n      {\n        title: '简历状态',\n        dataIndex: 'resumeStatus',\n        width: '7%',\n        render: (text, render) => {\n          switch (text) {\n            case 1:\n              return <span>待分配</span>;\n\n            case 2:\n              return <span>已分配</span>;\n            case 3:\n              return <span>待面试</span>;\n            case 4:\n              return <span>已面试</span>;\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '初面结果',\n        dataIndex: 'initialInterviewResult',\n        width: '7%',\n        render: (text, render) => {\n          switch (text) {\n            case 1:\n              return <span>通过</span>;\n\n            case 2:\n              return <span>不通过</span>;\n\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '终面结果',\n        dataIndex: 'finalInterviewResult',\n        width: '7%',\n        render: (text, render) => {\n          switch (text) {\n            case 1:\n              return <span>通过</span>;\n\n            case 2:\n              return <span>不通过</span>;\n            default:\n              break;\n          }\n        }\n      },\n      {\n        title: '建议级别',\n        dataIndex: 'interviewLevel',\n        width: '7%'\n      },\n      {\n        title: '操作',\n        dataIndex: 'buttons',\n        width: '30%',\n        render: (text, record) => {\n          const buttonsArr =\n            text &&\n            text.length &&\n            text.map(item => {\n              if (item === 'edit') {\n                return (\n                  <Button\n                    key={item}\n                    onClick={this.handleOpenEditModal.bind(this, record)}\n                    className=\"action-buttons\"\n                  >\n                    编辑\n                  </Button>\n                );\n              }\n              if (item === 'detail') {\n                return (\n                  <Button\n                    key={item}\n                    onClick={this.handleOpenDetailsModal.bind(this, record)}\n                    className=\"action-buttons\"\n                  >\n                    详情\n                  </Button>\n                );\n              }\n              if (item === 'interview') {\n                return (\n                  <Button\n                    key={item}\n                    onClick={this.handleAcquireInterview.bind(this, record)}\n                    className=\"action-buttons\"\n                  >\n                    面试\n                  </Button>\n                );\n              }\n              if (item === 'download') {\n                return (\n                  <Button\n                    key={item}\n                    onClick={this.handleDownload.bind(this, record)}\n                    className=\"action-buttons\"\n                  >\n                    下载\n                  </Button>\n                );\n              }\n            });\n          return buttonsArr;\n        }\n      }\n    ];\n  }\n\n  //下载\n  handleDownload = record => {\n    const url = record.resumeDownloadUrl;\n    console.log('url', url);\n    window.location.href = url;\n  };\n\n  //打开更新简历弹窗\n  handleOpenEditModal = record => {\n    const id = record.id;\n    const { changeEditModalVisible, dictInfo } = this.props;\n    changeEditModalVisible({\n      editModalVisible: true,\n      editRecord: record\n    });\n    dictInfo('wutong_position_level');\n    this.setState({\n      updataId: id\n    });\n  };\n\n  //打开详情弹窗\n  handleOpenDetailsModal = record => {\n    const id = record.id;\n    const { changeDetailsModalVisible, queryInterviewInfoById } = this.props;\n    changeDetailsModalVisible({\n      detailsVisible: true\n    });\n    queryInterviewInfoById(id);\n  };\n\n  //面试提交\n  handleAcquireInterview = record => {\n    const id = record.id;\n    const { queryInterviewList } = this.props;\n    fetch\n      .get('/api/interview/acquireInterview.json', {\n        params: {\n          id\n        }\n      })\n      .then(res => {\n        if (res && res.success) {\n          message.success('操作成功');\n          queryInterviewList();\n        } else {\n          message.error('操作失败：' + res.message && res.message);\n        }\n      })\n      .catch(err => {\n        if (err && err.data && err.data.message) {\n          message.error(err.data.message);\n        } else {\n          message.error('出错了');\n        }\n      });\n  };\n\n  //分页查询\n  handleTableChange = page => {\n    const {\n      queryInterviewList,\n      interviewSearchValue,\n      changeCurrentPage\n    } = this.props;\n\n    const arg0 = {\n      currentPage: page,\n      pageSize: 10,\n      ...interviewSearchValue\n    };\n    changeCurrentPage({\n      interCurrentPage: page,\n      dispCurrentPage: 1\n    });\n    queryInterviewList(arg0);\n  };\n\n  componentWillUnmount() {\n    const { changeQueryInterviewList } = this.props;\n    changeQueryInterviewList([]);\n  }\n  render() {\n    const columns = this.columns;\n    const { interviewList = [], interviewotal, interCurrentPage } = this.props;\n    const { updataId } = this.state;\n    return (\n      <div>\n        <Row className=\"interview-table\">\n          <Col className=\"interview-table-data\">\n            <Table\n              rowKey={(record, index) => record.id}\n              columns={columns}\n              dataSource={interviewList}\n              pagination={false}\n            />\n          </Col>\n          <Col className=\"interview-paging\">\n            <Pagination\n              total={interviewotal}\n              showTotal={interviewotal => `共 ${interviewotal} 条数据`}\n              current={interCurrentPage}\n              onChange={page => {\n                this.handleTableChange(page);\n              }}\n            />\n          </Col>\n          <EditModal updataId={updataId} />\n          <DetailsModal />\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default InterviewTable;\n","import React, { Component } from 'react';\nimport {\n  Modal,\n  Form,\n  Select,\n  Input,\n  Row,\n  Col,\n  Upload,\n  message,\n  Icon,\n  Button\n} from 'antd';\nimport { connect } from 'react-redux';\n\nimport { actionCreators } from '../store';\nimport './AddModal.less';\nconst { Option } = Select;\n\n@connect(state => state.personnel, actionCreators)\nclass AddModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileList: []\n    };\n  }\n\n  //关闭弹窗\n  handleCancel = () => {\n    const { changeAddModalVisible } = this.props;\n    changeAddModalVisible({\n      addModalvisible: false\n    });\n  };\n\n  handleGetDicInfo = key => {\n    const { dictInfo } = this.props;\n    dictInfo(key);\n  };\n\n  //提交\n  handleAddSubmit = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { addInterview } = this.props;\n        const { fileList } = this.state;\n        if (fileList && fileList.length > 0) {\n          let id = '';\n          fileList.forEach(item => {\n            if (\n              item.response &&\n              item.response.data &&\n              item.response.data.fileId\n            ) {\n              id = item.response.data.fileId;\n            }\n          });\n          values.fileId = id;\n          addInterview(values);\n        } else {\n          message.error('请上传简历');\n        }\n      }\n    });\n  };\n\n  //上传简历\n  handleChangeFile = ({ file, fileList }) => {\n    if (file && file.status === 'done' && file.response.success) {\n      if (file.response.data) {\n        if (fileList.length > 1) {\n          fileList.splice(0, 1);\n          this.setState({ fileList: [...fileList] });\n        }\n      } else {\n        message.error(\n          '上传图片失败' + file.response.message && file.response.message\n        );\n      }\n    }\n    if (file && file.status === 'done' && !file.response.success) {\n      message.error(\n        '上传图片失败' + file.response.message && file.response.message\n      );\n    }\n    if (file && file.status === 'error' && file.error.status === 401) {\n      message.error('上传失败，请重新登录');\n    }\n    this.setState({ fileList: [...fileList] });\n  };\n\n  //关闭回调\n  afterClose = () => {\n    this.setState({\n      fileList: []\n    });\n  };\n\n  render() {\n    const {\n      addModalvisible,\n      resourceMangeList = [],\n      ownerList = [],\n      leveList = [],\n      typeList = []\n    } = this.props;\n    const { fileList } = this.state;\n    const token = localStorage.getItem('token');\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    return (\n      <div>\n        <Modal\n          title=\"新建简历\"\n          visible={addModalvisible}\n          onOk={this.handleAddSubmit}\n          onCancel={this.handleCancel}\n          destroyOnClose={true}\n          afterClose={this.afterClose}\n          className=\"personnel-add-modal\"\n          okText=\"提交\"\n          cancelText=\"取消\"\n        >\n          <Form {...formItemLayout}>\n            <Form.Item label=\"姓名\" hasFeedback>\n              {getFieldDecorator('resumeUserName', {\n                rules: [\n                  {\n                    required: true,\n                    message: '不能为空'\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"电话\" hasFeedback>\n              {getFieldDecorator('resumeUserPhone', {\n                rules: [\n                  {\n                    required: true,\n                    message: '不能为空'\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"资源经理\" hasFeedback>\n              {getFieldDecorator('resourceManagerId', {\n                rules: [\n                  {\n                    required: true,\n                    message: '不能为空'\n                  }\n                ]\n              })(\n                <Select placeholder=\"请选择面试官\">\n                  {resourceMangeList.map(item => {\n                    return (\n                      <Option key={item.id} value={item.id}>\n                        {item.empName}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"简历来源\" hasFeedback>\n              {getFieldDecorator('resumeSource', {\n                rules: [\n                  {\n                    required: true,\n                    message: '不能为空'\n                  }\n                ]\n              })(\n                <Select\n                  onFocus={this.handleGetDicInfo.bind(this, 'owner_range')}\n                  placeholder=\"请选择简历来源\"\n                >\n                  {ownerList.map(item => {\n                    return (\n                      <Option key={item.id} value={item.value}>\n                        {item.label}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"招聘级别\" hasFeedback>\n              {getFieldDecorator('recruitmentLevel', {\n                rules: [\n                  {\n                    required: true,\n                    message: '不能为空'\n                  }\n                ]\n              })(\n                <Select\n                  onFocus={this.handleGetDicInfo.bind(\n                    this,\n                    'wutong_position_level'\n                  )}\n                  placeholder=\"请选择招聘级别\"\n                >\n                  {leveList.map(item => {\n                    return (\n                      <Option key={item.id} value={item.label}>\n                        {item.label}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"工作地点\" hasFeedback>\n              {getFieldDecorator('workAddress', {\n                rules: [\n                  {\n                    required: true,\n                    message: '不能为空'\n                  }\n                ]\n              })(<Input placeholder=\"请输入工作地点\" />)}\n            </Form.Item>\n            <Form.Item label=\"职位类型\" hasFeedback>\n              {getFieldDecorator('positionType', {\n                rules: [\n                  {\n                    required: true,\n                    message: '不能为空'\n                  }\n                ]\n              })(\n                <Select\n                  onFocus={this.handleGetDicInfo.bind(\n                    this,\n                    'wutong_position_type'\n                  )}\n                  placeholder=\"请选择职位类型\"\n                >\n                  {typeList.map(item => {\n                    return (\n                      <Option key={item.id} value={item.label}>\n                        {item.label}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Row>\n              <Col style={{ marginRight: '10px', textAlign: 'right' }} span={6}>\n                上传简历：\n              </Col>\n              <Col span={16}>\n                <Upload\n                  method=\"post\"\n                  headers={{\n                    Authorization: 'Bearer ' + token\n                  }}\n                  listType=\"personnel-card\"\n                  className=\"personnel-add-uploader\"\n                  // beforeUpload={this.beforeUpload.bind(this)}\n                  action=\"/api/file/uploadLocalStorageFile.json\"\n                  onChange={this.handleChangeFile.bind(this)}\n                  fileList={fileList}\n                >\n                  <Icon type=\"upload\" />{' '}\n                  <span className=\"personnel-add-uploader-elect\">选择文件</span>\n                </Upload>\n              </Col>\n            </Row>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default Form.create()(AddModal);\n","import React, { Component } from 'react';\nimport {\n  Row,\n  Col,\n  Tabs,\n  message,\n  Button,\n  Input,\n  Form,\n  Select,\n  Tooltip\n} from 'antd';\nimport { connect } from 'react-redux';\n\nimport { actionCreators } from './store';\nimport DistributionTable from './components/DistributionTable.jsx';\nimport InterviewTable from './components/InterviewTable.jsx';\nimport AddModal from './components/AddModal.jsx';\nimport {\n  resumeStatusList,\n  initialInterviewResultList,\n  finalInterviewResultList\n} from '../../utils/optionEnum';\nimport './index.less';\n\nconst { Search } = Input;\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n@connect(state => state.personnel, actionCreators)\nclass PersonnelInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeKye: 'interview',\n      searchValue: '',\n      distriSearchValue: {},\n      interviewSearchValue: {}\n    };\n  }\n\n  handleOpenAddModal = () => {\n    const {\n      changeAddModalVisible,\n      queryUserListInfoByRolePermission\n    } = this.props;\n    changeAddModalVisible({\n      addModalvisible: true\n    });\n    queryUserListInfoByRolePermission({\n      key: 'add',\n      value: 'resourceMange'\n    });\n  };\n\n  componentDidMount() {\n    const { queryInterviewList } = this.props;\n    const arg0 = {\n      currentPage: 1,\n      pageSize: 10\n    };\n    queryInterviewList(arg0);\n  }\n\n  //切换tab\n  handleChangeTabs = key => {\n    this.setState(\n      {\n        activeKye: key,\n        searchValue: ''\n      },\n      () => {\n        const {\n          queryAssignInterviewList,\n          queryInterviewList,\n          changeCurrentPage,\n          changeSelectedRowKeys\n        } = this.props;\n        switch (key) {\n          case 'distribution':\n            const arg0 = {\n              currentPage: 1,\n              pageSize: 10\n            };\n            queryAssignInterviewList(arg0);\n            break;\n          case 'interview':\n            const arg1 = {\n              currentPage: 1,\n              pageSize: 10\n            };\n            queryInterviewList(arg1);\n            break;\n          default:\n            break;\n        }\n        changeSelectedRowKeys([]);\n        changeCurrentPage({\n          interCurrentPage: 1,\n          dispCurrentPage: 1\n        });\n      }\n    );\n    this.handleEmptyCheck();\n  };\n\n  //输入框搜索\n  handleSearchInput = value => {\n    const { activeKye } = this.state;\n    const {\n      queryAssignInterviewList,\n      queryInterviewList,\n      changeCurrentPage\n    } = this.props;\n    if (activeKye === 'distribution') {\n      const arg0 = {\n        currentPage: 1,\n        pageSize: 10,\n        resumeUserPhone: value\n      };\n      queryAssignInterviewList(arg0);\n    }\n    if (activeKye === 'interview') {\n      const arg0 = {\n        currentPage: 1,\n        pageSize: 10,\n        resumeUserPhone: value\n      };\n      queryInterviewList(arg0);\n    }\n    changeCurrentPage({\n      interCurrentPage: 1,\n      dispCurrentPage: 1\n    });\n    this.handleEmptyCheck();\n  };\n\n  //清空查询表单\n  handleEmptyCheck = () => {\n    this.props.form.setFieldsValue({\n      resumeStatus: '',\n      initialInterviewResult: '',\n      finalInterviewResult: '',\n      interviewLevel: ''\n    });\n  };\n\n  //修改搜索框的值\n  handleChangeSearchInput = value => {\n    this.setState({\n      searchValue: value.target.value\n    });\n  };\n\n  //点击查询按钮\n  handleSearchList = () => {\n    this.props.form.validateFields((err, values) => {\n      const { activeKye } = this.state;\n      const {\n        queryAssignInterviewList,\n        queryInterviewList,\n        changeCurrentPage\n      } = this.props;\n      if (activeKye === 'distribution') {\n        const arg0 = {\n          currentPage: 1,\n          pageSize: 10,\n          ...values\n        };\n        queryAssignInterviewList(arg0);\n        this.setState({\n          distriSearchValue: values\n        });\n      }\n      if (activeKye === 'interview') {\n        const arg0 = {\n          currentPage: 1,\n          pageSize: 10,\n          ...values\n        };\n        queryInterviewList(arg0);\n        this.setState({\n          interviewSearchValue: values\n        });\n      }\n      changeCurrentPage({\n        interCurrentPage: 1,\n        dispCurrentPage: 1\n      });\n    });\n\n    this.setState({\n      searchValue: ''\n    });\n  };\n\n  handleGetDicInfo = key => {\n    const { dictInfo } = this.props;\n    dictInfo(key);\n  };\n\n  render() {\n    const {\n      activeKye,\n      searchValue,\n      distriSearchValue,\n      interviewSearchValue\n    } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    const { leveList } = this.props;\n    return (\n      <div className=\"personnel-interview\">\n        <Row className=\"personnel-search\">\n          <Col span={12} className=\"personnel-search-phone\">\n            <Search\n              style={{ width: '30%', marginLeft: '16px' }}\n              placeholder=\"输入电话号码查询\"\n              enterButton\n              onChange={value => this.handleChangeSearchInput(value)}\n              onSearch={value => this.handleSearchInput(value)}\n              value={searchValue}\n            />\n          </Col>\n          <Col span={12} className=\"personnel-add\">\n            <Button\n              style={{ marginRight: '20px' }}\n              onClick={this.handleOpenAddModal.bind(this)}\n              type=\"primary\"\n            >\n              新增简历\n            </Button>\n          </Col>\n        </Row>\n        <Row className=\"personnel-check\">\n          <Form>\n            <Col span={5}>\n              <Form.Item\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 16 }}\n                label=\"简历状态\"\n                hasFeedback\n              >\n                {getFieldDecorator(\n                  'resumeStatus',\n                  {}\n                )(\n                  <Select allowClear>\n                    {resumeStatusList.map(item => {\n                      return (\n                        <Option key={item.value} value={item.value}>\n                          {item.label}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={5}>\n              <Form.Item\n                labelCol={{ span: 5 }}\n                wrapperCol={{ span: 16 }}\n                label=\"初面结果\"\n                hasFeedback\n              >\n                {getFieldDecorator(\n                  'initialInterviewResult',\n                  {}\n                )(\n                  <Select allowClear>\n                    {initialInterviewResultList.map(item => {\n                      return (\n                        <Option key={item.value} value={item.value}>\n                          {item.label}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={5}>\n              <Form.Item\n                labelCol={{ span: 5 }}\n                wrapperCol={{ span: 16 }}\n                label=\"终面结果\"\n                hasFeedback\n              >\n                {getFieldDecorator(\n                  'finalInterviewResult',\n                  {}\n                )(\n                  <Select allowClear>\n                    {finalInterviewResultList.map(item => {\n                      return (\n                        <Option key={item.value} value={item.value}>\n                          {item.label}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={5}>\n              <Form.Item\n                labelCol={{ span: 5 }}\n                wrapperCol={{ span: 16 }}\n                label=\"建议级别\"\n                hasFeedback\n              >\n                {getFieldDecorator(\n                  'interviewLevel',\n                  {}\n                )(\n                  <Select\n                    allowClear\n                    onFocus={this.handleGetDicInfo.bind(\n                      this,\n                      'wutong_position_level'\n                    )}\n                  >\n                    {leveList.map(item => {\n                      return (\n                        <Option key={item.id} value={item.label}>\n                          {item.label}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={4} style={{ textAlign: 'right' }}>\n              <Button\n                type=\"primary\"\n                style={{\n                  width: '88px',\n                  marginTop: '3px',\n                  marginRight: '8%'\n                }}\n                onClick={this.handleSearchList.bind(this)}\n              >\n                查询\n              </Button>\n            </Col>\n          </Form>\n        </Row>\n        <Row className=\"personnel-content\">\n          <Col span={24}>\n            <Tabs\n              animated={false}\n              defaultActiveKey={activeKye}\n              onChange={this.handleChangeTabs}\n            >\n              <TabPane tab=\"简历面试\" key=\"interview\">\n                <InterviewTable interviewSearchValue={interviewSearchValue} />\n              </TabPane>\n              <TabPane tab=\"简历分配\" key=\"distribution\">\n                <DistributionTable\n                  distriSearchValue={distriSearchValue}\n                  activeKye={activeKye}\n                />\n              </TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n        <AddModal />\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(PersonnelInformation);\n","import { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  IncumbencyRouterList,\n  inserviceRouterList\n} from '../../utils/router.config.js';\n\nclass FrontendAuth extends Component {\n  componentWillReceiveProps(nextProps) {\n    const { pathname } = this.props.location;\n    const flag = localStorage.getItem('flag');\n    // 判断登录情况，如果是登录状态跳转至当前页面，如果不是登录状态跳转至登录页\n    if ((flag === null || flag === 'false') && pathname !== '/login') {\n      if (IncumbencyRouterList.includes(pathname)) {\n        this.props.history.push('/login');\n      }\n      if (inserviceRouterList.includes(pathname)) {\n        this.props.history.push('/interview/login');\n      }\n      return;\n    }\n  }\n  componentDidMount() {\n    const { pathname } = this.props.location;\n    const flag = localStorage.getItem('flag');\n    // 判断登录情况，如果是登录状态跳转至当前页面，如果不是登录状态跳转至登录页\n    if ((flag === null || flag === 'false') && pathname !== '/login') {\n      this.props.history.push('/login');\n      return;\n    }\n  }\n  render() {\n    return null;\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\nexport default connect(mapStateToProps)(withRouter(FrontendAuth));\n","import React, { Component } from 'react';\nimport {\n  HashRouter,\n  Route,\n  Switch,\n  Redirect,\n  withRouter\n} from 'react-router-dom';\nimport Home from '../Home'; //首页\nimport Header from '../../components/Header'; //头部导航栏\nimport Login from '../Login'; //登录页面\nimport Register from '../Register';\nimport Error from '../../components/Error'; //404页面\nimport BasicInformation from '../BasicInformation'; //基础信息页面\nimport EducationInfo from '../EducationInfo'; //学历信息页面\nimport ProjectInformation from '../ProjectInformation'; //项目信息页面\nimport Department from '../Department'; //部门调整页面\nimport Leave from '../Leave'; //离职离项页面\nimport Analysis from '../Analysis/'; //数据分析页面\nimport PersonnelInformation from '../PersonnelInformation/index'; //内面系统人员信息页面\n\n//路由配置\nimport { allRouterList } from '../../utils/router.config.js';\n\nimport FrontendAuth from '../../components/FrontendAuth'; //根据是否存有token值，判断是否登录\n\nclass Layout extends Component {\n  render() {\n    const flag = localStorage.getItem('flag');\n    const { pathname } = this.props.location;\n    return (\n      <div style={{ minWidth: '1300px' }}>\n        <FrontendAuth />\n        {allRouterList.includes(pathname) && <Header />}\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/interview/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          {/* {flag === 'false' ? (\n            <Redirect to=\"/login\" />\n          ) : (\n            <Route exact path=\"/\" component={Home} />\n          )} */}\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/interview/home\" component={Home} />\n          <Route path=\"/basic\" component={BasicInformation} />\n          <Route path=\"/education\" component={EducationInfo} />\n          <Route path=\"/project\" component={ProjectInformation} />\n          {/* <Route path=\"/department\" component={Department} />\n          <Route path=\"/leave\" component={Leave} />*/}\n          <Route path=\"/analysis\" component={Analysis} />\n          <Route path=\"/interview/personnel\" component={PersonnelInformation} />\n          <Route component={Error} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Layout);\n","import React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport Layout from './page/Layout';\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Layout />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport moment from 'moment';\nimport { Provider } from 'react-redux';\nimport 'moment/locale/zh-cn';\nimport './index.css';\nimport store from './store'\nimport App from './App';\nmoment.locale('zh-cn');\n\n \nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}